import React from 'react';
import { useObserver } from 'mobx-react';
import { Tooltip } from 'teespace-core';

const REM_UNIT = 16;

export const ChattingIcon = React.memo(
  ({ width = 1, height = 1, color = '#ffffff', tooltipText }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    const icon = (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/talk"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M18.593,1.0004 C21.569,1.0004 23.991,3.5044 23.991,6.5844 L23.991,6.5844 L23.991,10.1364 C23.991,12.6964 22.268,14.9024 19.928,15.5244 L19.928,15.5244 L19.928,17.7054 C19.928,18.0654 19.734,18.3974 19.422,18.5744 C19.269,18.6614 19.098,18.7054 18.928,18.7054 C18.75,18.7054 18.574,18.6584 18.416,18.5644 L18.416,18.5644 L17.292,17.8944 C16.28,19.2174 14.752,20.0154 13.095,20.0154 L13.095,20.0154 L10.351,20.0154 L5.575,22.8594 C5.417,22.9534 5.241,23.0004 5.063,23.0004 C4.893,23.0004 4.723,22.9564 4.569,22.8694 C4.257,22.6914 4.063,22.3594 4.063,22.0004 L4.063,22.0004 L4.063,19.8194 C1.723,19.1974 -4.26325641e-14,16.9914 -4.26325641e-14,14.4314 L-4.26325641e-14,14.4314 L-4.26325641e-14,10.8784 C-4.26325641e-14,7.7994 2.422,5.2944 5.398,5.2944 L5.398,5.2944 L5.674,5.2944 C6.241,2.8244 8.376,1.0004 10.896,1.0004 L10.896,1.0004 Z M5.498,7.2944 L5.398,7.2944 C3.524,7.2944 2,8.9024 2,10.8784 L2,10.8784 L2,14.4314 C2,16.2814 3.381,17.8424 5.143,17.9834 C5.663,18.0244 6.063,18.4584 6.063,18.9804 L6.063,18.9804 L6.063,20.2404 L9.563,18.1554 C9.718,18.0644 9.895,18.0154 10.075,18.0154 L10.075,18.0154 L13.095,18.0154 C14.043,18.0154 14.932,17.5904 15.565,16.8664 L15.565,16.8664 L13.641,15.7204 L10.896,15.7204 C7.919,15.7204 5.498,13.2154 5.498,10.1364 L5.498,10.1364 L5.498,7.2944 Z M18.593,3.0004 L10.896,3.0004 C9.12,3.0004 7.639,4.4734 7.524,6.3554 L7.524,6.3554 C7.52,6.4204 7.513,6.4844 7.504,6.5484 L7.504,6.5484 L7.498,10.1364 C7.498,12.1124 9.022,13.7204 10.896,13.7204 L10.896,13.7204 L13.916,13.7204 C14.096,13.7204 14.273,13.7694 14.428,13.8604 L14.428,13.8604 L17.489,15.6834 L17.49,15.6854 L17.928,15.9454 L17.928,14.6854 C17.928,14.1634 18.328,13.7304 18.848,13.6884 C20.61,13.5474 21.991,11.9864 21.991,10.1364 L21.991,10.1364 L21.991,6.5844 C21.991,4.6074 20.467,3.0004 18.593,3.0004 L18.593,3.0004 Z M18.0379,9.4253 C18.5899,9.4253 19.0379,9.8733 19.0379,10.4253 C19.0379,10.9773 18.5899,11.4253 18.0379,11.4253 L18.0379,11.4253 L11.4409,11.4253 C10.8889,11.4253 10.4409,10.9773 10.4409,10.4253 C10.4409,9.8733 10.8889,9.4253 11.4409,9.4253 L11.4409,9.4253 Z M18.0379,5.4868 C18.5899,5.4868 19.0379,5.9348 19.0379,6.4868 C19.0379,7.0388 18.5899,7.4868 18.0379,7.4868 L18.0379,7.4868 L11.4409,7.4868 C10.8889,7.4868 10.4409,7.0388 10.4409,6.4868 C10.4409,5.9348 10.8889,5.4868 11.4409,5.4868 L11.4409,5.4868 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );

    if (tooltipText) {
      return (
        <Tooltip title={tooltipText} placement="bottom" color="#4C535D">
          {icon}
        </Tooltip>
      );
    }
    return icon;
  },
);

export const ChattingActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/talk_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M2.7405,7.8633 C3.1575,7.7383 3.5235,7.9153 3.5145,8.3783 C3.5075,8.7183 3.4995,9.0563 3.4995,9.3983 L3.4995,9.3983 L3.4995,10.3773 C3.4995,11.7933 3.9855,13.0933 4.7915,14.1283 C5.6885,15.4373 7.1095,16.3113 8.7285,16.4053 C9.0035,16.4433 9.2815,16.4703 9.5655,16.4703 L9.5655,16.4703 L11.8935,16.4703 C12.1735,16.4703 12.4535,16.4783 12.7335,16.4573 C13.1155,16.4263 13.5025,16.5133 13.8345,16.7063 C14.0815,16.8483 14.3285,16.9883 14.5735,17.1333 L14.5735,17.1333 L14.9995,17.3793 C15.1595,17.4713 15.3185,17.5633 15.4775,17.6553 C15.7925,17.8373 15.9765,18.0143 15.7615,18.3813 C14.9935,19.6933 13.3445,20.5053 11.8665,20.5053 L11.8665,20.5053 L9.6535,20.5053 L5.5205,22.8913 C4.9875,23.2003 4.3225,22.8133 4.3225,22.1953 L4.3225,22.1953 L4.3225,20.4683 C1.9075,20.2813 -0.0005,18.2633 -0.0005,15.7753 L-0.0005,15.7753 L-0.0005,12.1103 C-0.0005,11.9713 0.0055,11.8343 0.0175,11.6973 C0.0885,10.8773 0.3785,10.0833 0.8525,9.4113 C1.2915,8.7903 1.9935,8.0883 2.7405,7.8633 Z M18.9005,1.0002 C21.6155,1.0002 24.0005,3.3632 24.0005,6.2772 L24.0005,6.2772 L24.0005,9.5122 C24.0005,12.2312 21.9285,14.4472 19.4595,14.7332 L19.4595,14.7332 L19.4595,16.9902 C19.4595,17.5282 18.8555,17.8552 18.3915,17.5702 L18.3915,17.5702 L13.8585,14.7892 L10.2995,14.7892 C7.5845,14.7892 5.3835,12.4272 5.3835,9.5122 L5.3835,9.5122 L5.3835,6.2772 C5.3835,3.3632 7.5845,1.0002 10.2995,1.0002 L10.2995,1.0002 Z M18.0425,8.9032 L11.4455,8.9032 C10.8935,8.9032 10.4455,9.3502 10.4455,9.9032 C10.4455,10.4562 10.8935,10.9032 11.4455,10.9032 L11.4455,10.9032 L18.0425,10.9032 C18.5945,10.9032 19.0425,10.4562 19.0425,9.9032 C19.0425,9.3502 18.5945,8.9032 18.0425,8.9032 L18.0425,8.9032 Z M18.0425,4.9932 L11.4455,4.9932 C10.8935,4.9932 10.4455,5.4402 10.4455,5.9932 C10.4455,6.5462 10.8935,6.9932 11.4455,6.9932 L11.4455,6.9932 L18.0425,6.9932 C18.5945,6.9932 19.0425,6.5462 19.0425,5.9932 C19.0425,5.4402 18.5945,4.9932 18.0425,4.9932 L18.0425,4.9932 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MailIcon = React.memo(
  ({ width = 1, height = 1, color = '#ffffff', tooltipText }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    const icon = (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/mail_1"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M10.265,2.4075 C11.367,1.8645 12.633,1.8645 13.735,2.4075 L13.735,2.4075 L20.735,5.8565 C22.111,6.5355 23,7.9835 23,9.5455 L23,9.5455 L23,17.9075 C23,20.1655 21.206,22.0025 19,22.0025 L19,22.0025 L5,22.0025 C2.794,22.0025 1,20.1655 1,17.9075 L1,17.9075 L1,9.5455 C1,7.9835 1.889,6.5355 3.264,5.8565 L3.264,5.8565 Z M12,4.0015 C11.709,4.0015 11.419,4.0675 11.148,4.2015 L11.148,4.2015 L4.148,7.6505 C3.451,7.9945 3,8.7385 3,9.5455 L3,9.5455 L3,17.9075 C3,19.0625 3.897,20.0025 5,20.0025 L5,20.0025 L19,20.0025 C20.103,20.0025 21,19.0625 21,17.9075 L21,17.9075 L21,9.5455 C21,8.7385 20.549,7.9945 19.851,7.6505 L19.851,7.6505 L12.852,4.2015 C12.581,4.0675 12.291,4.0015 12,4.0015 Z M17.9458,10.3946 C18.4038,10.0876 19.0258,10.2126 19.3318,10.6726 C19.6378,11.1326 19.5138,11.7526 19.0548,12.0586 L19.0548,12.0586 L15.8158,14.2176 L19.0358,16.2616 C19.5018,16.5576 19.6398,17.1756 19.3438,17.6416 C19.1538,17.9416 18.8298,18.1056 18.4988,18.1056 C18.3158,18.1056 18.1308,18.0556 17.9648,17.9506 L17.9648,17.9506 L11.9998,14.1646 L6.0358,17.9506 C5.5688,18.2456 4.9518,18.1076 4.6558,17.6416 C4.3598,17.1756 4.4978,16.5576 4.9648,16.2616 L4.9648,16.2616 L8.1848,14.2176 L4.9458,12.0586 C4.4858,11.7526 4.3618,11.1326 4.6678,10.6726 C4.9738,10.2126 5.5948,10.0876 6.0548,10.3946 L6.0548,10.3946 L10.0318,13.0456 L11.4648,12.1366 C11.7908,11.9286 12.2098,11.9286 12.5358,12.1366 L12.5358,12.1366 L13.9688,13.0456 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );

    if (tooltipText) {
      return (
        <Tooltip title={tooltipText} placement="bottom" color="#4C535D">
          {icon}
        </Tooltip>
      );
    }
    return icon;
  },
);

export const MailActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/mail_1_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M19.3442,17.6401 C19.1542,17.9401 18.8302,18.1041 18.4992,18.1041 C18.3162,18.1041 18.1302,18.0541 17.9642,17.9491 L12.0002,14.1621 L6.0362,17.9491 C5.5682,18.2441 4.9512,18.1061 4.6562,17.6401 C4.3602,17.1731 4.4982,16.5561 4.9642,16.2591 L8.1832,14.2151 L4.9452,12.0571 C4.4862,11.7501 4.3622,11.1301 4.6682,10.6701 C4.9732,10.2101 5.5942,10.0861 6.0542,10.3931 L10.0312,13.0431 L11.4642,12.1331 C11.7912,11.9261 12.2092,11.9261 12.5362,12.1331 L13.9692,13.0421 L17.9452,10.3931 C18.4042,10.0861 19.0262,10.2101 19.3322,10.6701 C19.6382,11.1301 19.5142,11.7511 19.0542,12.0571 L15.8162,14.2151 L19.0362,16.2591 C19.5022,16.5561 19.6402,17.1731 19.3442,17.6401 M21.1222,6.1681 L13.4232,2.3351 C12.5232,1.8881 11.4772,1.8881 10.5772,2.3351 L2.8772,6.1681 C1.7302,6.7401 1.0002,7.9461 1.0002,9.2701 L1.0002,18.5621 C1.0002,20.4601 2.4772,21.9991 4.3002,21.9991 L19.7002,21.9991 C21.5222,21.9991 23.0002,20.4601 23.0002,18.5621 L23.0002,9.2701 C23.0002,7.9461 22.2692,6.7401 21.1222,6.1681"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const PeopleIcon = React.memo(
  ({ width = 1, height = 1, color = '#ffffff', tooltipText }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;
    const icon = (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/friends"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1 Z M12,3 C7.037,3 3,7.038 3,12 C3,16.962 7.037,21 12,21 C16.963,21 21,16.962 21,12 C21,7.038 16.963,3 12,3 Z M16.476,12.2185 C16.923,11.8605 17.563,11.9515 17.903,12.4225 C18.244,12.8935 18.157,13.5645 17.71,13.9225 C16.252,15.0905 14.339,15.6625 12.002,15.6665209 C9.662,15.6705 7.748,15.0995 6.289,13.9275 C5.842,13.5685 5.757,12.8955 6.098,12.4265 C6.44,11.9565 7.079,11.8665 7.525,12.2255 C8.598,13.0855 10.078,13.5275 11.998,13.5245 C13.92,13.5215 15.402,13.0775 16.476,12.2185 Z M14.4443,8.3338 C15.1193,8.3338 15.6673,8.8808 15.6673,9.5558 C15.6673,10.2308 15.1193,10.7778 14.4443,10.7778 C13.7693,10.7778 13.2223,10.2308 13.2223,9.5558 C13.2223,8.8808 13.7693,8.3338 14.4443,8.3338 Z M9.5557,8.3338 C10.2307,8.3338 10.7777,8.8808 10.7777,9.5558 C10.7777,10.2308 10.2307,10.7778 9.5557,10.7778 C8.8807,10.7778 8.3327,10.2308 8.3327,9.5558 C8.3327,8.8808 8.8807,8.3338 9.5557,8.3338 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );

    return useObserver(() => {
      return (
        <Tooltip title={tooltipText} placement="bottom" color="#4C535D">
          {icon}
        </Tooltip>
      );
    });
  },
);

export const PeopleActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/friends_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M17.71,13.9229 C16.252,15.0899 14.339,15.6629 12.002,15.6669209 C9.662,15.6709 7.748,15.0999 6.289,13.9279 C5.842,13.5689 5.757,12.8969 6.098,12.4259 C6.439,11.9559 7.079,11.8659 7.525,12.2259 C8.598,13.0859 10.078,13.5279 11.998,13.5249 C13.92,13.5219 15.402,13.0779 16.476,12.2189 C16.923,11.8599 17.563,11.9509 17.903,12.4219 C18.244,12.8929 18.157,13.5649 17.71,13.9229 M9.556,8.3329 C10.231,8.3329 10.777,8.8809 10.777,9.5559 C10.777,10.2309 10.231,10.7769 9.556,10.7769 C8.881,10.7769 8.333,10.2309 8.333,9.5559 C8.333,8.8809 8.881,8.3329 9.556,8.3329 M14.444,8.3329 C15.119,8.3329 15.667,8.8809 15.667,9.5559 C15.667,10.2309 15.119,10.7769 14.444,10.7769 C13.77,10.7769 13.223,10.2309 13.223,9.5559 C13.223,8.8809 13.77,8.3329 14.444,8.3329 M12,0.9999 C5.925,0.9999 1,5.9249 1,11.9999 C1,18.0749 5.925,22.9999 12,22.9999 C18.075,22.9999 23,18.0749 23,11.9999 C23,5.9249 18.075,0.9999 12,0.9999"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ExportIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/export"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M17.5553,1 C20.5573,1 23.0003,3.442 23.0003,6.444 L23.0003,6.444 L23.0003,9.43 C23.0003,9.982 22.5523,10.43 22.0003,10.43 C21.4473,10.43 21.0003,9.982 21.0003,9.43 L21.0003,9.43 L21.0003,8 L3.0003,8 L3.0003,17.556 C3.0003,19.455 4.5453,21 6.4443,21 L6.4443,21 L9.4433,21 C9.9963,21 10.4433,21.448 10.4433,22 C10.4433,22.552 9.9963,23 9.4433,23 L9.4433,23 L6.4443,23 C3.4423,23 1.0003,20.558 1.0003,17.556 L1.0003,17.556 L1.0003,6.444 C1.0003,3.442 3.4423,1 6.4443,1 L6.4443,1 Z M15.454,11.9598 L20.611,11.9788 C21.378,11.9838 22,12.6098 22,13.3738 L22,13.3738 L22,18.5308 C22,19.0828 21.553,19.5308 21,19.5308 C20.447,19.5308 20,19.0828 20,18.5308 L20,18.5308 L20,15.3928 L13.686,21.7068 C13.49,21.9028 13.234,21.9998 12.979,21.9998 C12.723,21.9998 12.467,21.9028 12.271,21.7068 C11.881,21.3168 11.881,20.6838 12.271,20.2928 L12.271,20.2928 L18.594,13.9708 L15.446,13.9598 C14.895,13.9578 14.448,13.5088 14.45,12.9558 C14.452,12.4048 14.899,11.9598 15.45,11.9598 L15.45,11.9598 L15.454,11.9598 Z M17.5553,3 L6.4443,3 C4.6973,3 3.2653,4.312 3.0453,6 L3.0453,6 L20.9553,6 C20.7343,4.312 19.3023,3 17.5553,3 L17.5553,3 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const SearchIcon = React.memo(
  ({ width = 1, height = 1, color = 'rgb(107, 107, 107)' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/search"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M10.6826,1 C16.0216,1 20.3646,5.375 20.3646,10.752 C20.3646,13.042 19.5726,15.145 18.2556,16.81 L18.2556,16.81 L22.1736,20.76 L22.7096,21.301 C23.0986,21.693 23.0966,22.326 22.7036,22.715 C22.5086,22.908 22.2546,23.005 21.9996,23.005 C21.7436,23.005 21.4856,22.906 21.2896,22.709 L21.2896,22.709 L17.8786,19.271 C17.8786,19.27 17.8776,19.269 17.8776,19.269 L17.8776,19.269 L16.8666,18.249 C15.1876,19.656 13.0326,20.504 10.6826,20.504 C5.3436,20.504 0.9996,16.129 0.9996,10.752 C0.9996,5.375 5.3436,1 10.6826,1 Z M10.6826,3 C6.4466,3 2.9996,6.478 2.9996,10.752 C2.9996,15.027 6.4466,18.504 10.6826,18.504 C14.9176,18.504 18.3646,15.027 18.3646,10.752 C18.3646,6.478 14.9176,3 10.6826,3 Z M10.284,4.5271 C10.837,4.5271 11.284,4.9751 11.284,5.5271 C11.284,6.0791 10.837,6.5271 10.284,6.5271 C8.197,6.5271 6.499,8.2421 6.499,10.3511 C6.499,10.9031 6.052,11.3511 5.499,11.3511 C4.946,11.3511 4.499,10.9031 4.499,10.3511 C4.499,7.1401 7.094,4.5271 10.284,4.5271 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const AddAcountIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/add_friends"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M19.504,15.0063807 C20.057,15.0063807 20.504,15.4538593 20.504,16.0074514 L20.504,16.0074514 L20.504,18.5021197 L23,18.5021197 C23.553,18.5021197 24,18.9495983 24,19.5031904 C24,20.0567825 23.553,20.5042611 23,20.5042611 L23,20.5042611 L20.504,20.5042611 L20.504,22.9989293 C20.504,23.5525214 20.057,24 19.504,24 C18.951,24 18.504,23.5525214 18.504,22.9989293 L18.504,22.9989293 L18.504,20.5042611 L16.009,20.5042611 C15.456,20.5042611 15.009,20.0567825 15.009,19.5031904 C15.009,18.9495983 15.456,18.5021197 16.009,18.5021197 L16.009,18.5021197 L18.504,18.5021197 L18.504,16.0074514 C18.504,15.4538593 18.951,15.0063807 19.504,15.0063807 Z M12,1 C18.065,1 23,5.94028396 23,12.0117778 C23,12.5653699 22.553,13.0128485 22,13.0128485 C21.447,13.0128485 21,12.5653699 21,12.0117778 C21,7.04346388 16.963,3.00214142 12,3.00214142 C7.037,3.00214142 3,7.04346388 3,12.0117778 C3,16.9800918 7.037,21.0214142 12,21.0214142 C12.553,21.0214142 13,21.4688928 13,22.0224849 C13,22.576077 12.553,23.0235556 12,23.0235556 C5.935,23.0235556 1,18.0832717 1,12.0117778 C1,5.94028396 5.935,1 12,1 Z M16.4757,12.2308121 C16.9227,11.8724288 17.5627,11.9635262 17.9037,12.4340294 C18.2437,12.9055337 18.1577,13.5782533 17.7097,13.9366366 C16.2517,15.1048861 14.3387,15.6784996 12.0017,15.6825248 C9.6617,15.6865082 7.7477,15.1148968 6.2887,13.9406409 C5.8417,13.5822575 5.7567,12.909538 6.0977,12.4380337 C6.4397,11.9675305 7.0787,11.8774341 7.5257,12.2378196 C8.5977,13.0987404 10.0777,13.5422147 11.9977,13.5382104 C13.9197,13.5352072 15.4027,13.0907318 16.4757,12.2308121 Z M14.444,8.3405512 C15.119,8.3405512 15.667,8.88913795 15.667,9.56486068 C15.667,10.2405834 15.119,10.7881691 14.444,10.7881691 C13.77,10.7881691 13.223,10.2405834 13.223,9.56486068 C13.223,8.88913795 13.77,8.3405512 14.444,8.3405512 Z M9.5553,8.3405512 C10.2303,8.3405512 10.7773,8.88913795 10.7773,9.56486068 C10.7773,10.2405834 10.2303,10.7881691 9.5553,10.7881691 C8.8813,10.7881691 8.3333,10.2405834 8.3333,9.56486068 C8.3333,8.88913795 8.8813,8.3405512 9.5553,8.3405512 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ViewMoreIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/view_more"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M10,14 C10.6875,14 11.25,14.5625 11.25,15.25 C11.25,15.9375 10.6875,16.5 10,16.5 C9.3125,16.5 8.75,15.9375 8.75,15.25 C8.75,14.5625 9.3125,14 10,14 Z M10,9 C10.6875,9 11.25,9.5625 11.25,10.25 C11.25,10.9375 10.6875,11.5 10,11.5 C9.3125,11.5 8.75,10.9375 8.75,10.25 C8.75,9.5625 9.3125,9 10,9 Z M10,4 C10.6875,4 11.25,4.5625 11.25,5.25 C11.25,5.9375 10.6875,6.5 10,6.5 C9.3125,6.5 8.75,5.9375 8.75,5.25 C8.75,4.5625 9.3125,4 10,4 Z"
          id="Combined-Shape"
          fill="#7B7671"
        />
      </g>
    </svg>
  );
});

export const WaplSymbol = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 21;
  const defaultHeight = 21;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        fill="none"
        fillRule="evenodd"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
      >
        <g fillRule="nonzero">
          <g>
            <g>
              <path
                fill="#9D917E"
                d="M15.727 11.227l.077.07.498.508.46-.468c.345-.352.878-.396 1.27-.132l.082.061.077.07c.37.377.393.973.07 1.377l-.07.078-.46.468.877.893c.345.351.388.894.13 1.293l-.06.083-.07.078c-.192.196-.449.302-.715.302-.233 0-.458-.081-.64-.233l-.074-.069-.877-.892-1.627 1.655.878.89c.346.35.39.893.131 1.293l-.06.083-.069.079c-.192.196-.449.302-.716.302-.232 0-.457-.08-.638-.231l-.075-.069-.88-.892-1.841 1.875c-.144.146-.324.242-.518.281l-.097.015-.1.005c-.266 0-.522-.106-.714-.301-.37-.377-.393-.973-.07-1.377l.07-.078 1.839-1.873-.498-.504c-.346-.351-.39-.894-.132-1.293l.06-.084.07-.078c.369-.377.954-.402 1.352-.073l.076.07.5.508 1.63-1.658-.499-.507c-.345-.352-.388-.894-.129-1.293l.06-.084.07-.078c.37-.376.955-.4 1.352-.07z"
                transform="translate(-19 -358) translate(13 352) translate(6 6)"
              />
              <path
                fill="#D77D71"
                d="M18.627 4.53c.37.377.393.973.069 1.377l-.07.078-1.041 1.06 2.119 2.157c.37.376.393.972.07 1.376l-.07.078c-.192.196-.448.302-.715.302-.232 0-.458-.081-.64-.233l-.074-.069-2.12-2.156-7.65 7.785.56.568c.37.376.392.972.069 1.376l-.07.079c-.192.195-.448.3-.714.3-.233 0-.459-.08-.64-.231l-.075-.07-.558-.568-.872.89c-.168.17-.385.273-.615.296l-.1.005c-.266 0-.522-.106-.714-.302-.37-.376-.393-.972-.07-1.376l.07-.078 3.977-4.049-.52-.517c-.375-.372-.405-.968-.087-1.376l.069-.079c.365-.38.95-.412 1.351-.087l.078.07.538.534 1.565-1.593-.523-.532c-.37-.377-.393-.972-.07-1.377l.07-.078c.37-.376.955-.4 1.352-.07l.077.07.523.533 1.55-1.578-.522-.533c-.37-.376-.394-.972-.07-1.376l.07-.079c.37-.376.955-.4 1.352-.07l.077.07.522.533 1.042-1.06c.395-.402 1.035-.402 1.43 0z"
                transform="translate(-19 -358) translate(13 352) translate(6 6)"
              />
              <path
                fill="#46756C"
                d="M15.296 1.21l.077.07c.37.377.393.973.069 1.377l-.07.078-10.09 10.27.44.447c.372.376.396.971.074 1.376l-.07.079c-.192.196-.449.303-.716.303-.232 0-.457-.08-.638-.231l-.075-.069-.444-.45-.902.919c-.168.17-.385.273-.615.296l-.1.005c-.266 0-.522-.106-.714-.301-.37-.377-.393-.973-.07-1.377l.07-.078.898-.914-2.122-2.15c-.371-.375-.396-.971-.073-1.376l.07-.078c.368-.378.954-.403 1.351-.075l.077.07 2.126 2.154L5.53 9.844l-.512-.522c-.37-.377-.393-.973-.07-1.377l.07-.078c.37-.376.955-.4 1.352-.07l.077.07.512.523 1.565-1.594-.513-.521c-.37-.377-.393-.973-.07-1.377l.07-.078c.37-.376.956-.4 1.353-.07l.076.07.513.522 1.55-1.578-.512-.522c-.37-.377-.393-.973-.07-1.377l.07-.078c.37-.376.955-.4 1.352-.07l.077.07.512.522 1.011-1.028c.37-.377.956-.4 1.353-.071z"
                transform="translate(-19 -358) translate(13 352) translate(6 6)"
              />
              <path
                fill="#72A286"
                d="M9.986.301c.37.377.393.973.07 1.377l-.07.078L3.24 8.622c-.192.195-.449.301-.715.301-.266 0-.523-.106-.715-.301-.37-.377-.393-.973-.069-1.377l.07-.078.544-.554-.943-.96c-.345-.351-.388-.894-.13-1.293l.06-.084.07-.078c.37-.376.956-.4 1.353-.07l.076.07.943.96 1.564-1.593-.942-.959c-.346-.351-.389-.894-.13-1.293l.06-.084.07-.078c.37-.376.955-.4 1.352-.07l.077.07.942.96L8.557.3C8.95-.1 9.59-.1 9.986.301z"
                transform="translate(-19 -358) translate(13 352) translate(6 6)"
              />
            </g>
          </g>
        </g>
      </g>
    </svg>
  );
});

export const WaplLogo = React.memo(
  ({ width = 6.625, height = 1.875, textColor = '#232D3B' }) => {
    const defaultWidth = 106;
    const defaultHeight = 30;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Logo/Wapl/basic"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <g
            id="Group"
            transform="translate(35.000000, 2.000000)"
            fill={textColor}
          >
            <path
              d="M20.0254972,9 C20.9852299,9 21.7715068,9.74800341 21.8410035,10.6967714 L21.8459969,10.8336163 L21.8459969,20.0016978 C21.8459969,23.5460719 18.9932677,26.4193548 15.4742478,26.4193548 C13.6910592,26.4193548 12.0789567,25.6815703 10.9224284,24.4925391 C9.76704024,25.6815703 8.15493774,26.4193548 6.37174911,26.4193548 C2.85272925,26.4193548 -2.06057393e-13,23.5460719 -2.06057393e-13,20.0016978 L-2.06057393e-13,10.8336163 L0.00499339089,10.6967714 C0.0744901874,9.74800341 0.860767055,9 1.82049975,9 C2.78023243,9 3.5665093,9.74800341 3.6360061,10.6967714 L3.64099949,10.8336163 L3.64099949,20.0016978 C3.64099949,21.5207153 4.86359774,22.7521222 6.37174911,22.7521222 C7.87990048,22.7521222 9.10249873,21.5207153 9.10249873,20.0016978 L9.10249873,10.8336163 L9.10749212,10.6967714 C9.17698891,9.74800341 9.96326578,9 10.9229985,9 C11.8827312,9 12.669008,9.74800341 12.7385048,10.6967714 L12.7434982,10.8336163 L12.7434982,20.0016978 C12.7434982,21.5207153 13.9660965,22.7521222 15.4742478,22.7521222 C16.9823992,22.7521222 18.2049975,21.5207153 18.2049975,20.0016978 L18.2049975,10.8336163 L18.2099908,10.6967714 C18.2794876,9.74800341 19.0657645,9 20.0254972,9 Z M30.9484957,9 C34.9702327,9 38.2304946,12.2837519 38.2304946,16.3344652 L38.2304946,24.5857385 C38.2304946,25.5984169 37.4154291,26.4193548 36.4099949,26.4193548 C35.4502622,26.4193548 34.6639853,25.6713514 34.5944885,24.7225835 L34.5894952,24.5857385 L34.5894952,22.7521222 L27.3074962,22.7521222 L27.3074962,24.5857385 C27.3074962,25.552386 26.5648435,26.344328 25.6228625,26.4143255 L25.4869964,26.4193548 C24.5272637,26.4193548 23.7409869,25.6713514 23.6714901,24.7225835 L23.6664967,24.5857385 L23.6664967,16.3344652 C23.6664967,12.2837519 26.9267587,9 30.9484957,9 Z M47.3329934,9 C51.3547304,9 54.6149924,12.2837519 54.6149924,16.3344652 C54.6149924,20.3851785 51.3547304,23.6689304 47.3329934,23.6689304 C46.006564,23.6689304 44.7629663,23.3117305 43.6918483,22.6876247 L43.6919939,24.5857385 C43.6919939,25.5984169 42.8769284,26.4193548 41.8714941,26.4193548 C40.9117614,26.4193548 40.1254846,25.6713514 40.0559878,24.7225835 L40.0509944,24.5857385 L40.0509944,16.3344652 C40.0509944,12.2837519 43.3112564,9 47.3329934,9 Z M58.2559918,9 C59.2157245,9 60.0020014,9.74800341 60.0714982,10.6967714 L60.0764916,10.8336163 L60.0764916,22.7521222 L65.5379908,22.7521222 C66.4977235,22.7521222 67.2840004,23.5001256 67.3534972,24.4488936 L67.3584906,24.5857385 C67.3584906,25.552386 66.6158379,26.344328 65.6738569,26.4143255 L65.5379908,26.4193548 L58.2559918,26.4193548 C57.2505576,26.4193548 56.4354921,25.5984169 56.4354921,24.5857385 L56.4354921,10.8336163 L56.4404855,10.6967714 C56.5099823,9.74800341 57.2962592,9 58.2559918,9 Z M47.3329934,12.6672326 C45.3221249,12.6672326 43.6919939,14.3091086 43.6919939,16.3344652 C43.6919939,18.3598218 45.3221249,20.0016978 47.3329934,20.0016978 C49.3438619,20.0016978 50.9739929,18.3598218 50.9739929,16.3344652 C50.9739929,14.3091086 49.3438619,12.6672326 47.3329934,12.6672326 Z M30.9484957,12.6672326 C28.9376272,12.6672326 27.3074962,14.3091086 27.3074962,16.3344652 L27.3074962,19.0848896 L34.5894952,19.0848896 L34.5894952,16.3344652 C34.5894952,14.3091086 32.9593642,12.6672326 30.9484957,12.6672326 Z"
              id="Shape-Copy-5"
            />
            <path
              d="M14.2967691,1.63883588 C14.7157972,1.63883588 15.0948194,1.73478479 15.4299264,1.9268441 C15.7631279,2.11781128 16.0278431,2.37891062 16.2219124,2.70764393 C16.3882611,2.98942119 16.4850557,3.30298046 16.5126329,3.64791575 L16.520655,3.82299618 L16.5199887,5.52019275 L16.5127379,5.59479654 C16.4957471,5.68802215 16.4513728,5.76997199 16.381609,5.83532504 C16.2903091,5.92085249 16.1724754,5.96421756 16.0396145,5.96421756 C15.9333259,5.96421756 15.8366545,5.93646392 15.748452,5.87425781 L15.68387,5.82103873 L15.6362995,5.7644964 C15.5970765,5.70792359 15.5729675,5.64422558 15.5633644,5.57532903 L15.5615441,5.54775 L15.4402979,5.63994378 L15.2911964,5.73356283 C14.9803952,5.91126743 14.6281786,6 14.2384312,6 C13.8283519,6 13.4571538,5.9036485 13.1289847,5.71094048 C12.8031227,5.5195873 12.5447597,5.25815146 12.3559162,4.92925947 C12.1670696,4.60036207 12.0728833,4.23063048 12.0728833,3.82299618 C12.0728833,3.40990716 12.1698516,3.03707614 12.3643336,2.70764393 C12.5585426,2.37867402 12.8247082,2.11746336 13.1605582,1.92650588 C13.497905,1.73469735 13.8779198,1.63883588 14.2967691,1.63883588 Z M0.459163695,0 L4.49177254,0 L4.58173439,0.00735707627 C4.67493847,0.0231275945 4.75699938,0.0642159949 4.82240731,0.128406304 C4.9081403,0.212543293 4.95093624,0.321741351 4.95093624,0.445133588 C4.95093624,0.54065234 4.92309589,0.628061278 4.86087016,0.708620049 L4.80765134,0.767774404 L4.75176967,0.811035271 C4.69501708,0.847358808 4.63113807,0.869739461 4.56225079,0.878659566 L4.49177254,0.883110687 L2.95279198,0.88275 L2.9521302,5.51378006 L2.9447515,5.58600225 C2.92799293,5.6749634 2.88555721,5.7548475 2.82004766,5.82205981 C2.72881688,5.9156619 2.60835184,5.96421756 2.471822,5.96421756 C2.36670969,5.96421756 2.27044466,5.93333824 2.18271765,5.86799949 L2.11851844,5.81247836 L2.07075998,5.75494713 C2.03088906,5.69767181 2.00583667,5.63422138 1.99580241,5.56657974 L1.99078158,5.4976145 L1.99002763,0.88275 L0.442632849,0.882446984 L0.36920185,0.875753611 C0.275997765,0.859983092 0.193936862,0.818894692 0.128528925,0.754704383 C0.0435005447,0.671258884 0,0.564532028 0,0.445133588 C0,0.321741351 0.0427959384,0.212543293 0.128528925,0.128406304 C0.19799822,0.0602302431 0.285117112,0.0189558451 0.383430524,0.00517312831 L0.459163695,0 Z M20.5169829,1.67461832 C20.6551549,1.67461832 20.7743527,1.72185977 20.8576867,1.81727286 C20.9178101,1.88611101 20.9530523,1.96689427 20.9620881,2.06274811 L20.9639306,2.13751306 L20.9553195,2.20376237 C20.9444047,2.25638875 20.9248149,2.30691203 20.8962575,2.35603936 L20.8466593,2.4287718 L19.7264438,3.78825 L20.8832998,5.2412319 L20.9318443,5.30963522 C20.9863618,5.39928819 21.0099095,5.49331914 20.9961561,5.58780055 C20.9795886,5.70161395 20.923724,5.79810528 20.831571,5.86701008 C20.7475219,5.92985532 20.6534217,5.96421756 20.5534441,5.96421756 C20.4866213,5.96421756 20.4252796,5.95523189 20.3632762,5.93175334 L20.3008247,5.90323986 L20.251025,5.87025756 L20.1957695,5.8215874 L20.1419493,5.76172104 L19.0987592,4.4595 L18.0061094,5.81903435 L17.9506854,5.87315798 C17.8722426,5.93474405 17.7746366,5.96421756 17.665717,5.96421756 C17.5349732,5.96421756 17.4201712,5.92003527 17.3352662,5.83232535 C17.2725661,5.76755397 17.2328115,5.69050057 17.2174995,5.59566302 L17.2106218,5.52111437 L17.2163296,5.45271645 C17.2261016,5.39719502 17.2469312,5.3441975 17.2768066,5.29526405 L17.3281524,5.22510445 L18.4946718,3.79275 L17.3885408,2.41415202 L17.3452419,2.35482468 C17.296764,2.27724001 17.2727806,2.19312463 17.2759478,2.10609314 C17.2798819,1.99799007 17.3187719,1.89956196 17.3906433,1.81727286 C17.4573105,1.74094239 17.5469306,1.69544177 17.6603064,1.68071858 L17.7498051,1.67544615 L17.8288832,1.68348822 C17.9019989,1.69715575 17.9688426,1.72633519 18.0342879,1.77682183 L18.0994475,1.83462552 L19.1207832,3.11775 L20.1662093,1.8217353 C20.2067342,1.77931345 20.2525346,1.74560264 20.3036503,1.72199598 C20.3713684,1.69072188 20.4431579,1.67461832 20.5169829,1.67461832 Z M9.4310354,1.63167939 C9.75426159,1.63167939 10.0448277,1.70808508 10.2982941,1.86116069 C10.5510469,2.01380536 10.7480876,2.22896648 10.8876999,2.50299306 C11.0024469,2.72821476 11.0688092,2.98390905 11.0877426,3.26907449 L11.0934187,3.44370229 L11.0928114,5.51949619 L11.0859823,5.59337731 C11.0699604,5.68547273 11.0279322,5.76678597 10.9612437,5.83223301 C10.87184,5.91997233 10.7537615,5.96421756 10.6196706,5.96421756 C10.4868097,5.96421756 10.368976,5.92085249 10.2776761,5.83532504 C10.2036549,5.76598377 10.1590782,5.67906994 10.1442084,5.58064926 L10.1386301,5.50477099 L10.1387666,3.45068595 L10.1337026,3.31721187 C10.1147525,3.08223225 10.0418225,2.89894895 9.91682778,2.76136212 C9.77458626,2.60479095 9.5980382,2.52910305 9.37269748,2.52910305 C9.1605111,2.52910305 8.98757669,2.58633096 8.84976532,2.69805177 L8.78376745,2.75844059 L8.72286331,2.82789777 C8.62358553,2.95503372 8.565856,3.11347245 8.55126379,3.30813948 L8.54769766,3.42932649 L8.54781954,5.51949619 L8.54099047,5.59337731 C8.5249686,5.68547273 8.48294035,5.76678597 8.41625185,5.83223301 C8.3268482,5.91997233 8.20876971,5.96421756 8.07467872,5.96421756 C7.94181787,5.96421756 7.82398412,5.92085249 7.7326843,5.83532504 C7.65866309,5.76598377 7.61408638,5.67906994 7.59921654,5.58064926 L7.5936383,5.50477099 L7.59377475,3.45068595 L7.58871073,3.31721187 C7.56976064,3.08223225 7.49683061,2.89894895 7.37183594,2.76136212 C7.22959441,2.60479095 7.05304636,2.52910305 6.82770564,2.52910305 C6.61437741,2.52910305 6.43958585,2.5853383 6.29959658,2.69499048 L6.23248485,2.75425493 L6.17053936,2.82201518 C6.08806976,2.92274955 6.03359512,3.04120573 6.00750438,3.17596418 L5.99326438,3.2800675 L5.98885057,3.38645038 L5.98824322,5.51949619 L5.98141414,5.59337731 C5.96539227,5.68547273 5.92336403,5.76678597 5.85667553,5.83223301 C5.76727187,5.91997233 5.64919338,5.96421756 5.5151024,5.96421756 C5.37685832,5.96421756 5.2563142,5.92063332 5.16623703,5.83223301 C5.0955999,5.76291086 5.05339015,5.67686666 5.03933173,5.5796713 L5.03406198,5.50477099 L5.03466469,2.12655247 L5.04145667,2.05263232 C5.05721981,1.96128744 5.09823151,1.88002434 5.16309264,1.81333954 C5.25308351,1.72081842 5.37505437,1.67461832 5.5151024,1.67461832 C5.62386183,1.67461832 5.72206058,1.70462782 5.80907103,1.77085582 L5.87222125,1.82741481 L5.91685564,1.88499677 L5.93468713,1.9185 L6.02325107,1.86066813 C6.19357675,1.75892166 6.37881291,1.69106438 6.5776799,1.65713135 L6.72936594,1.63804293 L6.88604356,1.63167939 C7.15539872,1.63167939 7.40207327,1.6847389 7.6280199,1.79388832 L7.76111616,1.86613301 L7.8752837,1.94286888 L7.96615659,2.01577592 L8.05131518,2.09579479 L8.12214438,2.1735 L8.16010862,2.13183802 C8.20727111,2.08437831 8.25731778,2.03995266 8.31021775,1.99859414 L8.39170382,1.93886083 L8.52190717,1.85794144 C8.79105655,1.70700492 9.09533284,1.63167939 9.4310354,1.63167939 Z M14.2967697,2.51479008 C14.055547,2.51479008 13.8409044,2.57103073 13.6487195,2.68378504 C13.4539176,2.79807478 13.3000259,2.95220493 13.185043,3.14863415 C13.0706238,3.34410062 13.013088,3.56786818 13.013088,3.82299618 C13.013088,4.07344491 13.0706533,4.29628115 13.1854717,4.49451616 C13.3002365,4.6926586 13.4535233,4.84618298 13.6473502,4.95783304 C13.8398098,5.06869546 14.0549664,5.1240458 14.2967697,5.1240458 C14.5433402,5.1240458 14.7594021,5.06873109 14.9490203,4.95830509 C15.1403004,4.84691123 15.2911887,4.69369025 15.4036787,4.49581082 C15.5165382,4.29728141 15.5731592,4.07396508 15.5731592,3.82299618 C15.5731592,3.56734859 15.5165665,3.34309611 15.404097,3.14733533 C15.2913951,2.95117 15.1399068,2.7973397 14.9476483,2.68330266 C14.7583031,2.57099365 14.5427608,2.51479008 14.2967697,2.51479008 Z"
              id="Tmax-Copy-5"
            />
          </g>
          <g id="Group" fillRule="nonzero">
            <g id="Combined-Shape-Copy-path">
              <path
                d="M23.5902967,16.8400104 L23.7054264,16.9459338 L24.4527266,17.7068543 L25.1428373,17.0051479 C25.6607974,16.4779285 26.4604085,16.4119974 27.0487264,16.8074298 L27.1713808,16.8992271 L27.2864891,17.0051479 C27.8415099,17.5700904 27.8761987,18.4639739 27.3905555,19.0700341 L27.2864891,19.1872257 L26.596679,19.889133 L27.9118344,21.2275375 C28.4297613,21.754723 28.4945022,22.5685267 28.1060382,23.167467 L28.0158591,23.2923399 L27.9118064,23.4095387 C27.6237401,23.7026368 27.2390972,23.8614116 26.8399569,23.8614116 C26.4905655,23.8614116 26.1524857,23.7398998 25.8804553,23.5131026 L25.7680743,23.4095051 L24.4527266,22.0704051 L22.0130907,24.553653 L23.3290571,25.8883586 C23.8479139,26.4145857 23.9140654,27.2283584 23.526667,27.8279429 L23.4367107,27.9529641 L23.3328684,28.0703314 C23.0447138,28.3646965 22.6592734,28.5241725 22.2590857,28.5241725 C21.9106111,28.5241725 21.5732571,28.4031977 21.301431,28.1773613 L21.1891047,28.0742011 L19.8701272,26.7359317 L17.107551,29.5481272 C16.8915013,29.7679507 16.6211272,29.9122174 16.331056,29.9706118 L16.1845392,29.9926052 L16.0357015,30 C15.6363535,30 15.2518233,29.8412589 14.9638239,29.5479934 C14.4089023,28.9831517 14.3742197,28.0892841 14.8597782,27.4832125 L14.9638264,27.3660182 L17.7222192,24.5566728 L16.9752525,23.8001656 C16.45641,23.2738472 16.3902604,22.4601521 16.7776476,21.8605999 L16.8676014,21.7355849 L16.9714407,21.618222 C17.5253543,21.0522518 18.40357,21.0153663 18.9998921,21.5086176 L19.1152183,21.6143367 L19.8651827,22.3754007 L22.3087742,19.8881264 L21.5616573,19.1278922 C21.0437447,18.6006154 20.9790057,17.7868088 21.3674401,17.1878995 L21.4576123,17.0630338 L21.5616853,16.9458144 C22.1167225,16.3809686 22.9948987,16.3456986 23.5902967,16.8400104 Z"
                fill="#9D917E"
              />
              <path
                d="M27.9397811,6.79518804 C28.4948194,7.36003501 28.5295093,8.25402441 28.0438624,8.86000242 L27.9397952,8.97717501 L26.3771415,10.5671391 L29.5560627,13.8025433 C30.1109843,14.3673849 30.1456669,15.2613449 29.6601105,15.8674261 L29.5560627,15.9846211 C29.2680197,16.2778133 28.8834896,16.4365225 28.4841851,16.4365225 C28.1348519,16.4365225 27.7967101,16.3149921 27.5246828,16.08821 L27.4123076,15.9846211 L24.2331891,12.7494178 L12.7588902,24.4278297 L13.5962219,25.2793319 C14.1511457,25.8441758 14.1858285,26.7381456 13.7002701,27.3441303 L13.5962219,27.4613046 C13.3081713,27.7545045 12.9235281,27.9133112 12.5243443,27.9133112 C12.1750965,27.9133112 11.8369483,27.7917492 11.5648676,27.5649868 L11.4524667,27.4614097 L10.6159267,26.6091018 L9.30766757,27.9424841 C9.05562992,28.1990273 8.72971937,28.3526069 8.38467703,28.3869933 L8.23579,28.3943855 C7.83653034,28.3943855 7.45190423,28.2356367 7.16401577,27.9424841 C6.60899506,27.3775416 6.57430626,26.483658 7.05994939,25.8775979 L7.16401577,25.7604062 L13.1297307,19.6878158 L12.3481757,18.9118059 C11.7865615,18.3538736 11.7413175,17.4603341 12.2196966,16.8484068 L12.3223563,16.7299591 C12.8705893,16.1582043 13.7483608,16.1121458 14.3495267,16.5991714 L14.4658921,16.7036864 L15.2726942,17.5055371 L17.6203617,15.1159017 L16.8358919,14.3175839 C16.2808712,13.7526414 16.2461824,12.8587578 16.7318256,12.2526977 L16.8358919,12.1355061 C17.3908352,11.5706424 18.2691154,11.5353713 18.8644328,12.0296869 L18.9795437,12.1356112 L19.7643141,12.9346296 L22.0902256,10.5671391 L21.3052715,9.76841292 C20.7502508,9.20347041 20.715562,8.3094944 21.2012051,7.7034227 L21.3052715,7.58622988 C21.8601953,7.02138598 22.7384648,6.98608323 23.3338069,7.48032165 L23.4489233,7.58622988 L24.2331891,8.38486044 L25.7961293,6.79521661 C26.3880513,6.19259222 27.3478872,6.19259222 27.9397811,6.79518804 Z"
                fill="#D77D71"
              />
              <path
                d="M22.9437944,1.81494213 L23.0589091,1.92086968 C23.613932,2.48581442 23.6486209,3.37970781 23.1629763,3.98567107 L23.0589096,4.10284188 L7.92313041,19.5076369 L8.58436285,20.1778691 C9.1407531,20.7412571 9.17769171,21.6351454 8.69363174,22.242373 L8.58987264,22.3598135 C8.30171939,22.6547657 7.91582317,22.8146384 7.51522732,22.8146384 C7.16705305,22.8146384 6.83008174,22.6939313 6.55845265,22.4685061 L6.44619857,22.3655306 L5.779178,21.6899155 L4.42678149,23.0681514 C4.17476486,23.3246732 3.84878762,23.4782689 3.50377285,23.5126597 L3.35490393,23.5200528 C2.95566599,23.5200528 2.57104538,23.3613192 2.28301233,23.0681371 C1.72810384,22.5031955 1.69342206,21.6093216 2.17897855,21.0033513 L2.28302637,20.8861787 L3.63028105,19.514683 L0.446724227,16.2904649 C-0.109663873,15.727079 -0.146602248,14.8332006 0.33747773,14.2258541 L0.441241101,14.108388 C0.994732543,13.5420536 1.87282146,13.504455 2.46949321,13.9971918 L2.58489576,14.1028107 L5.77423346,17.3324043 L8.2949598,14.7656097 L7.52654451,13.9829564 C6.9715238,13.4180139 6.936835,12.5241303 7.42247812,11.9180702 L7.52654451,11.8008786 C8.08148777,11.2360149 8.959768,11.2007438 9.55508532,11.6950595 L9.67019631,11.8009837 L10.4389122,12.5843377 L12.7855908,10.1947023 L12.0167964,9.41243474 C11.4618726,8.84759083 11.4271899,7.95362099 11.9127367,7.34764811 L12.0167824,7.23047635 C12.5716876,6.66553798 13.449956,6.63019645 14.045411,7.1244458 L14.1605516,7.23035688 L14.9295432,8.01343017 L17.2554546,5.64593966 L16.486176,4.8630534 C15.9312521,4.29820949 15.8965694,3.40423964 16.3821393,2.79824322 L16.48619,2.68106643 C17.0412411,2.11620638 17.9194182,2.08086975 18.5148106,2.57516744 L18.629939,2.68108881 L19.3984181,3.46366099 L20.9152433,1.92088397 C21.4701701,1.3559236 22.3484588,1.32061357 22.9437944,1.81494213 Z"
                fill="#46756C"
              />
              <path
                d="M14.9786396,0.451966511 C15.5335459,1.01690596 15.5682275,1.91076996 15.0826729,2.51683675 L14.9786255,2.63403008 L4.86088602,12.9326388 C4.57284299,13.2258311 4.18831292,13.3845403 3.78900846,13.3845403 C3.38977052,13.3845403 3.00514991,13.2258066 2.71711686,12.9326246 C2.16221056,12.3676851 2.12752892,11.4738211 2.61308349,10.8677543 L2.7171309,10.750561 L3.53336807,9.91889766 L2.11980173,8.47950769 C1.60176807,7.95231927 1.53701386,7.13849836 1.9255203,6.53958992 L2.01570933,6.41472465 L2.11977365,6.29753501 C2.6747005,5.73257464 3.55298922,5.69726462 4.14832091,6.19158927 L4.26343484,6.29751599 L5.67732048,7.73661899 L8.02399902,5.34799017 L6.61003962,3.90897172 C6.0921107,3.38178407 6.02736958,2.56789116 6.41580687,1.96903677 L6.50597983,1.84418509 L6.61002558,1.72701333 C7.16493082,1.16207496 8.04319916,1.12673343 8.63865802,1.62098668 L8.75379939,1.72689859 L10.1669625,3.1657115 L12.8348704,0.451952222 C13.4268925,-0.150653122 14.3866034,-0.150653122 14.9786396,0.451966511 Z"
                fill="#72A286"
              />
            </g>
          </g>
        </g>
      </svg>
    );
  },
);

export const AddRoomIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/add_room"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M18.8786667,14.755849 C19.3855833,14.755849 19.7953333,15.1660377 19.7953333,15.6734972 L19.7953333,15.6734972 L19.7953333,17.9602764 L22.0833333,17.9602764 C22.59025,17.9602764 23,18.3704651 23,18.8779245 C23,19.3853839 22.59025,19.7955727 22.0833333,19.7955727 L22.0833333,19.7955727 L19.7953333,19.7955727 L19.7953333,22.0823518 C19.7953333,22.5898113 19.3855833,23 18.8786667,23 C18.37175,23 17.962,22.5898113 17.962,22.0823518 L17.962,22.0823518 L17.962,19.7955727 L15.6749167,19.7955727 C15.168,19.7955727 14.75825,19.3853839 14.75825,18.8779245 C14.75825,18.3704651 15.168,17.9602764 15.6749167,17.9602764 L15.6749167,17.9602764 L17.962,17.9602764 L17.962,15.6734972 C17.962,15.1660377 18.37175,14.755849 18.8786667,14.755849 Z M18.0435833,1.91703333 C20.6997939,1.91703333 22.8745474,4.09314922 22.9871687,6.81393442 L22.99175,7.0357 L22.99175,10.2917 C22.99175,11.7418197 22.388633,13.0680255 21.4216335,14.0042612 L21.3713184,14.0528001 L21.3713184,14.0528001 C21.3584831,14.0644046 21.3457531,14.0762731 21.3329635,14.0880751 L21.333857,14.0853457 C21.1749267,14.2146016 20.9735464,14.2916667 20.7541667,14.2916667 C20.2479056,14.2916667 19.8375,13.881261 19.8375,13.375 C19.8375,13.1001726 19.958444,12.8535932 20.1500114,12.6855824 C20.7308976,12.1258879 21.1074204,11.3395522 21.1536144,10.4723355 L21.1584167,10.2917 L21.1584167,7.0357 C21.1584167,5.22345 19.7614167,3.75036667 18.0435833,3.75036667 L10.988,3.75036667 C9.36,3.75036667 8.00241667,5.10061667 7.897,6.8267 L7.88955208,6.9147 L7.87866667,7.0027 L7.87316667,10.2917 C7.87316667,12.0405736 9.17548296,13.4749771 10.8114817,13.5718219 L10.988,13.5770333 L13.7563333,13.5770333 C13.8800833,13.5770333 14.0022865,13.602299 14.1155951,13.6501232 L14.2256667,13.7053667 L16.452397,15.0318109 C16.4520598,15.0328137 16.4517235,15.0338168 16.451388,15.0348202 C16.6979055,15.1994204 16.8583333,15.4784753 16.8583333,15.795 C16.8583333,16.301261 16.4479277,16.7116667 15.9416667,16.7116667 C15.7793508,16.7116667 15.6268885,16.6694789 15.4946465,16.5954704 C15.3038623,16.482447 15.2043678,16.4230148 15.1912587,16.4152066 C14.8580224,16.2167197 14.3766811,15.9300164 13.7472348,15.5550967 L13.50425,15.4103667 L10.988,15.4103667 C8.33089693,15.4103667 6.15698892,13.2333817 6.04441281,10.513397 L6.03983333,10.2917 L6.03983333,7.68653333 L5.94816667,7.68653333 C4.28956897,7.68653333 2.93005965,9.06063084 2.83827256,10.7857373 L2.83333333,10.9718667 L2.83333333,14.2287833 C2.83333333,15.9246167 4.09925,17.3555333 5.71441667,17.4847833 C6.15441667,17.5194756 6.50068886,17.8611265 6.55135795,18.2898361 L6.55775,18.3987 L6.55775,19.5537 L9.76608333,17.64245 C9.87264583,17.5798875 9.99055208,17.5389812 10.1124544,17.5224383 L10.2354167,17.5141167 L12.8759969,17.5148271 L12.8610682,17.5221752 L12.8610682,17.5221752 L12.9166667,17.5183333 C13.4229277,17.5183333 13.8333333,17.928739 13.8333333,18.435 C13.8333333,18.9050995 13.4794632,19.2925482 13.0235694,19.3454996 L12.9900558,19.347357 C12.9644414,19.3507447 12.9406617,19.3516667 12.9166667,19.3516667 L12.845,19.3470333 L10.4884167,19.34745 L6.11041667,21.95445 C5.96558333,22.0406167 5.80425,22.0837 5.64108333,22.0837 C5.48525,22.0837 5.32941667,22.0433667 5.18825,21.9636167 C4.938,21.8208458 4.7705651,21.5699943 4.73261654,21.2890521 L4.72441667,21.1670333 L4.72441667,19.1677833 C2.65091667,18.6166222 1.10592287,16.7086478 1.00522717,14.4623266 L1,14.2287833 L1,10.9718667 C1,8.22372412 3.1048533,5.97441964 5.73388451,5.85793834 L5.94816667,5.8532 L6.20116667,5.8532 C6.70415054,3.66207097 8.55323222,2.0255205 10.7655897,1.92221665 L10.988,1.91703333 L18.0435833,1.91703333 Z M17.5347417,9.63985833 C18.0407417,9.63985833 18.4514083,10.050525 18.4514083,10.556525 C18.4514083,11.0263821 18.0973131,11.4140386 17.6415961,11.4670209 L17.5347417,11.4731917 L11.4874917,11.4731917 C10.9814917,11.4731917 10.570825,11.062525 10.570825,10.556525 C10.570825,10.0866679 10.9249202,9.69901139 11.3806372,9.64602913 L11.4874917,9.63985833 L17.5347417,9.63985833 Z M17.5347417,6.02956667 C18.0407417,6.02956667 18.4514083,6.44023333 18.4514083,6.94623333 C18.4514083,7.41609048 18.0973131,7.80374694 17.6415961,7.8567292 L17.5347417,7.8629 L11.4874917,7.8629 C10.9814917,7.8629 10.570825,7.45223333 10.570825,6.94623333 C10.570825,6.47637619 10.9249202,6.08871973 11.3806372,6.03573746 L11.4874917,6.02956667 L17.5347417,6.02956667 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const OpenChatIcon = React.memo(
  ({ width = 1, height = 1, color = 'rgb(110, 88, 229)' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/openchat"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M18.593,1.0004 C21.569,1.0004 23.991,3.5044 23.991,6.5844 L23.991,6.5844 L23.991,10.1364 C23.991,12.6964 22.268,14.9024 19.928,15.5244 L19.928,15.5244 L19.928,17.7054 C19.928,18.0654 19.734,18.3974 19.422,18.5744 C19.269,18.6614 19.098,18.7054 18.928,18.7054 C18.75,18.7054 18.574,18.6584 18.416,18.5644 L18.416,18.5644 L17.292,17.8944 C16.28,19.2174 14.752,20.0154 13.095,20.0154 L13.095,20.0154 L10.351,20.0154 L5.575,22.8594 C5.417,22.9534 5.241,23.0004 5.063,23.0004 C4.893,23.0004 4.723,22.9564 4.569,22.8694 C4.257,22.6914 4.063,22.3594 4.063,22.0004 L4.063,22.0004 L4.063,19.8194 C1.723,19.1974 -2.84217094e-14,16.9914 -2.84217094e-14,14.4314 L-2.84217094e-14,14.4314 L-2.84217094e-14,10.8784 C-2.84217094e-14,7.7994 2.422,5.2944 5.398,5.2944 L5.398,5.2944 L5.674,5.2944 C6.241,2.8244 8.376,1.0004 10.896,1.0004 L10.896,1.0004 Z M5.498,7.2944 L5.398,7.2944 C3.524,7.2944 2,8.9024 2,10.8784 L2,10.8784 L2,14.4314 C2,16.2814 3.381,17.8424 5.143,17.9834 C5.663,18.0244 6.063,18.4584 6.063,18.9804 L6.063,18.9804 L6.063,20.2404 L9.563,18.1554 C9.718,18.0644 9.895,18.0154 10.075,18.0154 L10.075,18.0154 L13.095,18.0154 C14.043,18.0154 14.932,17.5904 15.565,16.8664 L15.565,16.8664 L13.641,15.7204 L10.896,15.7204 C7.919,15.7204 5.498,13.2154 5.498,10.1364 L5.498,10.1364 L5.498,7.2944 Z M18.593,3.0004 L10.896,3.0004 C9.12,3.0004 7.639,4.4734 7.524,6.3554 L7.524,6.3554 C7.52,6.4204 7.513,6.4844 7.504,6.5484 L7.504,6.5484 L7.498,10.1364 C7.498,12.1124 9.022,13.7204 10.896,13.7204 L10.896,13.7204 L13.916,13.7204 C14.096,13.7204 14.273,13.7694 14.428,13.8604 L14.428,13.8604 L17.489,15.6834 L17.49,15.6854 L17.928,15.9454 L17.928,14.6854 C17.928,14.1634 18.328,13.7304 18.848,13.6884 C20.61,13.5474 21.991,11.9864 21.991,10.1364 L21.991,10.1364 L21.991,6.5844 C21.991,4.6074 20.467,3.0004 18.593,3.0004 L18.593,3.0004 Z M18.95,7 C19.6408333,7 20.2,7.56 20.2,8.25 C20.2,8.94 19.6408333,9.5 18.95,9.5 C18.26,9.5 17.7,8.94 17.7,8.25 C17.7,7.56 18.26,7 18.95,7 Z M14.95,7 C15.64,7 16.2,7.56 16.2,8.25 C16.2,8.94 15.64,9.5 14.95,9.5 C14.26,9.5 13.7,8.94 13.7,8.25 C13.7,7.56 14.26,7 14.95,7 Z M10.95,7 C11.64,7 12.2,7.56 12.2,8.25 C12.2,8.94 11.64,9.5 10.95,9.5 C10.2591667,9.5 9.7,8.94 9.7,8.25 C9.7,7.56 10.2591667,7 10.95,7 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const OpenChatBgIcon = React.memo(
  ({ width = 1, height = 1, color = '#205855' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/open-room_2"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M12,0 C5.37272727,0 0,5.37272727 0,12 C0,18.6272727 5.37272727,24 12,24 C18.6272727,24 24,18.6272727 24,12 C24,5.37272727 18.6272727,0 12,0"
            id="Fill-1"
            fill={color}
          />
          <path
            d="M16.1254689,5.5 C17.9862443,5.5 19.5,7.065625 19.5,8.99 L19.5,8.99 L19.5,11.210625 C19.5,12.81125 18.4220509,14.19 16.9595665,14.578125 L16.9595665,14.578125 L16.9595665,15.940625 C16.9595665,16.165625 16.8382659,16.373125 16.6431847,16.484375 C16.5468945,16.538125 16.439975,16.565625 16.334306,16.565625 C16.2236348,16.565625 16.1123385,16.53625 16.0141726,16.478125 L16.0141726,16.478125 L15.3113797,16.059375 C14.6786161,16.88625 13.7244685,17.384375 12.6871613,17.384375 L12.6871613,17.384375 L10.9708212,17.384375 L7.98582743,19.1625 C7.88766153,19.220625 7.77636515,19.25 7.66569404,19.25 C7.55939975,19.25 7.4524802,19.223125 7.35681534,19.168125 C7.16173406,19.0575 7.04043351,18.85 7.04043351,18.625 L7.04043351,18.625 L7.04043351,17.2625 C5.57732388,16.874375 4.5,15.495 4.5,13.894375 L4.5,13.894375 L4.5,11.674375 C4.5,9.75 6.01375573,8.184375 7.87453105,8.184375 L7.87453105,8.184375 L8.04710296,8.184375 C8.40162568,6.640625 9.7365569,5.5 11.3122134,5.5 L11.3122134,5.5 Z M7.93705711,9.434375 L7.87453105,9.434375 C6.70341809,9.434375 5.75052105,10.439375 5.75052105,11.674375 L5.75052105,11.674375 L5.75052105,13.894375 C5.75052105,15.051875 6.61400584,16.026875 7.71508962,16.114375 C8.04085035,16.140625 8.29095456,16.41125 8.29095456,16.7375 L8.29095456,16.7375 L8.29095456,17.525625 L10.4787411,16.2225 C10.5756565,16.165 10.6857024,16.134375 10.7988745,16.134375 L10.7988745,16.134375 L12.6871613,16.134375 C13.2805336,16.134375 13.8363902,15.86875 14.2321801,15.41625 L14.2321801,15.41625 L13.0285536,14.7 L11.3122134,14.7 C9.4514381,14.7 7.93705711,13.134375 7.93705711,11.210625 L7.93705711,11.210625 L7.93705711,9.434375 Z M13.8787828,9.25 C13.3604952,9.25 12.940892,9.67003106 12.940892,10.1878882 C12.940892,10.7049689 13.3604952,11.125 13.8787828,11.125 C14.3970704,11.125 14.8166736,10.7049689 14.8166736,10.1878882 C14.8166736,9.67003106 14.3970704,9.25 13.8787828,9.25 Z M17.0046971,9.25 C16.4866241,9.25 16.0671947,9.67003106 16.0671947,10.1878882 C16.0671947,10.7049689 16.4866241,11.125 17.0046971,11.125 C17.5227701,11.125 17.9429762,10.7049689 17.9429762,10.1878882 C17.9429762,9.67003106 17.5227701,9.25 17.0046971,9.25 Z M10.7528686,9.25 C10.2347956,9.25 9.81458941,9.67003106 9.81458941,10.1878882 C9.81458941,10.7049689 10.2347956,11.125 10.7528686,11.125 C11.2701648,11.125 11.690371,10.7049689 11.690371,10.1878882 C11.690371,9.67003106 11.2701648,9.25 10.7528686,9.25 Z"
            id="Combined-Shape"
            fill="#FFFFFF"
          />
        </g>
      </svg>
    );
  },
);

export const PinIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/pin2"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="icn_pin">
          <rect
            id="Rectangle"
            fill="#D8D8D8"
            opacity="0"
            x="0"
            y="0"
            width="20"
            height="20"
          />
          <path
            d="M18.5939328,6.52705879 C19.1353557,7.06862627 19.1353557,7.94668063 18.5939328,8.4882481 L18.4713911,8.61082243 C18.0245767,9.05775614 17.3486579,9.13585355 16.8217758,8.84511467 L13.1393351,12.5283785 C13.627535,13.7023909 13.3942966,15.1056864 12.4396199,16.0606179 L11.7860645,16.7143477 L8.51828777,13.4456988 L3.40867321,18.556677 L1,19 L1.44800716,16.5954877 L6.55762172,11.4845095 L3.28984497,8.2158607 L3.94340032,7.56213093 C4.89807709,6.60719938 6.30099819,6.37389874 7.47469734,6.862229 L11.1569784,3.17880554 C10.8663171,2.65178285 10.9443937,1.97568365 11.3912082,1.52874994 L11.5137498,1.4061756 C12.0551728,0.864608132 12.9329929,0.864608132 13.4744159,1.4061756 L18.5939328,6.52705879 Z"
            id="Shape"
            fill="rgb(107, 107, 107)"
          />
        </g>
      </g>
    </svg>
  );
});

export const DisableAlarmIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/alarm_none2"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M2.86289944,1.45970461 L2.95710678,1.54289322 L18.4571068,17.0428932 C18.8476311,17.4334175 18.8476311,18.0665825 18.4571068,18.4571068 C18.0966228,18.8175907 17.5293918,18.8453203 17.1371006,18.5402954 L17.0428932,18.4571068 L15.585,17 L12,17 C12,18.1055276 11.1055276,19 10,19 C8.94472362,19 8.08175173,18.1849952 8.00548007,17.1493814 L8,17 L2.92843389,17 C2.13689867,17 1.72738632,16.0280849 2.2023148,15.45 L3.53580838,14.1494788 C3.6322965,14.0553764 3.68670809,13.926306 3.68670809,13.7915277 L3.68670809,8.83746637 C3.68670809,7.74671694 3.94322231,6.7202571 4.40743716,5.82397012 L1.54289322,2.95710678 C1.15236893,2.56658249 1.15236893,1.93341751 1.54289322,1.54289322 C1.90337718,1.18240926 2.47060824,1.15467972 2.86289944,1.45970461 Z M10.0001595,1 C10.7279942,1 11.3237767,1.53826904 11.3913503,2.22918154 L11.3977337,2.36042227 L11.3977337,2.64301029 C14.242056,3.24260381 16.1997705,5.65959272 16.3063378,8.58546187 L16.309,12.394 L7.08622672,3.17136592 C7.48478037,2.97130739 7.911047,2.81197018 8.36097384,2.69882427 L8.60258524,2.64301029 L8.60258524,2.36042227 C8.60258524,1.60765528 9.22683506,1 10.0001595,1 Z"
          id="Combined-Shape"
          fill="rgb(107, 107, 107)"
        />
      </g>
    </svg>
  );
});

export const FriendAddIcon = React.memo(({ width = 1.38, height = 1.38 }) => {
  const defaultWidth = 24;
  const defaultHeight = 22;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/common/add-friends"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M19.504,15.0063807 C20.057,15.0063807 20.504,15.4538593 20.504,16.0074514 L20.504,16.0074514 L20.504,18.5021197 L23,18.5021197 C23.553,18.5021197 24,18.9495983 24,19.5031904 C24,20.0567825 23.553,20.5042611 23,20.5042611 L23,20.5042611 L20.504,20.5042611 L20.504,22.9989293 C20.504,23.5525214 20.057,24 19.504,24 C18.951,24 18.504,23.5525214 18.504,22.9989293 L18.504,22.9989293 L18.504,20.5042611 L16.009,20.5042611 C15.456,20.5042611 15.009,20.0567825 15.009,19.5031904 C15.009,18.9495983 15.456,18.5021197 16.009,18.5021197 L16.009,18.5021197 L18.504,18.5021197 L18.504,16.0074514 C18.504,15.4538593 18.951,15.0063807 19.504,15.0063807 Z M12,1 C18.065,1 23,5.94028396 23,12.0117778 C23,12.5653699 22.553,13.0128485 22,13.0128485 C21.447,13.0128485 21,12.5653699 21,12.0117778 C21,7.04346388 16.963,3.00214142 12,3.00214142 C7.037,3.00214142 3,7.04346388 3,12.0117778 C3,16.9800918 7.037,21.0214142 12,21.0214142 C12.553,21.0214142 13,21.4688928 13,22.0224849 C13,22.576077 12.553,23.0235556 12,23.0235556 C5.935,23.0235556 1,18.0832717 1,12.0117778 C1,5.94028396 5.935,1 12,1 Z M16.4757,12.2308121 C16.9227,11.8724288 17.5627,11.9635262 17.9037,12.4340294 C18.2437,12.9055337 18.1577,13.5782533 17.7097,13.9366366 C16.2517,15.1048861 14.3387,15.6784996 12.0017,15.6825248 C9.6617,15.6865082 7.7477,15.1148968 6.2887,13.9406409 C5.8417,13.5822575 5.7567,12.909538 6.0977,12.4380337 C6.4397,11.9675305 7.0787,11.8774341 7.5257,12.2378196 C8.5977,13.0987404 10.0777,13.5422147 11.9977,13.5382104 C13.9197,13.5352072 15.4027,13.0907318 16.4757,12.2308121 Z M14.444,8.3405512 C15.119,8.3405512 15.667,8.88913795 15.667,9.56486068 C15.667,10.2405834 15.119,10.7881691 14.444,10.7881691 C13.77,10.7881691 13.223,10.2405834 13.223,9.56486068 C13.223,8.88913795 13.77,8.3405512 14.444,8.3405512 Z M9.5553,8.3405512 C10.2303,8.3405512 10.7773,8.88913795 10.7773,9.56486068 C10.7773,10.2405834 10.2303,10.7881691 9.5553,10.7881691 C8.8813,10.7881691 8.3333,10.2405834 8.3333,9.56486068 C8.3333,8.88913795 8.8813,8.3405512 9.5553,8.3405512 Z"
          id="Combined-Shape"
          fill="#000000"
        />
      </g>
    </svg>
  );
});

export const CalendarIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/calendar"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M17,1 C17.553,1 18,1.448 18,2 L18,2 L18,3.101 C20.279,3.566 22,5.585 22,8 L22,8 L22,18 C22,20.757 19.757,23 17,23 L17,23 L7,23 C4.243,23 2,20.757 2,18 L2,18 L2,8 C2,5.585 3.721,3.566 6,3.101 L6,3.101 L6,2 C6,1.448 6.447,1 7,1 C7.553,1 8,1.448 8,2 L8,2 L8,3 L16,3 L16,2 C16,1.448 16.447,1 17,1 Z M20,10 L4,10 L4,18 C4,19.654 5.346,21 7,21 L7,21 L17,21 C18.654,21 20,19.654 20,18 L20,18 L20,10 Z M12,16.1333 C12.607,16.1333 13.1,16.6263 13.1,17.2333 C13.1,17.8413 12.607,18.3333 12,18.3333 C11.393,18.3333 10.9,17.8413 10.9,17.2333 C10.9,16.6263 11.393,16.1333 12,16.1333 Z M17,16.1333 C17.607,16.1333 18.1,16.6263 18.1,17.2333 C18.1,17.8413 17.607,18.3333 17,18.3333 C16.393,18.3333 15.9,17.8413 15.9,17.2333 C15.9,16.6263 16.393,16.1333 17,16.1333 Z M7,16.1333 C7.607,16.1333 8.1,16.6263 8.1,17.2333 C8.1,17.8413 7.607,18.3333 7,18.3333 C6.393,18.3333 5.9,17.8413 5.9,17.2333 C5.9,16.6263 6.393,16.1333 7,16.1333 Z M12,12.1333 C12.607,12.1333 13.1,12.6263 13.1,13.2333 C13.1,13.8413 12.607,14.3333 12,14.3333 C11.393,14.3333 10.9,13.8413 10.9,13.2333 C10.9,12.6263 11.393,12.1333 12,12.1333 Z M17,12.1333 C17.607,12.1333 18.1,12.6263 18.1,13.2333 C18.1,13.8413 17.607,14.3333 17,14.3333 C16.393,14.3333 15.9,13.8413 15.9,13.2333 C15.9,12.6263 16.393,12.1333 17,12.1333 Z M7,12.1333 C7.607,12.1333 8.1,12.6263 8.1,13.2333 C8.1,13.8413 7.607,14.3333 7,14.3333 C6.393,14.3333 5.9,13.8413 5.9,13.2333 C5.9,12.6263 6.393,12.1333 7,12.1333 Z M17,5 L7,5 C5.346,5 4,6.346 4,8 L4,8 L20,8 C20,6.346 18.654,5 17,5 L17,5 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const CalendarActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/calendar_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M19,10 L5.053,10 C4.5,10 4.053,9.553 4.053,9 C4.053,8.447 4.5,8 5.053,8 L19,8 C19.552,8 20,8.447 20,9 C20,9.553 19.552,10 19,10 M17,14.333 C16.393,14.333 15.9,13.841 15.9,13.233 C15.9,12.626 16.393,12.133 17,12.133 C17.607,12.133 18.1,12.626 18.1,13.233 C18.1,13.841 17.607,14.333 17,14.333 M17,18.333 C16.393,18.333 15.9,17.841 15.9,17.233 C15.9,16.626 16.393,16.133 17,16.133 C17.607,16.133 18.1,16.626 18.1,17.233 C18.1,17.841 17.607,18.333 17,18.333 M12,14.333 C11.393,14.333 10.9,13.841 10.9,13.233 C10.9,12.626 11.393,12.133 12,12.133 C12.607,12.133 13.1,12.626 13.1,13.233 C13.1,13.841 12.607,14.333 12,14.333 M12,18.333 C11.393,18.333 10.9,17.841 10.9,17.233 C10.9,16.626 11.393,16.133 12,16.133 C12.607,16.133 13.1,16.626 13.1,17.233 C13.1,17.841 12.607,18.333 12,18.333 M7,14.333 C6.393,14.333 5.9,13.841 5.9,13.233 C5.9,12.626 6.393,12.133 7,12.133 C7.607,12.133 8.1,12.626 8.1,13.233 C8.1,13.841 7.607,14.333 7,14.333 M7,18.333 C6.393,18.333 5.9,17.841 5.9,17.233 C5.9,16.626 6.393,16.133 7,16.133 C7.607,16.133 8.1,16.626 8.1,17.233 C8.1,17.841 7.607,18.333 7,18.333 M18,3.045 L18,2 C18,1.447 17.552,1 17,1 C16.448,1 16,1.447 16,2 L16,3 L8,3 L8,2 C8,1.447 7.552,1 7,1 C6.448,1 6,1.447 6,2 L6,3.045 C3.757,3.271 2,5.143 2,7.444 L2,18.556 C2,21.01 3.99,23 6.444,23 L17.556,23 C20.01,23 22,21.01 22,18.556 L22,7.444 C22,5.142 20.243,3.271 18,3.045"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const DriveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/drive"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M7.279,2.0001 C9.934,2.0001 10.777,3.3401 11.945,5.1941 L11.945,5.1941 L12.256,5.6511 C12.413,5.8661 12.665,5.9941 12.931,5.9941 L12.931,5.9941 L18.376,5.9941 C20.926,5.9941 23,8.0701 23,10.6221 L23,10.6221 L23,17.3721 C23,19.9241 20.926,22.0001 18.376,22.0001 L18.376,22.0001 L5.624,22.0001 C3.074,22.0001 1,19.9241 1,17.3721 L1,17.3721 L1,6.6281 C1,4.0761 3.074,2.0001 5.624,2.0001 L5.624,2.0001 Z M7.265,4.0001 L5.624,4.0001 C4.177,4.0001 3,5.1791 3,6.6281 L3,6.6281 L3,17.3721 C3,18.8211 4.177,20.0001 5.624,20.0001 L5.624,20.0001 L18.376,20.0001 C19.823,20.0001 21,18.8211 21,17.3721 L21,17.3721 L21,10.6221 C21,9.1731 19.823,7.9941 18.376,7.9941 L18.376,7.9941 L12.931,7.9941 C12.03,7.9941 11.175,7.5611 10.643,6.8341 L10.643,6.8341 L10.252,6.2601 C9.127,4.4741 8.824,4.0361 7.265,4.0001 L7.265,4.0001 Z M16,16.7282 C16.414,16.7282 16.75,17.0642 16.75,17.4782 C16.75,17.8922 16.414,18.2282 16,18.2282 L16,18.2282 L8,18.2282 C7.586,18.2282 7.25,17.8922 7.25,17.4782 C7.25,17.0642 7.586,16.7282 8,16.7282 L8,16.7282 Z M11.9995,9.1074 C12.4145,9.1074 12.7495,9.4434 12.7495,9.8574 L12.7495,9.8574 L12.7495,13.4494 L14.1875,12.1114 C14.4905,11.8294 14.9645,11.8454 15.2475,12.1504 C15.5295,12.4534 15.5125,12.9284 15.2085,13.2104 L15.2085,13.2104 L12.6815,15.5614 C12.4785,15.7554 12.2065,15.8644 11.9165,15.8644 L11.9165,15.8644 L11.8885,15.8644 C11.5885,15.8564 11.3095,15.7324 11.1035,15.5144 L11.1035,15.5144 L8.7515,12.9754 C8.4705,12.6714 8.4885,12.1974 8.7915,11.9154 C9.0965,11.6344 9.5705,11.6514 9.8525,11.9564 L9.8525,11.9564 L11.2495,13.4654 L11.2495,9.8574 C11.2495,9.4434 11.5855,9.1074 11.9995,9.1074 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const DriveActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/drive_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M16,18.327 L8,18.327 C7.531,18.327 7.15,17.947 7.15,17.477 C7.15,17.008 7.531,16.628 8,16.628 L16,16.628 C16.469,16.628 16.85,17.008 16.85,17.477 C16.85,17.947 16.469,18.327 16,18.327 M8.724,11.842 C9.068,11.523 9.606,11.542 9.925,11.889 L11.15,13.211 L11.15,9.857 C11.15,9.388 11.531,9.008 12,9.008 C12.469,9.008 12.85,9.388 12.85,9.857 L12.85,13.22 L14.119,12.038 C14.461,11.719 15,11.737 15.32,12.081 C15.64,12.425 15.621,12.963 15.277,13.282 L12.75,15.635 C12.528,15.846 12.231,15.965 11.917,15.965 C11.906,15.965 11.895,15.964 11.884,15.964 C11.558,15.955 11.255,15.82 11.031,15.584 L8.678,13.043 C8.359,12.699 8.38,12.161 8.724,11.842 M19.014,6.437 L13.996,6.437 L13.023,6.437 C12.38,6.437 11.775,6.128 11.395,5.603 L11.195,5.328 C9.806,3.109 9.23,2 6.807,2 L6.777,2 L4.986,2 C2.785,2 1,3.805 1,6.031 L1,17.969 C1,20.195 2.785,22 4.986,22 L19.014,22 C21.215,22 23,20.195 23,17.969 L23,10.469 C23,8.242 21.215,6.437 19.014,6.437"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MeetingIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/meeting"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M16.667,0.9999 C20.159,0.9999 23,4.0669 23,7.8379 L23,7.8379 L23,13.3619 C23,17.1329 20.159,20.2009 16.667,20.2009 L16.667,20.2009 L13.292,20.2009 L7.458,23.8499 C7.296,23.9509 7.112,24.0019 6.928,24.0019 C6.761,24.0019 6.594,23.9609 6.443,23.8769 C6.125,23.7009 5.928,23.3659 5.928,23.0019 L5.928,23.0019 L5.928,19.9939 C3.103,19.2949 1,16.5569 1,13.3619 L1,13.3619 L1,7.8379 C1,4.0669 3.842,0.9999 7.334,0.9999 L7.334,0.9999 Z M16.667,2.9999 L7.334,2.9999 C4.944,2.9999 3,5.1709 3,7.8379 L3,7.8379 L3,13.3619 C3,15.8629 4.762,17.9709 7.012,18.1589 C7.066,18.1639 7.111,18.1909 7.163,18.2029 C7.229,18.2199 7.294,18.2309 7.354,18.2589 C7.412,18.2859 7.459,18.3269 7.51,18.3639 C7.562,18.4029 7.615,18.4369 7.659,18.4839 C7.702,18.5309 7.73,18.5859 7.764,18.6399 C7.798,18.6949 7.834,18.7459 7.857,18.8079 C7.881,18.8689 7.886,18.9339 7.896,18.9999 C7.905,19.0529 7.928,19.1009 7.928,19.1559 L7.928,19.1559 L7.928,21.1969 L12.475,18.3529 C12.497,18.3389 12.522,18.3379 12.546,18.3259 C12.605,18.2949 12.668,18.2749 12.733,18.2549 C12.8,18.2359 12.863,18.2209 12.93,18.2159 C12.956,18.2139 12.979,18.2009 13.005,18.2009 L13.005,18.2009 L16.667,18.2009 C19.057,18.2009 21,16.0299 21,13.3619 L21,13.3619 L21,7.8379 C21,5.1709 19.057,2.9999 16.667,2.9999 L16.667,2.9999 Z M13.21,6.1094 C13.993,6.1094 14.665,6.5664 14.992,7.2244 L14.992,7.2244 L15.949,6.8054 C16.568,6.5354 17.276,6.5924 17.844,6.9634 C18.411,7.3344 18.749,7.9594 18.749,8.6364 L18.749,8.6364 L18.749,12.5714 C18.749,13.2474 18.411,13.8724 17.845,14.2434 C17.514,14.4604 17.134,14.5704 16.751,14.5704 C16.48,14.5704 16.207,14.5144 15.95,14.4024 L15.95,14.4024 L14.992,13.9834 C14.665,14.6404 13.992,15.0974 13.21,15.0974 L13.21,15.0974 L7.221,15.0974 C6.119,15.0974 5.223,14.2004 5.223,13.0994 L5.223,13.0994 L5.223,8.1084 C5.223,7.0064 6.119,6.1094 7.221,6.1094 L7.221,6.1094 Z M13.208,8.1084 L7.221,8.1094 L7.223,13.0994 L13.21,13.0974 L13.208,12.5484 L13.208,8.1084 Z M16.749,8.6384 L15.208,9.3134 L15.208,11.8944 L16.751,12.5694 L16.749,8.6384 Z M11.0134,9.6036 C11.5664,9.6036 12.0134,10.0516 12.0134,10.6036 C12.0134,11.1556 11.5664,11.6036 11.0134,11.6036 L11.0134,11.6036 L9.3164,11.6036 C8.7634,11.6036 8.3164,11.1556 8.3164,10.6036 C8.3164,10.0516 8.7634,9.6036 9.3164,9.6036 L9.3164,9.6036 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MeetingActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/meeting_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M17.134,1 C20.374,1 23,3.91262939 23,7.50609353 L23,7.50609353 L23,13.6631193 C23,17.2565835 20.374,20.1702305 17.134,20.1702305 L17.134,20.1702305 L13.106,20.1702305 L7.185,23.9224544 C6.852,24.1331162 6.42,23.8898883 6.42,23.489936 L6.42,23.489936 L6.42,20.1203637 C3.393,19.8628881 1,17.0866292 1,13.6631193 L1,13.6631193 L1,7.50609353 C1,3.91262939 3.627,1 6.867,1 L6.867,1 Z M13.21,6.1993793 L7.221,6.1993793 C6.119,6.1993793 5.223,7.11224742 5.223,8.23272434 L5.223,8.23272434 L5.223,13.3120162 C5.223,14.4335108 6.119,15.3453612 7.221,15.3453612 L7.221,15.3453612 L13.21,15.3453612 C13.993,15.3453612 14.666,14.8802768 14.993,14.2106367 L14.993,14.2106367 L15.949,14.6370489 C16.207,14.7520478 16.48,14.8090385 16.752,14.8090385 C17.134,14.8090385 17.513,14.6970926 17.844,14.4772715 C18.411,14.0997084 18.749,13.463652 18.749,12.7746758 L18.749,12.7746758 L18.749,8.76904709 C18.749,8.08210619 18.411,7.44604981 17.845,7.06950443 C17.279,6.69092367 16.571,6.62884457 15.95,6.906674 L15.95,6.906674 L14.993,7.3330862 C14.665,6.66446373 13.993,6.1993793 13.21,6.1993793 L13.21,6.1993793 Z M12.7081,8.23292788 C12.9841,8.23292788 13.2081,8.46089049 13.2081,8.74177299 L13.2081,8.74177299 L13.2101,12.8013392 C13.2101,13.0832394 12.9861,13.3101844 12.7101,13.3101844 L12.7101,13.3101844 L7.7221,13.3122197 C7.4461,13.3122197 7.2221,13.0842571 7.2221,12.8033746 L7.2221,12.8033746 L7.2211,8.74380837 C7.2211,8.46190818 7.4451,8.23496326 7.7211,8.23496326 L7.7211,8.23496326 Z M16.7466,8.81077239 C16.7536,8.82298467 16.7536,8.83825002 16.7536,8.85351537 C16.7506,9.35116589 16.7496,9.84779871 16.7496,10.3444315 C16.7506,11.0761508 16.7526,11.8088878 16.7566,12.540607 C16.7566,12.6087923 16.7666,12.7034375 16.7246,12.7339682 C16.7056,12.7482158 16.6776,12.7492335 16.6336,12.7298974 C16.5726,12.7054728 16.5166,12.668836 16.4566,12.6413583 L16.0486,12.4591918 L16.0486,12.4591918 C15.8676,12.3787943 15.6856,12.2973791 15.5046,12.2169815 C15.3246,12.136584 15.2076,11.9554351 15.2076,11.7559679 L15.2076,9.78775499 C15.2076,9.58828771 15.3246,9.40713885 15.5046,9.32674132 L16.1266,9.04992959 L16.4466,8.90745296 L16.4466,8.90745296 C16.4966,8.88506377 16.7026,8.73851638 16.7466,8.81077239 Z M11.0141,9.75437475 L9.3171,9.75437475 C8.7651,9.75437475 8.3171,10.2092823 8.3171,10.772065 C8.3171,11.3348477 8.7651,11.7897552 9.3171,11.7897552 L9.3171,11.7897552 L11.0141,11.7897552 C11.5661,11.7897552 12.0141,11.3348477 12.0141,10.772065 C12.0141,10.2092823 11.5661,9.75437475 11.0141,9.75437475 L11.0141,9.75437475 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const NoteIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/note"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M15,1 C17.757,1 20,3.243 20,6 L20,6 L20,10.545 C20,11.098 19.552,11.545 19,11.545 C18.448,11.545 18,11.098 18,10.545 L18,10.545 L18,6 C18,4.346 16.654,3 15,3 L15,3 L6,3 C4.346,3 3,4.346 3,6 L3,6 L3,18 C3,19.654 4.346,21 6,21 L6,21 L12.545,21 C13.098,21 13.545,21.448 13.545,22 C13.545,22.552 13.098,23 12.545,23 L12.545,23 L6,23 C3.243,23 1,20.757 1,18 L1,18 L1,6 C1,3.243 3.243,1 6,1 L6,1 Z M19.921,12.7782 C20.279,12.4182 20.862,12.4172 21.221,12.7752 C21.222,12.7762 21.224,12.7772 21.225,12.7782 L21.225,12.7782 L22.728,14.2952 C23.088,14.6522 23.091,15.2352 22.734,15.5952 C22.732,15.5972 22.73,15.6002 22.728,15.6022 L22.728,15.6022 L18.139,20.2062 C18.021,20.3232 17.874,20.4072 17.714,20.4502 L17.714,20.4502 L15.676,20.9702 C15.601,20.9892 15.524,20.9992 15.447,21.0002073 C14.939,21.0022 14.525,20.5932 14.523,20.0852 C14.523,20.0052 14.533,19.9262 14.553,19.8482 L14.553,19.8482 L15.074,17.8062 C15.116,17.6492 15.198,17.5052 15.314,17.3892 L15.314,17.3892 Z M12,15.4683 C12.552,15.4683 13,15.9163 13,16.4683 C13,17.0203 12.552,17.4683 12,17.4683 L12,17.4683 L6.5,17.4683 C5.948,17.4683 5.5,17.0203 5.5,16.4683 C5.5,15.9163 5.948,15.4683 6.5,15.4683 L6.5,15.4683 Z M14.5,11 C15.052,11 15.5,11.448 15.5,12 C15.5,12.552 15.052,13 14.5,13 L14.5,13 L6.5,13 C5.948,13 5.5,12.552 5.5,12 C5.5,11.448 5.948,11 6.5,11 L6.5,11 Z M14.5,6.5317 C15.052,6.5317 15.5,6.9797 15.5,7.5317 C15.5,8.0837 15.052,8.5317 14.5,8.5317 L14.5,8.5317 L6.5,8.5317 C5.948,8.5317 5.5,8.0837 5.5,7.5317 C5.5,6.9797 5.948,6.5317 6.5,6.5317 L6.5,6.5317 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const NoteActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/note_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M15,1 C17.761,1 20,3.238 20,6 L20,6 L20,9.594 C20,10.389 19.684,11.151 19.122,11.714 L19.122,11.714 L14.166,16.675 C13.992,16.848 13.869,17.065 13.808,17.303 L13.808,17.303 L13.044,20.301 C13.014,20.415 13,20.532 13,20.65 C13,20.758 13.014,20.866 13.041,20.971 C13.095,21.188 13.203,21.392 13.354,21.558 C13.484,21.701 13.673,21.77 13.813,21.902 C13.829,21.918 13.844,21.933 13.858,21.949 C14.088,22.206 14.018,22.565 13.723,22.729 C13.613,22.789 13.497,22.839 13.378,22.878 C13.142,22.958 12.892,23 12.643,23 L12.643,23 L6,23 C3.239,23 1,20.762 1,18 L1,18 L1,6 C1,3.238 3.239,1 6,1 L6,1 Z M20.0947,13.2477 C20.4327,12.9087 20.9817,12.9077 21.3217,13.2447 L21.3217,13.2447 L21.3247,13.2477 L22.7427,14.6797 C23.0837,15.0167 23.0857,15.5667 22.7497,15.9077 C22.7467,15.9087 22.7447,15.9107 22.7427,15.9137 L22.7427,15.9137 L18.4117,20.2587 C18.3007,20.3687 18.1617,20.4487 18.0107,20.4887 L18.0107,20.4887 L16.0877,20.9797 C16.0167,20.9967 15.9447,21.0067 15.8717,21.0077077 C15.3917,21.0097 15.0017,20.6227 14.9997,20.1437 C14.9997,20.0687 15.0097,19.9926978 15.0287,19.9207 L15.0287,19.9207 L15.5197,17.9937 C15.5587,17.8447 15.6377,17.7087 15.7457,17.5997 L15.7457,17.5997 Z M11.5,15.469 L7,15.469 C6.448,15.469 6,15.916 6,16.469 C6,17.021 6.448,17.469 7,17.469 L7,17.469 L11.5,17.469 C12.052,17.469 12.5,17.021 12.5,16.469 C12.5,15.916 12.052,15.469 11.5,15.469 L11.5,15.469 Z M14,11 L7,11 C6.448,11 6,11.447 6,12 C6,12.553 6.448,13 7,13 L7,13 L14,13 C14.552,13 15,12.553 15,12 C15,11.447 14.552,11 14,11 L14,11 Z M14,6.531 L7,6.531 C6.448,6.531 6,6.979 6,7.531 C6,8.084 6.448,8.531 7,8.531 L7,8.531 L14,8.531 C14.552,8.531 15,8.084 15,7.531 C15,6.979 14.552,6.531 14,6.531 L14,6.531 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ViewFileIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/collected_view"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M16.4905546,4.8188 C19.5280359,4.8188 21.9998,7.2908 21.9998,10.3298 L21.9998,10.3298 L21.9998,17.4888 C21.9998,20.5278 19.5280359,22.9998 16.4905546,22.9998 L16.4905546,22.9998 L7.50904538,22.9998 C4.47156412,22.9998 1.9998,20.5278 1.9998,17.4888 L1.9998,17.4888 L1.9998,10.3298 C1.9998,7.2908 4.47156412,4.8188 7.50904538,4.8188 L7.50904538,4.8188 Z M16.4905546,6.8188 L7.50904538,6.8188 C5.57301339,6.8188 3.9988005,8.3938 3.9988005,10.3298 L3.9988005,10.3298 L3.9988005,17.4888 C3.9988005,19.4248 5.57301339,20.9998 7.50904538,20.9998 L7.50904538,20.9998 L16.4905546,20.9998 C18.4265866,20.9998 20.0007995,19.4248 20.0007995,17.4888 L20.0007995,17.4888 L20.0007995,10.3298 C20.0007995,8.3938 18.4265866,6.8188 16.4905546,6.8188 L16.4905546,6.8188 Z M15.9608195,8.9092 C16.5135431,8.9092 16.9603197,9.3572 16.9603197,9.9092 C16.9603197,11.5632 15.6229884,12.9092 13.9808095,12.9092 L13.9808095,12.9092 L10.01979,12.9092 C8.37661159,12.9092 7.03928026,11.5632 7.03928026,9.9092 C7.03928026,9.3572 7.48605687,8.9092 8.03878051,8.9092 C8.59150415,8.9092 9.03828076,9.3562 9.03828076,9.9092 C9.03828076,10.4602 9.47906037,10.9092 10.01979,10.9092 L10.01979,10.9092 L13.9808095,10.9092 C14.5215391,10.9092 14.9613192,10.4602 14.9613192,9.9092 C14.9613192,9.3572 15.4080959,8.9092 15.9608195,8.9092 Z M17.9969014,1 C18.5496251,1 18.9964017,1.448 18.9964017,2 C18.9964017,2.552 18.5496251,3 17.9969014,3 L17.9969014,3 L6.00289845,3 C5.45017481,3 5.0033982,2.552 5.0033982,2 C5.0033982,1.448 5.45017481,1 6.00289845,1 L6.00289845,1 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ViewFileActiveIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/apps/collected_view_active"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M16.9904,4.9428 C19.7564,4.9428 22.0004,7.1958 22.0004,9.9768 L22.0004,9.9768 L22.0004,17.9658 C22.0004,20.7458 19.7564,22.9998 16.9904,22.9998 L16.9904,22.9998 L7.0094,22.9998 C4.2434,22.9998 2.0004,20.7458 2.0004,17.9658 L2.0004,17.9658 L2.0004,9.9768 C2.0004,7.1958 4.2434,4.9428 7.0094,4.9428 L7.0094,4.9428 Z M8.0374,8.9458 C7.4844,8.9458 7.0374,9.3968 7.0374,9.9518 C7.0374,11.6138 8.3754,12.9668 10.0184,12.9668 L10.0184,12.9668 L13.9814,12.9668 C15.6254,12.9668 16.9624,11.6138 16.9624,9.9518 C16.9624,9.3968 16.5154,8.9468 15.9624,8.9468 C15.4104,8.9468 14.9624,9.3968 14.9624,9.9518 C14.9624,10.5068 14.5224,10.9568 13.9814,10.9568 L13.9814,10.9568 L10.0184,10.9568 C9.4774,10.9568 9.0374,10.5058 9.0374,9.9508 C9.0374,9.3958 8.5894,8.9458 8.0374,8.9458 Z M18,0.9998 C18.553,0.9998 19,1.4488 19,2.0048 C19,2.5608 18.553,3.0098 18,3.0098 L18,3.0098 L6,3.0098 C5.447,3.0098 5,2.5608 5,2.0048 C5,1.4488 5.447,0.9998 6,0.9998 L6,0.9998 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ArrowLeftIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/arrow_left_line"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M13.232233,4.76399246 C13.5892557,5.1159824 13.5892557,5.68667086 13.232233,6.0386608 L8.70710678,10.5 L13.232233,14.9613392 C13.5892557,15.3133291 13.5892557,15.8840176 13.232233,16.2360075 C12.8752104,16.5879975 12.2963624,16.5879975 11.9393398,16.2360075 L6.76776695,11.1373342 C6.41074435,10.7853442 6.41074435,10.2146558 6.76776695,9.86266583 L11.9393398,4.76399246 C12.2963624,4.41200251 12.8752104,4.41200251 13.232233,4.76399246 Z"
            id="Path"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MinimizeIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/minimize"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M8,11 C8.55228475,11 9,11.4477153 9,12 L9,17.1534165 C9,17.7057013 8.55228475,18.1534165 8,18.1534165 L7.95616671,18.1534165 C7.40388196,18.1534165 6.95616671,17.7057013 6.95616671,17.1534165 L6.957,14.489 L2.72902343,18.716185 C2.33849914,19.1067092 1.70533416,19.1067092 1.31480987,18.716185 L1.28381505,18.6851901 C0.893290755,18.2946658 0.893290755,17.6615009 1.28381505,17.2709766 L5.512,13.044 L2.84658347,13.0438333 C2.29429872,13.0438333 1.84658347,12.596118 1.84658347,12.0438333 L1.84658347,12 C1.84658347,11.4477153 2.29429872,11 2.84658347,11 L8,11 Z M18.676112,1.29289322 L18.7071068,1.32388804 C19.0976311,1.71441233 19.0976311,2.34757731 18.7071068,2.7381016 L14.4789218,6.965 L17.1443384,6.96524488 C17.6966231,6.96524488 18.1443384,7.41296013 18.1443384,7.96524488 L18.1443384,8.00907817 C18.1443384,8.56136292 17.6966231,9.00907817 17.1443384,9.00907817 L11.9909218,9.00907817 C11.4386371,9.00907817 10.9909218,8.56136292 10.9909218,8.00907817 L10.9909218,2.85566164 C10.9909218,2.30337689 11.4386371,1.85566164 11.9909218,1.85566164 L12.0347551,1.85566164 C12.5870399,1.85566164 13.0347551,2.30337689 13.0347551,2.85566164 L13.0339218,5.52 L17.2618984,1.29289322 C17.6524227,0.902368927 18.2855877,0.902368927 18.676112,1.29289322 Z"
            id="Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MaximizeIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/maximize"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M8.68519013,11.283815 L8.71618495,11.3148099 C9.10670925,11.7053342 9.10670925,12.3384991 8.71618495,12.7290234 L4.488,16.956 L7.15341653,16.9561667 C7.70570128,16.9561667 8.15341653,17.403882 8.15341653,17.9561667 L8.15341653,18 C8.15341653,18.5522847 7.70570128,19 7.15341653,19 L2,19 C1.44771525,19 1,18.5522847 1,18 L1,12.8465835 C1,12.2942987 1.44771525,11.8465835 2,11.8465835 L2.04383329,11.8465835 C2.59611804,11.8465835 3.04383329,12.2942987 3.04383329,12.8465835 L3.043,15.511 L7.27097657,11.283815 C7.66150086,10.8932908 8.29466584,10.8932908 8.68519013,11.283815 Z M18,1 C18.5522847,1 19,1.44771525 19,2 L19,7.15341653 C19,7.70570128 18.5522847,8.15341653 18,8.15341653 L17.9561667,8.15341653 C17.403882,8.15341653 16.9561667,7.70570128 16.9561667,7.15341653 L16.957,4.489 L12.7290234,8.71618495 C12.3384991,9.10670925 11.7053342,9.10670925 11.3148099,8.71618495 L11.283815,8.68519013 C10.8932908,8.29466584 10.8932908,7.66150086 11.283815,7.27097657 L15.512,3.044 L12.8465835,3.04383329 C12.2942987,3.04383329 11.8465835,2.59611804 11.8465835,2.04383329 L11.8465835,2 C11.8465835,1.44771525 12.2942987,1 12.8465835,1 L18,1 Z"
            id="Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const CancelIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/cancel"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M10,0 C10.5522847,-1.01453063e-16 11,0.44771525 11,1 L11,9 L19,9 C19.5522847,9 20,9.44771525 20,10 C20,10.5522847 19.5522847,11 19,11 L11,11 L11,19 C11,19.5522847 10.5522847,20 10,20 C9.44771525,20 9,19.5522847 9,19 L9,10.999 L1,11 C0.44771525,11 0,10.5522847 0,10 C0,9.44771525 0.44771525,9 1,9 L9,8.999 L9,1 C9,0.44771525 9.44771525,1.01453063e-16 10,0 Z"
            id="Combined-Shape"
            fill={color}
            transform="translate(10.000000, 10.000000) rotate(45.000000) translate(-10.000000, -10.000000) "
          />
        </g>
      </svg>
    );
  },
);

export const EmptyRoomIllust = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 200;
  const defaultHeight = 200;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <defs>
        <polygon
          id="path-1"
          points="0.0324 0.3799 22.428 0.3799 22.428 22.2559 0.0324 22.2559"
        />
      </defs>
      <g
        id="illust/b2b/space_make"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="Group-89" transform="translate(25.000000, 40.000000)">
          <path
            d="M34.6574,23.2309437 L34.6574,89.4714 L34.6574,89.4714 L75.0574,97.1594 L75.0574,30.1586566 C75.0574,29.1982789 74.3747743,28.3734815 73.4313315,28.1939237 L37.0313315,21.2662109 C35.9462395,21.0596942 34.8991838,21.7719203 34.6926671,22.8570123 C34.6692078,22.9802739 34.6574,23.1054696 34.6574,23.2309437 Z"
            id="Fill-1"
            fill="#C3C5F8"
          />
          <polygon
            id="Fill-2"
            fill="#8083E1"
            points="39.4089 54.8769 39.4089 57.0339 68.8119 62.5909 68.8119 60.4349"
          />
          <polygon
            id="Fill-3"
            fill="#F2F2F2"
            points="39.4089 60.9204 39.4089 63.0784 68.8119 68.6354 68.8119 66.4794"
          />
          <polygon
            id="Fill-4"
            fill="#F2F2F2"
            points="39.4089 66.9648 39.4089 69.1228 68.8119 74.6808 68.8119 72.5238"
          />
          <polygon
            id="Fill-5"
            fill="#F2F2F2"
            points="39.4089 73.0097 39.4089 75.1677 68.8119 80.7247 68.8119 78.5697"
          />
          <polygon
            id="Fill-6"
            fill="#F2F2F2"
            points="39.4089 79.0546 39.4089 81.2116 68.8119 86.7686 68.8119 84.6126"
          />
          <g id="Group-88" transform="translate(0.000000, 0.416000)">
            <path
              d="M52.5397,30.0624048 C58.4337,30.0865 64.0317,35.0305 65.0407,41.1015 C66.0487,47.1745 62.0857,52.0785 56.1907,52.0526029 C50.2947,52.0285 44.6977,47.0845 43.6897,41.0115 C42.6807,34.9395 46.6427,30.0375 52.5397,30.0624048"
              id="Fill-7"
              fill="#9C9FEE"
            />
            <path
              d="M7.5695,49.2685636 L7.5695,103.92971 C7.5695,104.890103 8.25214649,105.714908 9.19560755,105.89445 L39.7566076,111.710245 C40.8417037,111.916741 41.8887452,111.204494 42.0952403,110.119398 C42.1186947,109.996149 42.1305,109.870966 42.1305,109.745505 L42.1305,55.085243 C42.1305,54.1248714 41.4478827,53.3000774 40.5044473,53.1205132 L9.94344731,47.3038337 C8.85835697,47.0973083 7.81129554,47.8095259 7.60477014,48.8946163 C7.58130878,49.017883 7.5695,49.1430841 7.5695,49.2685636 Z"
              id="Fill-9"
              fill="#E6E6ED"
            />
            <polygon
              id="Fill-11"
              fill="#B8B8BF"
              points="11.634 75.9907 11.634 77.8367 36.788 82.5907 36.788 80.7467"
            />
            <polygon
              id="Fill-13"
              fill="#E6E6E6"
              points="11.634 81.3974 11.634 83.2424 36.788 87.9974 36.788 86.1534"
            />
            <polygon
              id="Fill-15"
              fill="#FFFFFF"
              points="11.634 86.8051 11.634 88.6521 36.788 93.4051 36.788 91.5601"
            />
            <polygon
              id="Fill-17"
              fill="#FFFFFF"
              points="11.634 92.2129 11.634 94.0589 36.788 98.8129 36.788 96.9679"
            />
            <polygon
              id="Fill-19"
              fill="#FFFFFF"
              points="11.634 97.6206 11.634 99.4656 36.788 104.2206 36.788 102.3756"
            />
            <path
              d="M22.8669,55.1190215 C27.9089,55.1401 32.6979,59.3681 33.5609,64.5621 C34.4229,69.7581 31.0339,73.9531 25.9909,73.9311861 C20.9459,73.9101 16.1579,69.6821 15.2969,64.4861 C14.4329,59.2911 17.8219,55.0981 22.8669,55.1190215"
              id="Fill-21"
              fill="#CFCFD6"
            />
            <path
              d="M82.3034,47.3769156 L82.3034,98.7960743 C82.3034,99.7564829 82.9860686,100.581298 83.9295491,100.760823 L112.581549,106.212705 C113.66665,106.419177 114.713676,105.706908 114.920148,104.621808 C114.943597,104.498572 114.9554,104.373404 114.9554,104.247957 L114.9554,52.8296759 C114.9554,51.8692896 114.272762,51.0444873 113.329309,50.8649387 L84.677309,45.4121785 C83.5922146,45.2056742 82.5451671,45.9179123 82.3386629,47.0030066 C82.3152063,47.126261 82.3034,47.2514491 82.3034,47.3769156 Z"
              id="Fill-23"
              fill="#C3C5F8"
            />
            <polygon
              id="Fill-25"
              fill="#898CD2"
              points="86.1432 72.4902 86.1432 74.2332 109.9082 78.7242 109.9082 76.9822"
            />
            <polygon
              id="Fill-27"
              fill="#F2F2F2"
              points="86.1432 77.6889 86.1432 79.4329 109.9082 83.9239 109.9082 82.1809"
            />
            <polygon
              id="Fill-29"
              fill="#F2F2F2"
              points="86.1432 82.8877 86.1432 84.6317 109.9082 89.1237 109.9082 87.3807"
            />
            <polygon
              id="Fill-31"
              fill="#F2F2F2"
              points="86.1432 88.0864 86.1432 89.8314 109.9082 94.3234 109.9082 92.5814"
            />
            <polygon
              id="Fill-33"
              fill="#F2F2F2"
              points="86.1432 93.2871 86.1432 95.0301 109.9082 99.5221 109.9082 97.7791"
            />
            <path
              d="M106.859,61.6935 C107.673,66.6015 104.471,70.5635 99.707,70.5436502 C94.941,70.5235 90.419,66.5295 89.603,61.6205 C88.788,56.7125 91.989,52.7515 96.756,52.7713498 C101.519,52.7915 106.044,56.7865 106.859,61.6935 Z"
              id="Fill-35"
              fill="#9C9FEE"
            />
            <g id="Group-7" transform="translate(52.506000, 67.748000)">
              <path
                d="M5.15143483e-14,2.41651126 L5.15143483e-14,42.6367211 C4.82199796e-14,43.5971088 0.682639538,44.4219118 1.62609448,44.601459 L23.6890945,48.8002266 C24.7741892,49.0067289 25.8212355,48.294489 26.0277378,47.2093943 C26.0511939,47.086141 26.063,46.9609541 26.063,46.8354887 L26.063,6.61527886 C26.063,5.65489123 25.3803605,4.83008817 24.4369055,4.65054105 L2.37390552,0.451773448 C1.28881079,0.245271132 0.241764506,0.957511009 0.0352621898,2.04260574 C0.0118061021,2.16585897 5.14989833e-14,2.29104594 5.15143483e-14,2.41651126 Z"
                id="Fill-37"
                fill="#DEE0FF"
              />
              <polygon
                id="Fill-39"
                fill="#C3C5F8"
                points="3.065 21.9741 3.065 23.3661 22.034 26.9511 22.034 25.5591"
              />
              <polygon
                id="Fill-41"
                fill="#FFFFFF"
                points="3.065 26.4546 3.065 27.8456 22.034 31.4316 22.034 30.0406"
              />
              <polygon
                id="Fill-43"
                fill="#FFFFFF"
                points="3.065 30.9336 3.065 32.3266 22.034 35.9116 22.034 34.5206"
              />
              <polygon
                id="Fill-45"
                fill="#FFFFFF"
                points="3.065 35.4136 3.065 36.8066 22.034 40.3926 22.034 39.0006"
              />
              <polygon
                id="Fill-47"
                fill="#FFFFFF"
                points="3.065 39.8945 3.065 41.2865 22.034 44.8725 22.034 43.4805"
              />
              <path
                d="M11.5357,6.23433955 C15.3377,6.2504 18.9497,9.4394 19.6007,13.3564 C20.2507,17.2744 17.6947,20.4374 13.8917,20.4214604 C10.0877,20.4054 6.4777,17.2164 5.8267,13.2974 C5.1767,9.3804 7.7327,6.2184 11.5357,6.23433955"
                id="Fill-49"
                fill="#C3C5F8"
              />
            </g>
            <g id="Group-53" transform="translate(127.000000, 47.000000)">
              <mask id="mask-2" fill="white">
                <use xlinkHref="#path-1" />
              </mask>
              <g id="Clip-52" />
              <path
                d="M0.0324,1.5881482 L0.0324,17.1672192 C0.0324,17.6474315 0.373745449,18.0598434 0.845495506,18.1495973 L21.2414955,22.0300829 C21.7840479,22.1333074 22.3075536,21.7771617 22.4107781,21.2346093 C22.4225,21.1729982 22.4284,21.110421 22.4284,21.0477048 L22.4284,5.46954452 C22.4284,4.98934843 22.0870771,4.57694562 21.6153468,4.48717449 L1.21934682,0.605778164 C0.676798836,0.502530284 0.153277846,0.858653385 0.0500299655,1.40120137 C0.0383026713,1.46282608 0.0324,1.52541756 0.0324,1.5881482 Z"
                id="Fill-51"
                fill="#868686"
                mask="url(#mask-2)"
              />
            </g>
            <polyline
              id="Fill-54"
              fill="#868686"
              points="128.1432 57.6762 119.9522 65.0122 131.3482 63.2762"
            />
            <polygon
              id="Fill-56"
              fill="#868686"
              points="141.0202 58.2505 140.9812 60.2425 136.5962 59.5275 136.6352 57.5365"
            />
            <path
              d="M140.7267,60.0835 L140.7607,58.3255 L136.8897,57.6945 L136.8547,59.4525 L140.7267,60.0835 L140.7267,60.0835 Z M132.6677,56.2485 L144.5097,58.1775 L144.3987,63.8785 L132.5577,61.9495 L132.6677,56.2485 Z"
              id="Fill-58"
              fill="#FFFFFF"
            />
            <polygon
              id="Fill-60"
              fill="#FFFFFF"
              points="141.5597 54.2622 141.5397 55.2562 144.5567 55.7472 144.5237 57.4022 132.6827 55.4722 132.7147 53.8172 135.7317 54.3082 135.7507 53.3152"
            />
            <path
              d="M88.4816,1.7926482 L88.4816,18.1984 L88.4816,18.1984 L109.690696,22.2335829 C110.233248,22.3368074 110.756754,21.9806617 110.859978,21.4381093 C110.8717,21.3764982 110.8776,21.313921 110.8776,21.2512048 L110.8776,5.67404452 C110.8776,5.19384843 110.536277,4.78144562 110.064547,4.69167449 L89.6685468,0.810278164 C89.1259988,0.707030284 88.6024778,1.06315339 88.49923,1.60570137 C88.4875027,1.66732608 88.4816,1.72991756 88.4816,1.7926482 Z"
              id="Fill-62"
              fill="#EF7894"
            />
            <polyline
              id="Fill-64"
              fill="#EF7894"
              points="89.5861 13.062 81.3951 20.398 92.7911 18.662"
            />
            <path
              d="M103.4528,9.6494 C103.4928,8.0864 102.3568,6.6244 100.9178,6.3814 C100.3288,6.2824 99.7838,6.4044 99.3388,6.6854 C100.4928,7.4614 101.2738,8.8724 101.2368,10.3534 C101.2208,10.9764 101.0628,11.5564 100.7788,12.0444 C101.6648,12.9594 102.2588,14.1454 102.4608,15.3994 L104.7538,15.7864 C104.7968,14.0814 103.9398,12.4584 102.6528,11.5064 C103.1298,11.0734 103.4338,10.4224 103.4528,9.6494 M99.6628,12.0794 C100.9508,13.0314 101.8068,14.6564 101.7648,16.3584 L93.6538,14.9894 C93.6968,13.2874 94.6268,11.9634 95.9508,11.4524 C95.4998,10.8634 95.2308,10.1154 95.2498,9.3424 C95.2888,7.7814 96.4868,6.7114 97.9278,6.9534 C99.3678,7.1974 100.5038,8.6614 100.4648,10.2224 C100.4458,10.9954 100.1398,11.6464 99.6628,12.0794"
              id="Fill-66"
              fill="#F1F2F2"
            />
            <path
              d="M0.0002,8.4895012 L0.0002,24.0685192 C0.0002,24.5487315 0.341545449,24.9611434 0.813295506,25.0508973 L22.3962,29.1572 L22.3962,29.1572 L22.3962,12.3718082 C22.3962,11.8916284 22.0548996,11.4792347 21.5831892,11.3894462 L1.18718915,7.50713922 C0.644645616,7.40386796 0.121109281,7.7599685 0.0178380219,8.30251204 C0.00610538058,8.36415038 0.0002,8.42675616 0.0002,8.4895012 Z"
              id="Fill-68"
              fill="#868686"
            />
            <polyline
              id="Fill-70"
              fill="#868686"
              points="20.5426 23.5049 28.0726 34.1719 12.6236 26.7009"
            />
            <polygon
              id="Fill-72"
              fill="#F1F2F2"
              points="14.96 16.1426 14.868 24.0446 6 22.6696 6.092 14.7676"
            />
            <polygon
              id="Fill-74"
              fill="#F1F2F2"
              points="14.9854 13.959 14.9704 15.228 6.1024 13.854 6.1164 12.584"
            />
            <polygon
              id="Fill-76"
              fill="#666666"
              points="7.1402 21.4282 7.7962 20.6792 8.3272 20.7992 7.1382 21.9702 6.4642 21.1202 6.8852 20.9412"
            />
            <polygon
              id="Fill-78"
              fill="#666666"
              points="7.1646 19.353 7.8196 18.606 8.3506 18.724 7.1626 19.895 6.4886 19.047 6.9096 18.868"
            />
            <polygon
              id="Fill-80"
              fill="#666666"
              points="8.939 21.2651 8.942 20.9541 13.968 21.7331 13.965 22.0441"
            />
            <polygon
              id="Fill-82"
              fill="#666666"
              points="7.1886 17.2768 7.8446 16.5308 8.3756 16.6498 7.1866 17.8218 6.5126 16.9718 6.9336 16.7928"
            />
            <polygon
              id="Fill-84"
              fill="#666666"
              points="8.963 19.1894 8.966 18.8794 13.993 19.6594 13.989 19.9684"
            />
            <polygon
              id="Fill-86"
              fill="#666666"
              points="8.9908 16.8056 14.0168 17.5846 14.0128 17.8946 8.9878 17.1166"
            />
          </g>
        </g>
      </g>
    </svg>
  );
});

// lock2
export const LockLineIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/common/lock"
        stroke="none"
        strokeWidth="1"
        fill="none"
        fillRule="evenodd"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
      >
        <path
          d="M12.49,0.9997 C16.251,0.9997 19.311,4.2457 19.311,8.2357 L19.311,8.2357 L19.311,10.3417 C20.87,10.8827 22,12.3537 22,14.0977 L22,14.0977 L22,19.0097 C22,21.2097 20.213,22.9997 18.016,22.9997 L18.016,22.9997 L5.984,22.9997 C3.787,22.9997 2,21.2097 2,19.0097 L2,19.0097 L2,14.0977 C2,12.3507 3.134,10.8787 4.697,10.3397 L4.697,10.3397 L4.697,8.2357 C4.697,4.2457 7.757,0.9997 11.519,0.9997 L11.519,0.9997 Z M18.016,12.1067 L5.984,12.1067 C4.89,12.1067 4,12.9997 4,14.0977 L4,14.0977 L4,19.0097 C4,20.1067 4.89,20.9997 5.984,20.9997 L5.984,20.9997 L18.016,20.9997 C19.11,20.9997 20,20.1067 20,19.0097 L20,19.0097 L20,14.0977 C20,12.9997 19.11,12.1067 18.016,12.1067 L18.016,12.1067 Z M12,12.96 C12.969,12.96 13.758,13.758 13.758,14.74 C13.758,15.345 13.457,15.879 13,16.201 L13,16.201 L13,18.731 C13,19.284 12.552,19.731 12,19.731 C11.448,19.731 11,19.284 11,18.731 L11,18.731 L11,16.201 C10.543,15.879 10.242,15.345 10.242,14.74 C10.242,13.758 11.031,12.96 12,12.96 Z M12.49,2.9997 L11.519,2.9997 C8.86,2.9997 6.697,5.3487 6.697,8.2357 L6.697,8.2357 L6.697,10.1067 L17.311,10.1067 L17.311,8.2357 C17.311,5.3487 15.148,2.9997 12.49,2.9997 L12.49,2.9997 Z"
          id="Combined-Shape"
          fill="currentcolor"
        />
      </g>
    </svg>
  );
});

export const SettingIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/setting_2"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M14.0678798,14.0678798 C13.4860543,14.6507049 12.797261,14.9416177 12.0005,14.9416177 C11.203739,14.9416177 10.5129463,14.6507049 9.93212051,14.0678798 C9.34929536,13.4860543 9.05838264,12.797261 9.05838264,12.0005 C9.05838264,11.203739 9.34929536,10.513946 9.93212051,9.93212051 C10.5129463,9.35029506 11.203739,9.05838264 12.0005,9.05838264 C12.797261,9.05838264 13.4860543,9.35029506 14.0678798,9.93212051 C14.6497052,10.513946 14.9416177,11.203739 14.9416177,12.0005 C14.9416177,12.797261 14.6497052,13.4860543 14.0678798,14.0678798 M21.1127663,10.6179148 L19.8011598,10.1490554 C19.4422675,10.0200941 19.1423574,9.7491754 19.0133961,9.38928336 C18.9494153,9.21433585 18.880436,9.04138773 18.8054585,8.87143872 C18.6535041,8.52454279 18.6774969,8.12666215 18.840448,7.78476472 L19.4292714,6.55113481 C19.6681997,6.05228446 19.5802261,5.45346411 19.1953415,5.05658318 C19.1123664,4.97160867 19.0293913,4.88763386 18.9434171,4.80465875 C18.5465362,4.42077392 17.9477158,4.33280031 17.4488655,4.56972923 L16.2152356,5.15955228 C15.8743378,5.3225034 15.4754575,5.3464962 15.1295613,5.19454179 C14.9596123,5.11956428 14.7866642,5.04958527 14.6107169,4.98660417 C14.2518246,4.85764286 13.9799062,4.55773283 13.8509449,4.1978408 L13.3820855,2.88723398 C13.1981407,2.36938933 12.7102871,2.0144958 12.1594523,2.0024994 C12.1054685,2.0014997 12.0524844,2.0005 12.0005,2.0005 C11.9475159,2.0005 11.8945318,2.0014997 11.840548,2.0024994 C11.2907129,2.0144958 10.8018596,2.36938933 10.6179148,2.88723398 L10.1490554,4.1978408 C10.0200941,4.55773283 9.7491754,4.85764286 9.38928336,4.98660417 C9.21433585,5.04958527 9.04138773,5.11956428 8.87043902,5.19454179 C8.52454279,5.3464962 8.12666215,5.3225034 7.78476472,5.15955228 L6.55113481,4.56972923 C6.05228446,4.33180061 5.45346411,4.42077392 5.05658318,4.80465875 C4.97060897,4.88763386 4.88663416,4.97160867 4.80465875,5.05658318 C4.42077392,5.45346411 4.33280031,6.05228446 4.56972923,6.55113481 L5.15955228,7.78476472 C5.3225034,8.12566245 5.3464962,8.52454279 5.19454179,8.87143872 C5.11956428,9.04138773 5.04958527,9.21433585 4.98660417,9.38928336 C4.85764286,9.7491754 4.55773283,10.0200941 4.1978408,10.1490554 L2.88723398,10.6179148 C2.36938933,10.8018596 2.0144958,11.2907129 2.0024994,11.840548 C2.0005,11.8945318 2.0005,11.9475159 2.0005,12.0005 C2.0005,12.0524844 2.0005,12.1054685 2.0024994,12.1594523 C2.0144958,12.7102871 2.36938933,13.1981407 2.88723398,13.3820855 L4.1978408,13.8509449 C4.55773283,13.9789065 4.85764286,14.2518246 4.98660417,14.6107169 C5.04958527,14.7866642 5.11956428,14.9596123 5.19454179,15.1295613 C5.3464962,15.4754575 5.3225034,15.8753375 5.15955228,16.2162353 L4.56972923,17.4498652 C4.33280031,17.9477158 4.42077392,18.5465362 4.80465875,18.9434171 C4.88663416,19.0293913 4.97060897,19.1133661 5.05658318,19.1953415 C5.45346411,19.5802261 6.05228446,19.6681997 6.55113481,19.4302711 L7.78376502,18.840448 C8.12566245,18.6774969 8.52454279,18.6535041 8.87043902,18.8054585 C9.04038803,18.880436 9.21433585,18.950415 9.38928336,19.0133961 C9.7491754,19.1423574 10.0200941,19.4422675 10.1490554,19.8021595 L10.6169151,21.1127663 C10.8018596,21.630611 11.2897132,21.9855045 11.8395483,21.9985006 C11.8945318,21.9995003 11.9475159,22.0005 12.0005,22.0005 C12.0524844,22.0005 12.1054685,21.9995003 12.160452,21.9985006 C12.7112868,21.9855045 13.1981407,21.630611 13.3830852,21.1127663 L13.8509449,19.8021595 C13.9799062,19.4422675 14.2518246,19.1423574 14.6107169,19.0133961 C14.7866642,18.950415 14.9596123,18.880436 15.1295613,18.8054585 C15.4754575,18.6535041 15.8753375,18.6774969 16.2152356,18.840448 L17.4488655,19.4302711 C17.9477158,19.6681997 18.5465362,19.5802261 18.9434171,19.1953415 C19.0293913,19.1133661 19.1133661,19.0293913 19.1953415,18.9434171 C19.5802261,18.5465362 19.6681997,17.9477158 19.4302711,17.4488655 L18.840448,16.2152356 C18.6774969,15.8743378 18.6535041,15.4754575 18.8054585,15.1295613 C18.880436,14.9596123 18.9494153,14.7866642 19.0133961,14.6107169 C19.1423574,14.2518246 19.4422675,13.9789065 19.8021595,13.8509449 L21.1127663,13.3830852 C21.630611,13.1981407 21.9855045,12.7112868 21.9985006,12.160452 C21.9995003,12.1054685 22.0005,12.0524844 22.0005,12.0005 C22.0005,11.9475159 21.9995003,11.8945318 21.9985006,11.8395483 C21.9855045,11.2907129 21.630611,10.8018596 21.1127663,10.6179148"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ArrowUpIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/arrow_up_line"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M4.26399246,7.26776695 C4.6159824,6.91074435 5.18667086,6.91074435 5.5386608,7.26776695 L10,11.7928932 L14.4613392,7.26776695 C14.8133291,6.91074435 15.3840176,6.91074435 15.7360075,7.26776695 C16.0879975,7.62478956 16.0879975,8.20363757 15.7360075,8.56066017 L10.6373342,13.732233 C10.2853442,14.0892557 9.71465577,14.0892557 9.36266583,13.732233 L4.26399246,8.56066017 C3.91200251,8.20363757 3.91200251,7.62478956 4.26399246,7.26776695 Z"
            id="Path"
            fill={color}
            transform="translate(10.000000, 10.500000) scale(1, -1) translate(-10.000000, -10.500000) "
          />
        </g>
      </svg>
    );
  },
);

export const ArrowDownIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/arrow_down_line"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M4.26399246,7.26776695 C4.6159824,6.91074435 5.18667086,6.91074435 5.5386608,7.26776695 L10,11.7928932 L14.4613392,7.26776695 C14.8133291,6.91074435 15.3840176,6.91074435 15.7360075,7.26776695 C16.0879975,7.62478956 16.0879975,8.20363757 15.7360075,8.56066017 L10.6373342,13.732233 C10.2853442,14.0892557 9.71465577,14.0892557 9.36266583,13.732233 L4.26399246,8.56066017 C3.91200251,8.20363757 3.91200251,7.62478956 4.26399246,7.26776695 Z"
            id="Path"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const PrivateRoomIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/private_room"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M14.7585,-0.0004 C15.8535,-0.0004 16.9155,0.4126 17.7495,1.1616 C18.7825,2.0926 19.3755,3.4486 19.3755,4.8816 L19.3755,4.8816 L19.3755,5.0606 C21.4065,5.7096 22.8965,7.6466 22.8965,9.9566 L22.8965,9.9566 L22.8965,12.2666 C22.8965,14.6006 21.3425,16.6166 19.2205,17.2136 L19.2205,17.2136 L19.2205,19.1146 C19.2205,19.4736 19.0265,19.8056 18.7145,19.9836 C18.5615,20.0706 18.3905,20.1146 18.2205,20.1146 C18.0425,20.1146 17.8665,20.0676 17.7085,19.9736 L17.7085,19.9736 L16.7635,19.4116 C15.8295,20.5906 14.4445,21.2996 12.9425,21.2996 L12.9425,21.2996 L10.4865,21.2996 L6.1885,23.8596 C6.0305,23.9536 5.8535,23.9996 5.6765,23.9996 C5.5055,23.9996 5.3355,23.9556 5.1825,23.8696 C4.8695,23.6916 4.6765,23.3596 4.6765,22.9996 L4.6765,22.9996 L4.6765,21.0996 C2.5545,20.5016 1.0005,18.4866 1.0005,16.1526 L1.0005,16.1526 L1.0005,13.8426 C1.0005,11.0046 3.2335,8.6956 5.9795,8.6956 L5.9795,8.6956 L6.1475,8.6956 C6.5765,6.9416 7.8755,5.5736 9.5215,5.0526 L9.5215,5.0526 L9.5215,4.8816 C9.5215,2.1906 11.5925,-0.0004 14.1385,-0.0004 L14.1385,-0.0004 Z M5.9745,10.6956 C4.3335,10.6986 3.0005,12.1096 3.0005,13.8426 L3.0005,13.8426 L3.0005,16.1526 C3.0005,17.7776 4.2105,19.1476 5.7555,19.2706 C6.2755,19.3126 6.6765,19.7456 6.6765,20.2676 L6.6765,20.2676 L6.6765,21.2406 L9.6995,19.4406 C9.8545,19.3486 10.0305,19.2996 10.2105,19.2996 L10.2105,19.2996 L12.9425,19.2996 C13.7355,19.2996 14.4805,18.9606 15.0295,18.3776 L15.0295,18.3776 L13.4105,17.4136 L10.9535,17.4136 C8.2085,17.4136 5.9745,15.1046 5.9745,12.2666 L5.9745,12.2666 Z M17.9175,6.8096 L10.9535,6.8096 C9.3965,6.8096 8.0985,8.1036 7.9975,9.7556 C7.9945,9.8176 7.9865,9.8776 7.9785,9.9376 L7.9785,9.9376 L7.9745,12.2666 C7.9745,14.0016 9.3105,15.4136 10.9535,15.4136 L10.9535,15.4136 L13.6855,15.4136 C13.8655,15.4136 14.0425,15.4626 14.1975,15.5546 L14.1975,15.5546 L16.9665,17.2036 L17.2205,17.3556 L17.2205,16.3816 C17.2205,15.8606 17.6205,15.4266 18.1405,15.3846 C19.6865,15.2616 20.8965,13.8916 20.8965,12.2666 L20.8965,12.2666 L20.8965,9.9566 C20.8965,8.2216 19.5605,6.8096 17.9175,6.8096 L17.9175,6.8096 Z M14.3008,8.5869 C15.1778,8.5869 15.8908,9.3089 15.8908,10.1959 C15.8908,10.7439 15.6188,11.2269 15.2058,11.5179 L15.2058,11.5179 L15.2058,12.9029 C15.2058,13.4029 14.8008,13.8079 14.3008,13.8079 C13.8008,13.8079 13.3958,13.4029 13.3958,12.9029 L13.3958,12.9029 L13.3958,11.5179 C12.9828,11.2269 12.7108,10.7439 12.7108,10.1959 C12.7108,9.3089 13.4238,8.5869 14.3008,8.5869 Z M14.7585,1.8006 L14.1385,1.8006 C12.6075,1.8006 11.3645,3.1446 11.3285,4.8096 L11.3285,4.8096 L17.5675,4.8096 C17.5475,3.9246 17.1725,3.0656 16.5445,2.4996 C16.0435,2.0486 15.4085,1.8006 14.7585,1.8006 L14.7585,1.8006 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const LeaderIcon = React.memo(
  ({ width = 1, height = 1, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <title>Icon/common/leader_2</title>
        <g
          id="Icon/common/leader_2"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M2.7734,9.4772 L2.7734,16.6712 C2.4254,16.7382 2.0964,16.8572 1.8594,17.0642 C1.2724,17.5772 1.4194,18.3102 2.1874,18.7022 C4.6944,19.9812 7.9834,20.6042 12.0024,20.6002191 C16.0194,20.5962 19.3054,19.9712 21.8104,18.6982 C22.5794,18.3072 22.7274,17.5742 22.1424,17.0602 C21.8864,16.8362 21.5264,16.7072 21.1464,16.6472 L21.1464,9.2102 L21.1464,9.1852 C22.0984,9.1152 22.8584,8.3852 22.9754,7.4462 C22.9814,7.4012 22.9944,7.3572 22.9974,7.3112 C22.9984,7.2912 22.9944,7.2712 22.9944,7.2512 C22.9954,7.2342 23.0004,7.2182 23.0004,7.2002 C23.0004,7.1542 22.9894,7.1112 22.9864,7.0672 C22.9824,7.0262 22.9814,6.9852 22.9744,6.9452 C22.8474,5.9622 22.0174,5.2002 21.0004,5.2002 C19.8954,5.2002 19.0004,6.0952 19.0004,7.2002 C19.0004,7.9492 19.4174,8.5942 20.0264,8.9372 L16.4804,14.1022 L12.5584,6.9112 C13.3894,6.6682 14.0004,5.9092 14.0004,5.0002 C14.0004,3.8952 13.1044,3.0002 12.0004,3.0002 C10.8954,3.0002 10.0004,3.8952 10.0004,5.0002 C10.0004,5.9522 10.6674,6.7462 11.5584,6.9472 L7.4644,14.1092 L4.0274,9.2072 C4.6074,8.8572 5.0004,8.2272 5.0004,7.5002 C5.0004,6.3952 4.1044,5.5002 3.0004,5.5002 C1.8954,5.5002 1.0004,6.3952 1.0004,7.5002 C1.0004,8.5272 1.7764,9.3632 2.7734,9.4772"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const CameraIcon = React.memo(({ width = 1, height = 1, color }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <title>Icon/common/camera</title>
      <g
        id="Icon/common/camera"
        stroke="none"
        strokeWidth="1"
        fill="none"
        fillRule="evenodd"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
      >
        <path
          d="M14.491,3.0003 C15.824,3.0003 17.011,3.9023 17.376,5.1943 L17.376,5.1943 L17.881,6.9803 L18.999,6.9853 C21.205,6.9853 22.999,8.7953 22.999,11.0193 L22.999,11.0193 L22.999,16.9663 C22.999,19.1903 21.205,21.0003 18.999,21.0003 L18.999,21.0003 L5,21.0003 C2.794,21.0003 1,19.1903 1,16.9663 L1,16.9663 L1,11.0193 C1,8.7953 2.794,6.9853 5,6.9853 L5,6.9853 L6.119,6.9853 L6.623,5.1953 C6.988,3.9023 8.175,3.0003 9.508,3.0003 L9.508,3.0003 Z M14.491,5.0003 L9.508,5.0003 C9.065,5.0003 8.67,5.3033 8.547,5.7393 L8.547,5.7393 L8.043,7.5243 C7.8,8.3843 7.009,8.9853 6.119,8.9853 L6.119,8.9853 L5,8.9853 C3.897,8.9853 3,9.8973 3,11.0193 L3,11.0193 L3,16.9663 C3,18.0883 3.897,19.0003 5,19.0003 L5,19.0003 L18.999,19.0003 C20.102,19.0003 20.999,18.0883 20.999,16.9663 L20.999,16.9663 L20.999,11.0193 C20.999,9.8973 20.102,8.9853 18.999,8.9853 L18.999,8.9853 L17.88,8.9853 C16.99,8.9853 16.199,8.3843 15.956,7.5233 L15.956,7.5233 L15.452,5.7383 C15.329,5.3033 14.934,5.0003 14.491,5.0003 L14.491,5.0003 Z M11.9995,9.2114 C14.3135,9.2114 16.1975,11.0944 16.1975,13.4094 C16.1975,15.7244 14.3135,17.6074 11.9995,17.6074 C9.6855,17.6074 7.8015,15.7244 7.8015,13.4094 C7.8015,11.0944 9.6855,9.2114 11.9995,9.2114 Z M11.9995,11.2114 C10.7875,11.2114 9.8015,12.1974 9.8015,13.4094 C9.8015,14.6214 10.7875,15.6074 11.9995,15.6074 C13.2115,15.6074 14.1975,14.6214 14.1975,13.4094 C14.1975,12.1974 13.2115,11.2114 11.9995,11.2114 Z"
          id="Combined-Shape"
          fill={color || 'currentcolor'}
        />
      </g>
    </svg>
  );
});

export const AddIcon = React.memo(
  ({ width = 1, height = 1, color = '#fff' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <title>Icon/common/add</title>
        <g
          id="Icon/common/add"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M4,12.004 C4,12.556 4.448,13.004 5,13.004 L11,13.004 L11,19.002 C11,19.554 11.448,20.002 12,20.002 C12.552,20.002 13,19.554 13,19.002 L13,13.004 L19,13.004 C19.552,13.004 20,12.556 20,12.004 C20,11.452 19.552,11.004 19,11.004 L13,11.004 L13,5 C13,4.448 12.552,4 12,4 C11.448,4 11,4.448 11,5 L11,11.004 L5,11.004 C4.448,11.004 4,11.452 4,12.004"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const EditIcon = React.memo(
  ({ width = 1, height = 1, color = '#fff' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <title>Icon/common/edit</title>
        <g
          id="Icon/common/edit"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M9.95801661,14.0636889 C9.26414942,13.3685497 8.44175112,12.8846684 7.60629887,12.6371948 L15.3543151,4.8759803 L19.1289125,8.65749751 L11.3819004,16.418712 C11.1338755,15.5807222 10.6478672,14.7548042 9.95801661,14.0636889 L9.95801661,14.0636889 Z M5.47649812,19.6328508 L4.45326995,18.6087527 C4.42917037,18.583603 4.39603344,18.574549 4.36992556,18.5524173 L5.88016616,14.5344923 C6.52683833,14.3161925 7.61935281,14.566684 8.53814945,15.4861591 C9.49008302,16.4398378 9.69693779,17.5212773 9.49209132,18.1439852 L5.47649812,19.6328508 Z M20.2103813,3.79353483 C20.7144643,4.29753592 20.9916095,4.96953739 20.9916095,5.68379044 C20.9916095,6.23507308 20.8229124,6.75818799 20.5156427,7.20182967 L16.8103317,3.48972578 C17.8375765,2.79961649 19.3176926,2.89820353 20.2103813,3.79353483 L20.2103813,3.79353483 Z M21.6302485,2.37005867 C19.8067133,0.543180443 16.839452,0.543180443 15.0149127,2.37005867 L4.40808323,12.9963333 C4.40507078,12.9993513 4.40507078,13.0033752 4.40205833,13.0063932 C4.35285502,13.0556867 4.32273054,13.1220821 4.28557701,13.1824415 C4.25143593,13.235759 4.20725336,13.2840465 4.18516208,13.3423939 C4.18415793,13.3464179 4.18014133,13.3484299 4.17813303,13.3524538 L1.06426594,21.6387952 C0.92569333,22.0079936 1.01506262,22.4234676 1.29220784,22.7031329 C1.48400036,22.896283 1.74206674,22.9999 2.00414972,22.9999 C2.12163519,22.9999 2.23912066,22.9787742 2.35258954,22.9375286 L10.6619253,19.8561806 C10.666946,19.8541686 10.6699585,19.8491386 10.6749792,19.8481327 C10.7342241,19.8249949 10.7844315,19.7807313 10.8396597,19.7455217 C10.8989045,19.7083 10.962166,19.6791263 11.0113693,19.6318448 C11.0153859,19.6278208 11.0204066,19.6268148 11.0234191,19.6237968 L21.6302485,8.9975222 C22.5138999,8.11225082 22.9999082,6.93524227 22.9999082,5.68379044 C22.9999082,4.43233861 22.5138999,3.25533006 21.6302485,2.37005867 L21.6302485,2.37005867 Z"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MiniChatIcon = React.memo(
  ({ width = 1, height = 1, color = '#fff' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/minichat"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M18.600175,0.9997 C21.5772914,0.9997 24.0002,3.5047 24.0002,6.5837 L24.0002,6.5837 L24.0002,10.1367 C24.0002,12.6977 22.2765536,14.9037 19.9356758,15.5247 L19.9356758,15.5247 L19.9356758,17.7047 C19.9356758,18.0647 19.741603,18.3967 19.429486,18.5747 C19.2754282,18.6607 19.1053644,18.7047 18.9353007,18.7047 C18.7572339,18.7047 18.5811679,18.6577 18.4231086,18.5647 L18.4231086,18.5647 L17.2986869,17.8947 C16.2853069,19.2187 14.7577341,20.0157 13.1001125,20.0157 L13.1001125,20.0157 L10.3540827,20.0157 L5.57729141,22.8597 C5.41923214,22.9527 5.24316611,22.9997 5.06509934,22.9997 C4.89503556,22.9997 4.72397141,22.9557 4.57091402,22.8687 C4.25879697,22.6917 4.0647242,22.3597 4.0647242,21.9997 L4.0647242,21.9997 L4.0647242,19.8197 C1.72384637,19.1987 0.000200000001,16.9917 0.000200000001,14.4317 L0.000200000001,14.4317 L0.000200000001,10.8787 C0.000200000001,7.7997 2.42310859,5.2947 5.40022501,5.2947 L5.40022501,5.2947 L5.67632855,5.2947 C6.24354125,2.8247 8.37934218,0.9997 10.9002875,0.9997 L10.9002875,0.9997 Z M5.50026252,7.2947 L5.40022501,7.2947 C3.525522,7.2947 2.00095028,8.9027 2.00095028,10.8787 L2.00095028,10.8787 L2.00095028,14.4317 C2.00095028,16.2827 3.38246835,17.8427 5.14512935,17.9837 C5.66532442,18.0257 6.06547448,18.4587 6.06547448,18.9807 L6.06547448,18.9807 L6.06547448,20.2407 L9.56678747,18.1567 C9.72184562,18.0647 9.89891202,18.0157 10.0789795,18.0157 L10.0789795,18.0157 L13.1001125,18.0157 C14.0484681,18.0157 14.9378016,17.5907 15.5710391,16.8657 L15.5710391,16.8657 L13.6463173,15.7207 L10.9002875,15.7207 C7.92217074,15.7207 5.50026252,13.2157 5.50026252,10.1367 L5.50026252,10.1367 L5.50026252,7.2947 Z M18.600175,2.9997 L10.9002875,2.9997 C9.12362128,2.9997 7.64106532,4.4737 7.52702256,6.3557 L7.52702256,6.3557 C7.52302106,6.4217 7.51501806,6.4857 7.50701506,6.5487 L7.50701506,6.5487 L7.5010128,10.1367 C7.5010128,12.1137 9.02558452,13.7207 10.9002875,13.7207 L10.9002875,13.7207 L13.9214205,13.7207 C14.101488,13.7207 14.2785544,13.7697 14.4336125,13.8617 L14.4336125,13.8617 L17.4957608,15.6837 L17.9349255,15.9457 L17.9349255,14.6857 C17.9349255,14.1637 18.3350756,13.7307 18.8552707,13.6887 C20.6179316,13.5477 21.9994497,11.9877 21.9994497,10.1367 L21.9994497,10.1367 L21.9994497,6.5837 C21.9994497,4.6077 20.474878,2.9997 18.600175,2.9997 L18.600175,2.9997 Z M17.925622,8.8564 C18.2197323,8.6204 18.6408903,8.6794 18.8649743,8.9904 C19.0900587,9.2994 19.0330373,9.7424 18.7379266,9.9784 C17.7785669,10.7464 16.5190946,11.1244 14.9795172,11.1264079 C13.4389395,11.1284 12.1784669,10.7524 11.2171063,9.9804 C10.922996,9.7444 10.866975,9.3014 11.0920594,8.9924 C11.3171439,8.6824 11.7373014,8.6244 12.0324121,8.8604 C12.7376766,9.4264 13.7130423,9.7174 14.9775165,9.7154 C16.242991,9.7134 17.2193572,9.4214 17.925622,8.8564 Z M16.5882205,6.2982 C17.0323871,6.2982 17.3935225,6.6582 17.3935225,7.1022 C17.3935225,7.5472 17.0323871,7.9072 16.5882205,7.9072 C16.1440539,7.9072 15.7829185,7.5472 15.7829185,7.1022 C15.7829185,6.6582 16.1440539,6.2982 16.5882205,6.2982 Z M13.3688132,6.2982 C13.8129798,6.2982 14.1741152,6.6582 14.1741152,7.1022 C14.1741152,7.5472 13.8129798,7.9072 13.3688132,7.9072 C12.9246467,7.9072 12.5635112,7.5472 12.5635112,7.1022 C12.5635112,6.6582 12.9246467,6.2982 13.3688132,6.2982 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ImageIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#fff' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/attachment/image"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M17.0133,1 C20.3143,1 23.0003,3.686 23.0003,6.986 L23.0003,6.986 L23.0003,17.014 C23.0003,17.177 22.9883,17.337 22.9753,17.497 C22.9943,17.651 22.9753,17.806 22.9183,17.958 C22.4633,20.811 19.9923,23 17.0133,23 L17.0133,23 L6.9863,23 C3.8773,23 1.3163,20.617 1.0283,17.582 C1.0163,17.507 1.0123,17.434 1.0173,17.358 C1.0103,17.243 1.0003,17.13 1.0003,17.014 L1.0003,17.014 L1.0003,6.986 C1.0003,3.686 3.6853,1 6.9863,1 L6.9863,1 Z M7.3113,13.027 L3.0713,17.726 C3.4093,19.584 5.0313,21 6.9863,21 L6.9863,21 L17.0133,21 C18.8343,21 20.3563,19.767 20.8313,18.097 L20.8313,18.097 L16.6543,15.709 L13.3403,17.921 C12.4593,18.507 11.2703,18.305 10.6333,17.458 L10.6333,17.458 L7.3113,13.027 Z M17.0133,3 L6.9863,3 C4.7883,3 3.0003,4.788 3.0003,6.986 L3.0003,6.986 L3.0003,14.821 L5.8313,11.687 C6.2323,11.243 6.8063,10.997 7.4033,11.03 C8.0023,11.058 8.5513,11.348 8.9103,11.827 L8.9103,11.827 L12.2343,16.258 L15.5483,14.045 C16.1803,13.624 16.9843,13.596 17.6463,13.973 L17.6463,13.973 L21.0003,15.89 L21.0003,6.986 C21.0003,4.788 19.2123,3 17.0133,3 L17.0133,3 Z M12,5.0771 C13.697,5.0771 15.077,6.4571 15.077,8.1541 C15.077,9.8501 13.697,11.2311 12,11.2311 C10.303,11.2311 8.923,9.8501 8.923,8.1541 C8.923,6.4571 10.303,5.0771 12,5.0771 Z M12,7.0771 C11.406,7.0771 10.923,7.5601 10.923,8.1541 C10.923,8.7471 11.406,9.2311 12,9.2311 C12.594,9.2311 13.077,8.7471 13.077,8.1541 C13.077,7.5601 12.594,7.0771 12,7.0771 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ArrowRightIcon = React.memo(
  ({ width = 1, height = 1, color = '#000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/arrow_right_line"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M6.76776695,16.2360075 C6.41074435,15.8840176 6.41074435,15.3133291 6.76776695,14.9613392 L11.2928932,10.5 L6.76776695,6.0386608 C6.41074435,5.68667086 6.41074435,5.1159824 6.76776695,4.76399246 C7.12478956,4.41200251 7.70363757,4.41200251 8.06066017,4.76399246 L13.232233,9.86266583 C13.5892557,10.2146558 13.5892557,10.7853442 13.232233,11.1373342 L8.06066017,16.2360075 C7.70363757,16.5879975 7.12478956,16.5879975 6.76776695,16.2360075 Z"
            id="Path"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ChattingWithMeIcon = React.memo(
  ({ width = 1, height = 1, color = '#000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      >
        <title>Icon/common/chatting with me</title>
        <g
          id="Icon/common/chatting-with-me"
          stroke="none"
          strokeWidth="1"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M16.667,0.9999 C20.159,0.9999 23,4.0669 23,7.8379 L23,7.8379 L23,13.3619 C23,17.1329 20.159,20.2009 16.667,20.2009 L16.667,20.2009 L13.292,20.2009 L7.458,23.8499 C7.296,23.9509 7.112,24.0019 6.928,24.0019 C6.761,24.0019 6.594,23.9609 6.443,23.8769 C6.125,23.7009 5.928,23.3659 5.928,23.0019 L5.928,23.0019 L5.928,19.9939 C3.103,19.2949 1,16.5569 1,13.3619 L1,13.3619 L1,7.8379 C1,4.0669 3.842,0.9999 7.334,0.9999 L7.334,0.9999 Z M16.667,2.9999 L7.334,2.9999 C4.944,2.9999 3,5.1709 3,7.8379 L3,7.8379 L3,13.3619 C3,15.8629 4.762,17.9709 7.012,18.1589 C7.066,18.1639 7.111,18.1909 7.163,18.2029 C7.229,18.2199 7.294,18.2309 7.354,18.2589 C7.412,18.2859 7.459,18.3269 7.51,18.3639 C7.562,18.4029 7.615,18.4369 7.659,18.4839 C7.702,18.5309 7.73,18.5859 7.764,18.6399 C7.798,18.6949 7.834,18.7459 7.857,18.8079 C7.881,18.8689 7.886,18.9339 7.896,18.9999 C7.905,19.0529 7.928,19.1009 7.928,19.1559 L7.928,19.1559 L7.928,21.1969 L12.475,18.3529 C12.497,18.3389 12.523,18.3379 12.546,18.3259 C12.605,18.2949 12.667,18.2749 12.732,18.2559 C12.799,18.2359 12.863,18.2199 12.932,18.2149 C12.957,18.2129 12.979,18.2009 13.005,18.2009 L13.005,18.2009 L16.667,18.2009 C19.057,18.2009 21,16.0299 21,13.3619 L21,13.3619 L21,7.8379 C21,5.1709 19.057,2.9999 16.667,2.9999 L16.667,2.9999 Z M16.4877,11.2195 C16.9347,10.8615 17.5747,10.9525 17.9147,11.4235 C18.2557,11.8945 18.1687,12.5655 17.7217,12.9235 C16.2637,14.0915 14.3507,14.6635 12.0137,14.6675209 C9.6737,14.6715 7.7597,14.1005 6.3007,12.9285 C5.8537,12.5695 5.7687,11.8965 6.1097,11.4275 C6.4517,10.9575 7.0907,10.8675 7.5367,11.2265 C8.6097,12.0865 10.0897,12.5285 12.0097,12.5255 C13.9317,12.5225 15.4137,12.0785 16.4877,11.2195 Z M14.4561,7.3349 C15.1311,7.3349 15.6791,7.8819 15.6791,8.5569 C15.6791,9.2319 15.1311,9.7789 14.4561,9.7789 C13.7811,9.7789 13.2341,9.2319 13.2341,8.5569 C13.2341,7.8819 13.7811,7.3349 14.4561,7.3349 Z M9.5674,7.3349 C10.2424,7.3349 10.7894,7.8819 10.7894,8.5569 C10.7894,9.2319 10.2424,9.7789 9.5674,9.7789 C8.8924,9.7789 8.3444,9.2319 8.3444,8.5569 C8.3444,7.8819 8.8924,7.3349 9.5674,7.3349 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const GroupIcon = React.memo(
  ({ width = 1, height = 1, color = '#000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      >
        <title>Icon/common/group</title>
        <g
          id="Icon/common/group"
          stroke="none"
          strokeWidth="1"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.9991,11.7862 C4.0621,8.2162 8.6441,6.9902 12.2111,9.0502 C15.7811,11.1112 17.0081,15.6922 14.9481,19.2612 C14.8751,19.3852 14.8021,19.5052 14.7251,19.6222 C14.4691,20.0142 13.9421,20.1272 13.5481,19.8672 C13.1561,19.6102 13.0451,19.0842 13.3031,18.6902 C13.3631,18.5992 13.4201,18.5062 13.4761,18.4092 C15.0671,15.6542 14.1191,12.1152 11.3621,10.5222 C8.6051,8.9322 5.0651,9.8782 3.4721,12.6362 C1.8801,15.3932 2.8291,18.9322 5.5861,20.5252 C6.7121,21.1752 7.9851,21.4212 9.2661,21.2452 C9.7331,21.1762 10.1601,21.5052 10.2251,21.9702 C10.2891,22.4342 9.9651,22.8642 9.5001,22.9292 C9.1511,22.9772 8.8021,23.0022 8.4551,23.0022 C7.1551,23.0022 5.8861,22.6612 4.7371,21.9982 C1.1671,19.9362 -0.0609,15.3552 1.9991,11.7862 Z M20.2381,10.7954 C20.6101,10.5084 21.1431,10.5754 21.4311,10.9454 C22.4701,12.2854 23.0271,13.9584 22.9961,15.6554 C22.9251,19.7324 19.5851,23.0004 15.5241,23.0004 C15.4801,23.0004 15.4361,23.0004 15.3921,22.9994 C14.9061,22.9904 14.4191,22.9344 13.9451,22.8334 C13.5561,22.7494 13.1721,22.6334 12.8021,22.4894 C11.7821,22.0914 10.8421,21.4574 10.0851,20.6544 C9.7631,20.3134 9.7791,19.7754 10.1201,19.4534 C10.4611,19.1304 10.9991,19.1454 11.3221,19.4884 C11.9071,20.1084 12.6321,20.5974 13.4201,20.9054 C13.7071,21.0174 14.0031,21.1064 14.3021,21.1714 C14.6681,21.2504 15.0451,21.2934 15.4211,21.2994 C18.6281,21.3154 21.2421,18.8094 21.2971,15.6264 C21.3201,14.2954 20.9021,13.0374 20.0871,11.9884 C19.8001,11.6174 19.8681,11.0834 20.2381,10.7954 Z M11.2461,15.705 C11.5311,15.477 11.9381,15.535 12.1551,15.834 C12.3711,16.134 12.3161,16.562 12.0321,16.789 C11.1041,17.532 9.8861,17.897 8.3991,17.8990082 C6.9111,17.901 5.6931,17.538 4.7641,16.792 C4.4801,16.564 4.4251,16.136 4.6421,15.837 C4.8601,15.537 5.2661,15.481 5.5511,15.709 C6.2331,16.257 7.1751,16.538 8.3971,16.536 C9.6211,16.534 10.5641,16.251 11.2461,15.705 Z M9.9539,13.2328 C10.3829,13.2328 10.7319,13.5798 10.7319,14.0098 C10.7319,14.4398 10.3829,14.7878 9.9539,14.7878 C9.5239,14.7878 9.1759,14.4398 9.1759,14.0098 C9.1759,13.5798 9.5239,13.2328 9.9539,13.2328 Z M6.8426,13.2328 C7.2716,13.2328 7.6206,13.5798 7.6206,14.0098 C7.6206,14.4398 7.2716,14.7878 6.8426,14.7878 C6.4126,14.7878 6.0646,14.4398 6.0646,14.0098 C6.0646,13.5798 6.4126,13.2328 6.8426,13.2328 Z M12.0154,1.9998 C13.9764,1.9998 15.8254,2.7528 17.2324,4.1248 C18.6614,5.5198 19.4624,7.3878 19.4854,9.3848 C19.5044,10.8748 19.0844,12.3198 18.2724,13.5628 C18.1084,13.8128 17.8364,13.9468167 17.5594,13.9468167 C17.3994,13.9478 17.2384,13.9038 17.0954,13.8098 C16.7014,13.5518 16.5914,13.0258 16.8484,12.6328 C17.4764,11.6728 17.8004,10.5568 17.7864,9.4058 C17.7684,7.8628 17.1494,6.4188 16.0454,5.3418 C14.9404,4.2638 13.4724,3.6978 11.9414,3.6998 C9.7124,3.7278 7.6754,5.0578 6.7514,7.0878 C6.5574,7.5148 6.0544,7.7038 5.6264,7.5098 C5.1984,7.3158 5.0104,6.8118 5.2044,6.3848 C6.3984,3.7568 9.0354,2.0358 11.9204,2.0008 C11.9524,1.9998 11.9834,1.9998 12.0154,1.9998 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const HorizontalViewMoreIcon = React.memo(
  ({ width = 1, height = 1, color = 'rgb(107, 107, 107)' }) => {
    const defaultWidth = 17;
    const defaultHeight = 17;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      >
        <g
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <g fill={color}>
            <g>
              <g>
                <path
                  d="M8.111 11.556c.553 0 1 .447 1 1 0 .552-.447 1-1 1-.553 0-1-.448-1-1 0-.553.447-1 1-1zm0-4.223c.553 0 1 .448 1 1 0 .553-.447 1-1 1-.553 0-1-.447-1-1 0-.552.447-1 1-1zm0-4.222c.553 0 1 .448 1 1 0 .553-.447 1-1 1-.553 0-1-.447-1-1 0-.552.447-1 1-1z"
                  transform="translate(-17 -694) translate(17 694) rotate(90 8.111 8.333)"
                />
              </g>
            </g>
          </g>
        </g>
      </svg>
    );
  },
);

export const HomeIcon = React.memo(
  ({ width = 1, height = 1, color = '#000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      >
        <g
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <g fill={color}>
            <g>
              <path
                d="M21.318 12.685c.192.18.437.27.682.27.267 0 .534-.108.731-.32.377-.404.355-1.037-.05-1.413l-9.414-8.77c-.735-.609-1.8-.609-2.579.038l-9.37 8.732c-.404.376-.426 1.01-.05 1.413.377.405 1.01.427 1.413.05l1.372-1.278v7.997c0 1.43 1.212 2.594 2.701 2.594h10.474c1.5 0 2.718-1.172 2.718-2.612v-5.48c0-1.88-1.558-3.41-3.473-3.41-1.915 0-3.473 1.53-3.473 3.41V17.1c0 .553.447 1 1 1 .552 0 1-.447 1-1v-3.196c0-.778.66-1.409 1.473-1.409.812 0 1.473.631 1.473 1.41v5.48c0 .331-.329.611-.718.611H6.754c-.387 0-.7-.266-.7-.593V9.547l-.002-.004L12 4l9.318 8.685z"
                transform="translate(-13 -13) translate(13 13)"
              />
            </g>
          </g>
        </g>
      </svg>
    );
  },
);

export const LanguageIcon = React.memo(
  ({ width = 1, height = 1, color = '#000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      >
        <g
          id="Icon/common/language"
          stroke="none"
          strokeWidth="1"
          fill="none"
          fillRule="evenodd"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
        >
          <path
            d="M8.3921,3.7608 C7.5791,5.0838 6.9731,6.8548 6.6641,8.8978 L3.5631,8.8978 C4.4111,6.6008 6.1631,4.7408 8.3921,3.7608 L8.3921,3.7608 Z M20.4371,8.8978 L17.3351,8.8978 C17.0271,6.8548 16.4211,5.0838 15.6081,3.7608 C17.8371,4.7408 19.5891,6.6008 20.4371,8.8978 L20.4371,8.8978 Z M15.6081,20.2398 C16.3411,19.0468 16.9031,17.4858 17.2331,15.6918 L20.1991,15.6918 C19.2841,17.7178 17.6441,19.3448 15.6081,20.2398 L15.6081,20.2398 Z M6.5461,14.1918 L3.2811,14.1918 C3.1041,13.4888 3.0001,12.7578 3.0001,12.0008 C3.0001,11.4528 3.0571,10.9188 3.1511,10.3978 L6.5011,10.3978 C6.4621,10.9208 6.4351,11.4528 6.4351,12.0008 C6.4351,12.7538 6.4731,13.4868 6.5461,14.1918 L6.5461,14.1918 Z M11.2501,10.3978 L11.2501,14.1918 L8.0591,14.1918 C7.9811,13.4968 7.9351,12.7668 7.9351,12.0008 C7.9351,11.4468 7.9621,10.9148 8.0041,10.3978 L11.2501,10.3978 Z M8.2901,15.6918 L11.2501,15.6918 L11.2501,20.9628 C11.1861,20.9578 11.1211,20.9578 11.0581,20.9508 C9.9151,20.2558 8.8291,18.3598 8.2901,15.6918 L8.2901,15.6918 Z M12.9421,20.9508 C12.8781,20.9578 12.8131,20.9578 12.7501,20.9628 L12.7501,15.6918 L15.7101,15.6918 C15.1701,18.3598 14.0851,20.2558 12.9421,20.9508 L12.9421,20.9508 Z M16.0651,12.0008 C16.0651,12.7668 16.0181,13.4968 15.9401,14.1918 L12.7501,14.1918 L12.7501,10.3978 L15.9961,10.3978 C16.0381,10.9148 16.0651,11.4468 16.0651,12.0008 L16.0651,12.0008 Z M21.0001,12.0008 C21.0001,12.7578 20.8951,13.4888 20.7191,14.1918 L17.4541,14.1918 C17.5271,13.4868 17.5651,12.7538 17.5651,12.0008 C17.5651,11.4528 17.5381,10.9208 17.4991,10.3978 L20.8491,10.3978 C20.9431,10.9188 21.0001,11.4528 21.0001,12.0008 L21.0001,12.0008 Z M15.8141,8.8978 L12.7501,8.8978 L12.7501,3.0378 C12.8131,3.0438 12.8781,3.0438 12.9421,3.0508 C14.1671,3.7958 15.3231,5.9238 15.8141,8.8978 L15.8141,8.8978 Z M11.0581,3.0508 C11.1211,3.0438 11.1861,3.0438 11.2501,3.0378 L11.2501,8.8978 L8.1851,8.8978 C8.6771,5.9238 9.8331,3.7958 11.0581,3.0508 L11.0581,3.0508 Z M3.8011,15.6918 L6.7671,15.6918 C7.0971,17.4858 7.6591,19.0468 8.3921,20.2398 C6.3561,19.3448 4.7161,17.7178 3.8011,15.6918 L3.8011,15.6918 Z M12.0001,23.0008 C18.0651,23.0008 23.0001,18.0668 23.0001,12.0008 C23.0001,5.9348 18.0651,0.9998 12.0001,0.9998 C5.9341,0.9998 1.0001,5.9348 1.0001,12.0008 C1.0001,18.0668 5.9341,23.0008 12.0001,23.0008 L12.0001,23.0008 Z"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MobileAlarmIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 10;
  const defaultHeight = 10;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
      >
        <g fill="#7b7671">
          <g>
            <path
              d="M.538.538c.163-.162.427-.162.59 0l8.333 8.32c.163.163.163.427 0 .59-.08.082-.188.122-.294.122-.107 0-.213-.04-.295-.122l-1.15-1.147c-.011 0-.02.006-.033.006H6.037c.019.077.03.156.03.237 0 .573-.478 1.039-1.067 1.039s-1.068-.466-1.068-1.039c0-.081.013-.16.03-.237H1.895c-.229 0-.442-.12-.557-.311-.111-.188-.117-.415-.012-.608.315-.587.485-1.24.494-1.89l.015-1.21c0-.02.002-.04.004-.059.071-.458.26-.888.539-1.266L.539 1.128C.376.966.376.702.539.538zM5 8.338c-.13 0-.234.093-.234.206 0 .114.105.206.234.206.13 0 .234-.092.234-.206 0-.113-.104-.205-.234-.205zm-2.026-4.78c-.155.238-.261.498-.307.771l-.015 1.18c-.009.672-.16 1.345-.44 1.965h4.682zM5 1.669c1.664 0 3.032 1.17 3.182 2.722.008.08.007.307.003.887l-.001.148c-.002.229-.188.414-.417.414-.233-.002-.418-.19-.417-.42l.002-.147.002-.45v-.265c0-.044 0-.076-.002-.092C7.245 3.366 6.212 2.501 5 2.501c-.143 0-.286.012-.424.035-.227.04-.442-.115-.48-.342-.038-.227.115-.442.342-.48.184-.03.373-.046.562-.046zM5.348.43c.23 0 .416.186.416.416 0 .23-.186.417-.416.417h-.695c-.23 0-.417-.186-.417-.417 0-.23.186-.416.417-.416z"
              transform="translate(-159.000000, -331.000000) translate(159.000000, 331.000000)"
            />
          </g>
        </g>
      </g>
    </svg>
  );
});
