import React from 'react';
import { useCoreStores } from 'teespace-core';
import moment from 'moment';
import { Tooltip } from 'antd';
import styled from 'styled-components';

const NewFriendBadge = styled.span`
  position: absolute;
  font-size: 0.63rem;
  background: red;
  color: #ffffff;
  width: 1.44rem;
  height: 1rem;
  border-radius: 0.56rem;
  top: 0.5rem;
  right: 0.7rem;
  text-align: center;
`;

const REM_UNIT = 16;

export const ChattingIcon = React.memo(
  ({ width = 2.625, height = 1.875, tooltipText }) => {
    const defaultWidth = 42;
    const defaultHeight = 30;

    const icon = (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/LNB/chatting"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <g id="Group" transform="translate(1.500000, 3.000000)">
            <path
              d="M13,0 C19.627417,0 25,5.29840533 25,11.8343195 C25,18.3702337 19.627417,23.6686391 13,23.6686391 C10.5849496,23.6686391 8.33652805,22.9650664 6.45398859,21.7544233 L0.979968011,23.6591739 C0.771313403,23.7317425 0.543336927,23.6214231 0.470768299,23.4127684 C0.433661685,23.3060768 0.443396334,23.1886697 0.497567824,23.0895463 L3.03981163,18.436965 C1.75178326,16.5509554 1,14.2792195 1,11.8343195 C1,5.29840533 6.372583,0 13,0 Z M10.0937854,12.2568047 C9.89878544,12.5930966 10.0177854,13.0201183 10.3587854,13.2104536 C11.7187854,13.9737673 13.2677854,14.3751479 14.8417854,14.3751479 C16.4117854,14.3751479 17.9607854,13.9737673 19.3187854,13.2134122 C19.6597854,13.0230769 19.7797854,12.595069 19.5867854,12.2597633 C19.3917854,11.9224852 18.9597854,11.8061144 18.6187854,11.9954635 C16.3247854,13.278501 13.3497854,13.2775148 11.0607854,11.9944773 C10.7187854,11.8011834 10.2857854,11.9205128 10.0937854,12.2568047 Z M12.0562854,8.87573964 C11.5702854,8.87573964 11.1732854,9.26627219 11.1732854,9.74556213 C11.1732854,10.2258383 11.5702854,10.6163708 12.0562854,10.6163708 C12.5432854,10.6163708 12.9392854,10.2258383 12.9392854,9.74556213 C12.9392854,9.26627219 12.5432854,8.87573964 12.0562854,8.87573964 Z M17.3287854,8.87573964 C16.8427854,8.87573964 16.4457854,9.26627219 16.4457854,9.74556213 C16.4457854,10.2258383 16.8427854,10.6163708 17.3287854,10.6163708 C17.8147854,10.6163708 18.2117854,10.2258383 18.2117854,9.74556213 C18.2117854,9.26627219 17.8147854,8.87573964 17.3287854,8.87573964 Z"
              id="Combined-Shape"
              fill="#FFFFFF"
            />
            <path
              d="M27.3604248,0 C33.7887847,0 39,5.25508799 39,11.7375676 C39,12.2138664 38.971867,12.6835392 38.9171853,13.1449882 C38.7401572,14.9518626 38.1526855,16.6360232 37.2510209,18.1040704 L37.053964,18.413896 L38.4286413,23.1659229 C38.4900308,23.3781358 38.3677642,23.5999342 38.1555514,23.6613237 C38.0639909,23.6878105 37.9659816,23.6807317 37.8791777,23.6413624 L33.6988565,21.7454089 C31.9403107,22.8947124 29.8597366,23.5842945 27.6162085,23.6204853 L27.4290053,23.6302666 C25.4666803,23.6302666 23.6188352,23.1368309 22.000759,22.2663048 C25.2147164,19.7968754 27.2862676,15.9146576 27.2862676,11.5485009 C27.2862676,7.35450902 25.3748649,3.60704357 22.3758306,1.13004977 C23.8853822,0.404921416 25.576011,0 27.3604248,0 Z"
              id="Combined-Shape"
              fill="#C4C6F9"
            />
          </g>
        </g>
      </svg>
    );

    if (tooltipText) {
      return (
        <Tooltip title={tooltipText} placement="bottom" color="#07142d">
          {icon}
        </Tooltip>
      );
    }
    return icon;
  },
);

export const MailIcon = React.memo(
  ({ width = 1.812, height = 1.937, tooltipText }) => {
    const defaultWidth = 29;
    const defaultHeight = 31;

    const icon = (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/LNB/mail"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <g id="Group" transform="translate(0.500000, 4.000000)">
            <path
              d="M27.9950621,9.17549493 L28,9.38712551 L28,21.613466 C28,23.9552993 26.1937672,25.8835181 23.9464418,25.9949169 L23.7409624,26 L4.25903764,26 C1.98527069,26 0.11309634,24.1406586 0.0049353637,21.8251814 L0,21.613466 L0,9.38712551 C0,7.42599207 1.26712395,5.75382084 3.0002174,5.19739619 L2.9996679,9.957 L3.03740148,9.97823259 C3.03724875,9.97856828 3.03709621,9.97890402 3.03694387,9.97923981 L2.87083488,9.8839746 C2.39254225,9.60783222 1.78095185,9.77170738 1.50480947,10.25 C1.24839155,10.6941289 1.3713765,11.2531931 1.77320188,11.5518885 L1.87083488,11.6160254 L13.849426,18.5338433 C14.1336918,18.8099889 14.5625843,18.8955913 14.9358987,18.7370058 L15.0460254,18.6820508 L26.1311506,12.2820508 L26.2287836,12.2179139 C26.5971235,11.9441097 26.73116,11.4515235 26.5534344,11.0292349 L26.497176,10.9160254 L26.433039,10.8183924 C26.1592349,10.4500525 25.6666487,10.316016 25.2443601,10.4937416 L25.1311506,10.55 L25.0535921,10.5964297 C25.0519882,10.4811152 25.0312388,10.365284 24.9903454,10.2542574 L24.9928623,10.2253446 L24.9928623,10.2253446 L25,10 L25.0010623,5.1979255 C26.6703586,5.73472907 27.9077086,7.3071007 27.9950621,9.17549493 Z M23.5,5 L23.5,9.797 L23.3833336,9.87764947 L23.3838615,5 L23.5,5 Z M4.5,5.003 L4.62344788,5.00567715 L4.62344788,7.2716506 L4.61574195,7.66600312 L4.6152141,9.664245 L4.5,9.588 L4.5,5.003 Z"
              id="Combined-Shape"
              fill="#C4C6F9"
            />
            <path
              d="M20.5,-8.52651283e-14 C22.1568542,-8.55694875e-14 23.5,1.34314575 23.5,3 L23.5,11 C23.5,11.1847345 23.4749538,11.3636192 23.4280719,11.5334435 L14.5776679,16.642833 L4.4996679,10.823 L4.5,3 C4.5,1.34314575 5.84314575,-8.49607691e-14 7.5,-8.52651283e-14 L20.5,-8.52651283e-14 Z M17.5,8 L10.5,8 C9.94771525,8 9.5,8.44771525 9.5,9 C9.5,9.55228475 9.94771525,10 10.5,10 L10.5,10 L17.5,10 C18.0522847,10 18.5,9.55228475 18.5,9 C18.5,8.44771525 18.0522847,8 17.5,8 L17.5,8 Z M18.5,4 L9.5,4 C8.94771525,4 8.5,4.44771525 8.5,5 C8.5,5.55228475 8.94771525,6 9.5,6 L9.5,6 L18.5,6 C19.0522847,6 19.5,5.55228475 19.5,5 C19.5,4.44771525 19.0522847,4 18.5,4 L18.5,4 Z"
              id="Combined-Shape"
              fill="#FFFFFF"
            />
          </g>
        </g>
      </svg>
    );

    if (tooltipText) {
      return (
        <Tooltip title={tooltipText} placement="bottom" color="#07142d">
          {icon}
        </Tooltip>
      );
    }
    return icon;
  },
);

const isNewFriend = () => {};

export const PeopleIcon = React.memo(
  ({ width = 2.062, height = 1.687, tooltipText, newFriendsNum }) => {
    const { friendStore } = useCoreStores();
    const defaultWidth = 33;
    const defaultHeight = 27;
    const badgeNum = newFriendsNum > 99 ? '99+' : newFriendsNum;

    const icon = (
      <>
        <svg
          width={`${width}rem`}
          height={`${height}rem`}
          viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
          version="1.1"
        >
          <g
            id="Icon/LNB/people_list"
            stroke="none"
            strokeWidth="1"
            fill="none"
            transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
              (height * REM_UNIT) / defaultHeight
            })`}
            fillRule="evenodd"
          >
            <g id="Group-2" transform="translate(0.000000, 2.000000)">
              <path
                d="M21.95,22.2 C27.8870611,22.2 32.7,17.3870611 32.7,11.45 C32.7,5.51293894 27.8870611,0.7 21.95,0.7 C16.0129389,0.7 11.2,5.51293894 11.2,11.45 C11.2,17.3870611 16.0129389,22.2 21.95,22.2 Z M17.7098,11.9961 C17.5358,12.3021 17.6428,12.6911 17.9488,12.8631 C19.1688,13.5571 20.5588,13.9231 21.9688,13.9231 C23.3788,13.9231 24.7678,13.5581 25.9868,12.8661 C26.2928,12.6931 26.4008,12.3041 26.2268,11.9981 C26.0528,11.6921 25.6648,11.5851 25.3588,11.7581 C23.2998,12.9251 20.6318,12.9241 18.5788,11.7571 C18.2708,11.5811 17.8828,11.6901 17.7098,11.9961 Z M19.5747,8.9202 C19.1377,8.9202 18.7827,9.2742 18.7827,9.7122 C18.7827,10.1492 19.1377,10.5032 19.5747,10.5032 C20.0117,10.5032 20.3657,10.1492 20.3657,9.7122 C20.3657,9.2742 20.0117,8.9202 19.5747,8.9202 Z M24.0991,8.9202 C23.6621,8.9202 23.3071,9.2742 23.3071,9.7122 C23.3071,10.1492 23.6621,10.5032 24.0991,10.5032 C24.5351,10.5032 24.8901,10.1492 24.8901,9.7122 C24.8901,9.2742 24.5351,8.9202 24.0991,8.9202 Z"
                id="Shape"
                fill="#FFFFFF"
              />
              <path
                d="M9.6167,15.9902 C10.3657,15.9902 10.9777,16.6032 10.9777,17.3522 L10.9777,17.8082 C10.9777,18.5562 10.3657,19.1692 9.6167,19.1692 L1.3617,19.1692 C0.6137,19.1692 0.0007,18.5562 0.0007,17.8082 L0.0007,17.3522 C0.0007,16.6032 0.6137,15.9902 1.3617,15.9902 L9.6167,15.9902 Z M6.812,10.083 C7.561,10.083 8.173,10.697 8.173,11.445 L8.173,11.901 C8.173,12.65 7.561,13.262 6.812,13.262 L1.362,13.262 C0.614,13.262 7.96696042e-13,12.65 7.96696042e-13,11.901 L7.96696042e-13,11.445 C7.96696042e-13,10.697 0.614,10.083 1.362,10.083 L6.812,10.083 Z M8.8227,4.1767 C9.5707,4.1767 10.1837,4.7897 10.1837,5.5387 L10.1837,5.9947 C10.1837,6.7427 9.5707,7.3557 8.8227,7.3557 L1.3617,7.3557 C0.6137,7.3557 0.000700000001,6.7427 0.000700000001,5.9947 L0.000700000001,5.5387 C0.000700000001,4.7897 0.6137,4.1767 1.3617,4.1767 L8.8227,4.1767 Z"
                id="Combined-Shape"
                fill="#C4C6F9"
              />
            </g>
          </g>
        </svg>
        <NewFriendBadge>{badgeNum}</NewFriendBadge>
      </>
    );

    if (tooltipText) {
      return (
        <Tooltip title={tooltipText} placement="bottom" color="#07142d">
          {icon}
        </Tooltip>
      );
    }
    return icon;
  },
);

export const SpaceIcon = React.memo(({ width = 1.25, height = 1.25 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/space"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M18.3302439,1.15989486 C19.1016999,1.56220711 19.1297773,2.30402912 18.8009497,3.09300158 C18.1930588,4.55154454 17.5817953,5.73405954 16.5060482,7.2510173 C16.739757,7.9694937 16.8672003,8.73495105 16.8672003,9.52993822 C16.8672003,13.5822361 13.5558925,16.8672726 9.4711873,16.8672726 C8.61880818,16.8672726 7.80010711,16.7242238 7.03814584,16.4610049 L6.72478816,16.6934387 C3.85425855,18.7962486 2.4415751,19.4616407 1.50110376,18.6880767 C0.457861504,17.8299808 1.06082416,16.3977716 3.14863627,13.3415022 C2.46787602,12.2299657 2.07517431,10.9254483 2.07517431,9.52993822 C2.07517431,5.47764031 5.38648212,2.1926038 9.4711873,2.1926038 C10.8179022,2.1926038 12.0805488,2.54968757 13.1681731,3.17362286 L13.3580888,3.05010101 C14.7448906,2.15821314 15.8388565,1.54606949 16.6176575,1.24556541 C17.3097518,0.978517534 17.8300686,0.899054786 18.3302439,1.15989486 Z M4.45887749,14.9253851 L4.41559125,14.9910913 C4.11795229,15.4457245 3.86560776,15.8526311 3.65890655,16.2108062 L3.49816721,16.4955144 L3.50865522,16.4898735 C3.95154613,16.2275614 4.48054647,15.8793575 5.09351841,15.4461203 C4.87264876,15.2834131 4.66057788,15.1098942 4.45887749,14.9253851 Z M9.49134039,14.5561965 L9.07292702,14.8963649 C9.2044355,14.9058333 9.33724439,14.9106501 9.4711873,14.9106501 C12.4666378,14.9106501 14.8949302,12.5016233 14.8949302,9.52993822 L14.8915066,9.32852147 C13.4471202,11.0303693 11.6630499,12.7745614 9.49134039,14.5561965 Z M9.4711873,4.14922631 C6.47573683,4.14922631 4.04744444,6.55825309 4.04744444,9.52993822 C4.04744444,11.5294888 5.1468557,13.2742954 6.77869982,14.2018778 L6.32840712,14.54362 C9.82252759,11.9176167 12.4068411,9.39469638 14.2533952,6.9916563 C13.340389,5.2996803 11.541214,4.14922631 9.4711873,4.14922631 Z M16.4747185,3.47223492 L16.3243999,3.55364776 C15.8895907,3.79005335 15.3817384,4.09101293 14.8094251,4.45121967 C15.0516128,4.70196734 15.2765335,4.9700561 15.481624,5.25323094 C15.8104417,4.73879808 16.0837029,4.25645927 16.3312001,3.76607772 L16.4747185,3.47223492 Z"
          id="Combined-Shape"
          fill="#000000"
        />
        <circle
          id="Oval"
          fill="#000000"
          opacity="0.400000006"
          cx="7.5"
          cy="7.5"
          r="1.5"
        />
        <circle
          id="Oval"
          fill="#000000"
          opacity="0.400000006"
          cx="10"
          cy="6"
          r="1"
        />
      </g>
    </svg>
  );
});

export const ExportIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/export"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M10,5 C10,5.55228475 9.55228475,6 9,6 L3,6 L3,6 L3,17 L14,17 L14,12 C14,11.4477153 14.4477153,11 15,11 C15.5522847,11 16,11.4477153 16,12 L16,17.3333333 L16,17.3333333 C16,18.2538079 15.2538079,19 14.3333333,19 L2.66666667,19 C1.74619208,19 1,18.2538079 1,17.3333333 L1,5.66666667 C1,4.74619208 1.74619208,4 2.66666667,4 L9,4 C9.55228475,4 10,4.44771525 10,5 Z M17.2962698,2 C17.8485546,2 18.2962698,2.44771525 18.2962698,3 L18.2962698,8.15341653 C18.2962698,8.70570128 17.8485546,9.15341653 17.2962698,9.15341653 L17.2524365,9.15341653 C16.7001518,9.15341653 16.2524365,8.70570128 16.2524365,8.15341653 L16.2532698,5.489 L8.73810222,12.9592119 C8.34757793,13.3497361 7.71441251,13.3497361 7.32388822,12.9592119 L7.29289322,12.9282169 C6.90236893,12.5376926 6.90236893,11.9045281 7.29289322,11.5140039 L14.8082698,4.044 L12.1428533,4.04383329 C11.5905685,4.04383329 11.1428533,3.59611804 11.1428533,3.04383329 L11.1428533,3 C11.1428533,2.44771525 11.5905685,2 12.1428533,2 L17.2962698,2 Z"
          id="Shape"
          fill="#75757F"
          fillRule="nonzero"
        />
      </g>
    </svg>
  );
});

export const SearchIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = 'rgb(107, 107, 107)' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/search"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M8.5,1 C12.6421356,1 16,4.35786438 16,8.5 C16,10.226118 15.4168833,11.8160418 14.4368922,13.083529 L14.4588834,13.1032468 L18.7192385,17.3636018 C19.0935872,17.7379505 19.0935872,18.3448897 18.7192385,18.7192385 C18.3789214,19.0595555 17.8463809,19.0904934 17.4711141,18.8120522 L17.3636018,18.7192385 L13.1032468,14.4588834 L13.083529,14.4368922 C11.8160418,15.4168833 10.226118,16 8.5,16 C4.35786438,16 1,12.6421356 1,8.5 C1,4.35786438 4.35786438,1 8.5,1 Z M8.5,3 C5.46243388,3 3,5.46243388 3,8.5 C3,11.5375661 5.46243388,14 8.5,14 C11.5375661,14 14,11.5375661 14,8.5 C14,5.46243388 11.5375661,3 8.5,3 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const AddAcountIcon = React.memo(({ width = 1.25, height = 1.25 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/account_add"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M10.1249,1 C14.3119,1 17.9489,3.826 18.9729,7.872 C19.0939,8.355 18.8019,8.844 18.3199,8.966 C17.8359,9.087 17.3489,8.796 17.2269,8.313 C16.4059,5.067 13.4859,2.801 10.1249,2.801 C6.0859,2.801 2.8009,6.078 2.8009,10.106 C2.8009,13.524 5.1269,16.451 8.4579,17.224 C8.9429,17.336 9.2439,17.819 9.1319,18.304 C9.0349,18.72 8.6649,19.001 8.2559,19.001 C8.1889,19.001 8.1199,18.993 8.0519,18.978 C3.8999,18.014 0.9999,14.366 0.9999,10.106 C0.9999,5.085 5.0939,1 10.1249,1 Z M14.9736,10.4531 C15.2536,10.8391 15.1826,11.3901 14.8156,11.6831 C13.6176,12.6411 12.0456,13.1101 10.1256,13.1141143 C8.2036,13.1171 6.6316,12.6481 5.4336,11.6871 C5.0666,11.3921 4.9956,10.8421 5.2766,10.4561 C5.5566,10.0711 6.0816,9.9971 6.4496,10.2921 C7.3286,10.9971 8.5456,11.3591 10.1226,11.3571 C11.7026,11.3541 12.9196,10.9901 13.8016,10.2861 C14.1686,9.9921 14.6946,10.0671 14.9736,10.4531 Z M12.1328,7.0996 C12.6878,7.0996 13.1368,7.5486 13.1368,8.1026 C13.1368,8.6556 12.6878,9.1046 12.1328,9.1046 C11.5778,9.1046 11.1288,8.6556 11.1288,8.1026 C11.1288,7.5486 11.5778,7.0996 12.1328,7.0996 Z M8.1162,7.0996 C8.6712,7.0996 9.1212,7.5486 9.1212,8.1026 C9.1212,8.6556 8.6712,9.1046 8.1162,9.1046 C7.5622,9.1046 7.1122,8.6556 7.1122,8.1026 C7.1122,7.5486 7.5622,7.0996 8.1162,7.0996 Z"
          id="Combined-Shape"
          fill="rgb(107, 107, 107)"
        />
        <g id="Group" transform="translate(10.000000, 10.000000)">
          <circle id="Oval" fill="#6C56E5" cx="5" cy="5" r="5" />
          <path
            d="M5,2 C5.3550402,2 5.64285714,2.28781695 5.64285714,2.64285715 L5.642,4.357 L7.35714286,4.35714286 C7.71218305,4.35714286 8,4.64495981 8,5 C8,5.3550402 7.71218305,5.64285715 7.35714286,5.64285715 L5.642,5.642 L5.64285714,7.35714286 C5.64285714,7.71218306 5.3550402,8 5,8 C4.6449598,8 4.35714286,7.71218306 4.35714286,7.35714286 L4.357,5.642 L2.64285714,5.64285715 C2.28781695,5.64285715 2,5.3550402 2,5 C2,4.64495981 2.28781695,4.35714286 2.64285714,4.35714286 L4.357,4.357 L4.35714286,2.64285715 C4.35714286,2.28781695 4.6449598,2 5,2 Z"
            id="Combined-Shape"
            fill="#FFFFFF"
          />
        </g>
      </g>
    </svg>
  );
});

export const ViewMoreIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/view_more"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M10,14 C10.6875,14 11.25,14.5625 11.25,15.25 C11.25,15.9375 10.6875,16.5 10,16.5 C9.3125,16.5 8.75,15.9375 8.75,15.25 C8.75,14.5625 9.3125,14 10,14 Z M10,9 C10.6875,9 11.25,9.5625 11.25,10.25 C11.25,10.9375 10.6875,11.5 10,11.5 C9.3125,11.5 8.75,10.9375 8.75,10.25 C8.75,9.5625 9.3125,9 10,9 Z M10,4 C10.6875,4 11.25,4.5625 11.25,5.25 C11.25,5.9375 10.6875,6.5 10,6.5 C9.3125,6.5 8.75,5.9375 8.75,5.25 C8.75,4.5625 9.3125,4 10,4 Z"
          id="Combined-Shape"
          fill="rgb(107, 107, 107)"
        />
      </g>
    </svg>
  );
});

export const WaplLogo = React.memo(({ width = 6.19, height = 1.75 }) => {
  const defaultWidth = 106;
  const defaultHeight = 30;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Symbols"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="Logo/wapl_logo" transform="translate(-16.000000, -16.000000)">
          <g transform="translate(16.000000, 16.000000)">
            <g id="Group-8" fill="#232D3B">
              <path
                d="M23.5902967,16.8400104 L23.7054264,16.9459338 L24.4527266,17.7068543 L25.1428373,17.0051479 C25.6607974,16.4779285 26.4604085,16.4119974 27.0487264,16.8074298 L27.1713808,16.8992271 L27.2864891,17.0051479 C27.8415099,17.5700904 27.8761987,18.4639739 27.3905555,19.0700341 L27.2864891,19.1872257 L26.596679,19.889133 L27.9118344,21.2275375 C28.4297613,21.754723 28.4945022,22.5685267 28.1060382,23.167467 L28.0158591,23.2923399 L27.9118064,23.4095387 C27.6237401,23.7026368 27.2390972,23.8614116 26.8399569,23.8614116 C26.4905655,23.8614116 26.1524857,23.7398998 25.8804553,23.5131026 L25.7680743,23.4095051 L24.4527266,22.0704051 L22.0130907,24.553653 L23.3290571,25.8883586 C23.8479139,26.4145857 23.9140654,27.2283584 23.526667,27.8279429 L23.4367107,27.9529641 L23.3328684,28.0703314 C23.0447138,28.3646965 22.6592734,28.5241725 22.2590857,28.5241725 C21.9106111,28.5241725 21.5732571,28.4031977 21.301431,28.1773613 L21.1891047,28.0742011 L19.8701272,26.7359317 L17.107551,29.5481272 C16.8915013,29.7679507 16.6211272,29.9122174 16.331056,29.9706118 L16.1845392,29.9926052 L16.0357015,30 C15.6363535,30 15.2518233,29.8412589 14.9638239,29.5479934 C14.4089023,28.9831517 14.3742197,28.0892841 14.8597782,27.4832125 L14.9638264,27.3660182 L17.7222192,24.5566728 L16.9752525,23.8001656 C16.45641,23.2738472 16.3902604,22.4601521 16.7776476,21.8605999 L16.8676014,21.7355849 L16.9714407,21.618222 C17.5253543,21.0522518 18.40357,21.0153663 18.9998921,21.5086176 L19.1152183,21.6143367 L19.8651827,22.3754007 L22.3087742,19.8881264 L21.5616573,19.1278922 C21.0437447,18.6006154 20.9790057,17.7868088 21.3674401,17.1878995 L21.4576123,17.0630338 L21.5616853,16.9458144 C22.1167225,16.3809686 22.9948987,16.3456986 23.5902967,16.8400104 Z M27.9397811,6.79518804 C28.4948194,7.36003501 28.5295093,8.25402441 28.0438624,8.86000242 L27.9397952,8.97717501 L26.3771415,10.5671391 L29.5560627,13.8025433 C30.1109843,14.3673849 30.1456669,15.2613449 29.6601105,15.8674261 L29.5560627,15.9846211 C29.2680197,16.2778133 28.8834896,16.4365225 28.4841851,16.4365225 C28.1348519,16.4365225 27.7967101,16.3149921 27.5246828,16.08821 L27.4123076,15.9846211 L24.2331891,12.7494178 L12.7588902,24.4278297 L13.5962219,25.2793319 C14.1511457,25.8441758 14.1858285,26.7381456 13.7002701,27.3441303 L13.5962219,27.4613046 C13.3081713,27.7545045 12.9235281,27.9133112 12.5243443,27.9133112 C12.1750965,27.9133112 11.8369483,27.7917492 11.5648676,27.5649868 L11.4524667,27.4614097 L10.6159267,26.6091018 L9.30766757,27.9424841 C9.05562992,28.1990273 8.72971937,28.3526069 8.38467703,28.3869933 L8.23579,28.3943855 C7.83653034,28.3943855 7.45190423,28.2356367 7.16401577,27.9424841 C6.60899506,27.3775416 6.57430626,26.483658 7.05994939,25.8775979 L7.16401577,25.7604062 L13.1297307,19.6878158 L12.3481757,18.9118059 C11.7865615,18.3538736 11.7413175,17.4603341 12.2196966,16.8484068 L12.3223563,16.7299591 C12.8705893,16.1582043 13.7483608,16.1121458 14.3495267,16.5991714 L14.4658921,16.7036864 L15.2726942,17.5055371 L17.6203617,15.1159017 L16.8358919,14.3175839 C16.2808712,13.7526414 16.2461824,12.8587578 16.7318256,12.2526977 L16.8358919,12.1355061 C17.3908352,11.5706424 18.2691154,11.5353713 18.8644328,12.0296869 L18.9795437,12.1356112 L19.7643141,12.9346296 L22.0902256,10.5671391 L21.3052715,9.76841292 C20.7502508,9.20347041 20.715562,8.3094944 21.2012051,7.7034227 L21.3052715,7.58622988 C21.8601953,7.02138598 22.7384648,6.98608323 23.3338069,7.48032165 L23.4489233,7.58622988 L24.2331891,8.38486044 L25.7961293,6.79521661 C26.3880513,6.19259222 27.3478872,6.19259222 27.9397811,6.79518804 Z M22.9437944,1.81494213 L23.0589091,1.92086968 C23.613932,2.48581442 23.6486209,3.37970781 23.1629763,3.98567107 L23.0589096,4.10284188 L7.92313041,19.5076369 L8.58436285,20.1778691 C9.1407531,20.7412571 9.17769171,21.6351454 8.69363174,22.242373 L8.58987264,22.3598135 C8.30171939,22.6547657 7.91582317,22.8146384 7.51522732,22.8146384 C7.16705305,22.8146384 6.83008174,22.6939313 6.55845265,22.4685061 L6.44619857,22.3655306 L5.779178,21.6899155 L4.42678149,23.0681514 C4.17476486,23.3246732 3.84878762,23.4782689 3.50377285,23.5126597 L3.35490393,23.5200528 C2.95566599,23.5200528 2.57104538,23.3613192 2.28301233,23.0681371 C1.72810384,22.5031955 1.69342206,21.6093216 2.17897855,21.0033513 L2.28302637,20.8861787 L3.63028105,19.514683 L0.446724227,16.2904649 C-0.109663873,15.727079 -0.146602248,14.8332006 0.33747773,14.2258541 L0.441241101,14.108388 C0.994732543,13.5420536 1.87282146,13.504455 2.46949321,13.9971918 L2.58489576,14.1028107 L5.77423346,17.3324043 L8.2949598,14.7656097 L7.52654451,13.9829564 C6.9715238,13.4180139 6.936835,12.5241303 7.42247812,11.9180702 L7.52654451,11.8008786 C8.08148777,11.2360149 8.959768,11.2007438 9.55508532,11.6950595 L9.67019631,11.8009837 L10.4389122,12.5843377 L12.7855908,10.1947023 L12.0167964,9.41243474 C11.4618726,8.84759083 11.4271899,7.95362099 11.9127367,7.34764811 L12.0167824,7.23047635 C12.5716876,6.66553798 13.449956,6.63019645 14.045411,7.1244458 L14.1605516,7.23035688 L14.9295432,8.01343017 L17.2554546,5.64593966 L16.486176,4.8630534 C15.9312521,4.29820949 15.8965694,3.40423964 16.3821393,2.79824322 L16.48619,2.68106643 C17.0412411,2.11620638 17.9194182,2.08086975 18.5148106,2.57516744 L18.629939,2.68108881 L19.3984181,3.46366099 L20.9152433,1.92088397 C21.4701701,1.3559236 22.3484588,1.32061357 22.9437944,1.81494213 Z M14.9786396,0.451966511 C15.5335459,1.01690596 15.5682275,1.91076996 15.0826729,2.51683675 L14.9786255,2.63403008 L4.86088602,12.9326388 C4.57284299,13.2258311 4.18831292,13.3845403 3.78900846,13.3845403 C3.38977052,13.3845403 3.00514991,13.2258066 2.71711686,12.9326246 C2.16221056,12.3676851 2.12752892,11.4738211 2.61308349,10.8677543 L2.7171309,10.750561 L3.53336807,9.91889766 L2.11980173,8.47950769 C1.60176807,7.95231927 1.53701386,7.13849836 1.9255203,6.53958992 L2.01570933,6.41472465 L2.11977365,6.29753501 C2.6747005,5.73257464 3.55298922,5.69726462 4.14832091,6.19158927 L4.26343484,6.29751599 L5.67732048,7.73661899 L8.02399902,5.34799017 L6.61003962,3.90897172 C6.0921107,3.38178407 6.02736958,2.56789116 6.41580687,1.96903677 L6.50597983,1.84418509 L6.61002558,1.72701333 C7.16493082,1.16207496 8.04319916,1.12673343 8.63865802,1.62098668 L8.75379939,1.72689859 L10.1669625,3.1657115 L12.8348704,0.451952222 C13.4268925,-0.150653122 14.3866034,-0.150653122 14.9786396,0.451966511 Z"
                id="Combined-Shape"
              />
            </g>
            <path
              d="M56.8108108,6 C57.8081801,6 58.6252913,6.77293685 58.6975135,7.75333041 L58.7027027,7.89473684 L58.7027027,17.3684211 C58.7027027,21.030941 55.7381017,24 52.0810811,24 C50.2279635,24 48.5526413,23.2376227 47.3507589,22.008957 C46.1500614,23.2376227 44.4747392,24 42.6216216,24 C38.964601,24 36,21.030941 36,17.3684211 L36,7.89473684 L36.0051892,7.75333041 C36.0774114,6.77293685 36.8945226,6 37.8918919,6 C38.8892612,6 39.7063724,6.77293685 39.7785946,7.75333041 L39.7837838,7.89473684 L39.7837838,17.3684211 C39.7837838,18.9380724 41.0543271,20.2105263 42.6216216,20.2105263 C44.1889162,20.2105263 45.4594595,18.9380724 45.4594595,17.3684211 L45.4594595,7.89473684 L45.4646487,7.75333041 C45.5368708,6.77293685 46.3539821,6 47.3513514,6 C48.3487206,6 49.1658319,6.77293685 49.238054,7.75333041 L49.2432432,7.89473684 L49.2432432,17.3684211 C49.2432432,18.9380724 50.5137865,20.2105263 52.0810811,20.2105263 C53.6483756,20.2105263 54.9189189,18.9380724 54.9189189,17.3684211 L54.9189189,7.89473684 L54.9241081,7.75333041 C54.9963303,6.77293685 55.8134415,6 56.8108108,6 Z M68.1621622,6 C72.3416143,6 75.7297297,9.39321032 75.7297297,13.5789474 L75.7297297,22.1052632 C75.7297297,23.1516974 74.8827009,24 73.8378378,24 C72.8404686,24 72.0233573,23.2270631 71.9511352,22.2466696 L71.9459459,22.1052632 L71.9459459,20.2105263 L64.3783784,20.2105263 L64.3783784,22.1052632 C64.3783784,23.1041322 63.6066021,23.9224722 62.6276806,23.994803 L62.4864865,24 C61.4891172,24 60.672006,23.2270631 60.5997838,22.2466696 L60.5945946,22.1052632 L60.5945946,13.5789474 C60.5945946,9.39321032 63.98271,6 68.1621622,6 Z M85.1891892,6 C89.3686413,6 92.7567568,9.39321032 92.7567568,13.5789474 C92.7567568,17.7646844 89.3686413,21.1578947 85.1891892,21.1578947 C83.8107429,21.1578947 82.5183767,20.7887882 81.4052541,20.1438788 L81.4054054,22.1052632 C81.4054054,23.1516974 80.5583766,24 79.5135135,24 C78.5161442,24 77.699033,23.2270631 77.6268108,22.2466696 L77.6216216,22.1052632 L77.6216216,13.5789474 C77.6216216,9.39321032 81.009737,6 85.1891892,6 Z M96.5405405,6 C97.5379098,6 98.3550211,6.77293685 98.4272432,7.75333041 L98.4324324,7.89473684 L98.4324324,20.2105263 L104.108108,20.2105263 C105.105477,20.2105263 105.922589,20.9834632 105.994811,21.9638567 L106,22.1052632 C106,23.1041322 105.228224,23.9224722 104.249302,23.994803 L104.108108,24 L96.5405405,24 C95.4956775,24 94.6486486,23.1516974 94.6486486,22.1052632 L94.6486486,7.89473684 L94.6538379,7.75333041 C94.72606,6.77293685 95.5431713,6 96.5405405,6 Z M85.1891892,9.78947368 C83.0994631,9.78947368 81.4054054,11.4860788 81.4054054,13.5789474 C81.4054054,15.6718159 83.0994631,17.3684211 85.1891892,17.3684211 C87.2789153,17.3684211 88.972973,15.6718159 88.972973,13.5789474 C88.972973,11.4860788 87.2789153,9.78947368 85.1891892,9.78947368 Z M68.1621622,9.78947368 C66.0724361,9.78947368 64.3783784,11.4860788 64.3783784,13.5789474 L64.3783784,16.4210526 L71.9459459,16.4210526 L71.9459459,13.5789474 C71.9459459,11.4860788 70.2518882,9.78947368 68.1621622,9.78947368 Z"
              id="Shape"
              fill="#232D3B"
            />
          </g>
        </g>
      </g>
    </svg>
  );
});

export const AddRoomIcon = React.memo(({ width = 1.88, height = 1.31 }) => {
  const defaultWidth = 30;
  const defaultHeight = 21;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/LNB/add-room"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="Group-3">
          <g id="Icon/LNB/chatting">
            <path
              d="M8.92559524,0.125 C13.46222,0.125 17.139881,3.87803711 17.139881,8.507643 C17.139881,13.1372489 13.46222,16.890286 8.92559524,16.890286 C7.27308341,16.890286 5.73454361,16.3923124 4.44620924,15.5353909 L0.560932069,16.9327659 C0.446607761,16.9739101 0.320575632,16.914586 0.279431431,16.8002616 C0.258483997,16.7420566 0.263009129,16.6777219 0.291897984,16.6230222 L2.10736065,13.1841403 C1.22582637,11.8482911 0.711309524,10.2392845 0.711309524,8.507643 C0.711309524,3.87803711 4.38897051,0.125 8.92559524,0.125 Z M6.93622218,8.80690335 C6.80274004,9.04511012 6.88419837,9.34758383 7.11762099,9.48240467 C8.04857337,10.0230851 9.10890075,10.3073964 10.1863412,10.3073964 C11.2610436,10.3073964 12.321371,10.0230851 13.2509543,9.48450033 C13.4843769,9.34967949 13.5665198,9.04650723 13.4344067,8.80899901 C13.3009246,8.57009369 13.0052103,8.48766437 12.7717877,8.62178665 C11.20149,9.53060487 9.1650317,9.52990631 7.5981567,8.6210881 C7.36404956,8.4841716 7.06765075,8.56869658 6.93622218,8.80690335 Z M8.27960016,6.41198225 C7.94692158,6.41198225 7.67516563,6.68860947 7.67516563,7.02810651 C7.67516563,7.3683021 7.94692158,7.64492932 8.27960016,7.64492932 C8.61296325,7.64492932 8.88403468,7.3683021 8.88403468,7.02810651 C8.88403468,6.68860947 8.61296325,6.41198225 8.27960016,6.41198225 Z M11.8887519,6.41198225 C11.5560734,6.41198225 11.2843174,6.68860947 11.2843174,7.02810651 C11.2843174,7.3683021 11.5560734,7.64492932 11.8887519,7.64492932 C12.2214305,7.64492932 12.4931865,7.3683021 12.4931865,7.02810651 C12.4931865,6.68860947 12.2214305,6.41198225 11.8887519,6.41198225 Z"
              id="Combined-Shape"
              fill="#FFFFFF"
            />
            <path
              d="M18.7556479,0.125 C23.1560133,0.125 26.7232143,3.847354 26.7232143,8.43911035 C26.7232143,8.79104088 26.7022595,9.13786428 26.6615808,9.47829607 C26.6295839,9.80126718 26.5796548,10.1186044 26.5128686,10.4292516 C26.0798078,9.79266476 25.3518742,9.375 24.5255208,9.375 L24.5255208,9.375 L24.3613589,9.38052748 C23.1137854,9.46482692 22.1296875,10.5028618 22.1296875,11.7720602 L22.1296875,11.7720602 L22.129,13.38 L20.5208333,13.3805342 L20.3566714,13.3860617 C19.1090979,13.4703611 18.125,14.508396 18.125,15.7775944 L18.125,15.7775944 L18.1305217,15.9417717 C18.1524379,16.2664973 18.2388866,16.573438 18.3771649,16.8498567 C17.1919911,16.7857535 16.0764051,16.4479449 15.0864706,15.8967664 C17.2866029,14.1482842 18.7048856,11.3981623 18.7048856,8.30518812 C18.7048856,5.33446756 17.3965058,2.6800315 15.3436236,0.925493862 C16.3774084,0.411692979 17.5344433,0.125 18.7556479,0.125 Z"
              id="Combined-Shape"
              fill="#C4C6F9"
            />
          </g>
          <path
            d="M28.5313542,14.6305342 L25.6713542,14.6305342 L25.6713542,11.7720602 C25.6713542,11.1377359 25.1591667,10.625 24.5255208,10.625 C23.891875,10.625 23.3796875,11.1377359 23.3796875,11.7720602 L23.3796875,14.6305342 L20.5208333,14.6305342 C19.8871875,14.6305342 19.375,15.1432701 19.375,15.7775944 C19.375,16.4119187 19.8871875,16.9246546 20.5208333,16.9246546 L23.3796875,16.9246546 L23.3796875,19.7831285 C23.3796875,20.4174528 23.891875,20.9301887 24.5255208,20.9301887 C25.1591667,20.9301887 25.6713542,20.4174528 25.6713542,19.7831285 L25.6713542,16.9246546 L28.5313542,16.9246546 C29.165,16.9246546 29.6771875,16.4119187 29.6771875,15.7775944 C29.6771875,15.1432701 29.165,14.6305342 28.5313542,14.6305342"
            id="Fill-7-Copy"
            fill="#FFFFFF"
          />
        </g>
      </g>
    </svg>
  );
});

export const OpenChatIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/common/openchat"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M18.593,1.0004 C21.569,1.0004 23.991,3.5044 23.991,6.5844 L23.991,6.5844 L23.991,10.1364 C23.991,12.6964 22.268,14.9024 19.928,15.5244 L19.928,15.5244 L19.928,17.7054 C19.928,18.0654 19.734,18.3974 19.422,18.5744 C19.269,18.6614 19.098,18.7054 18.928,18.7054 C18.75,18.7054 18.574,18.6584 18.416,18.5644 L18.416,18.5644 L17.292,17.8944 C16.28,19.2174 14.752,20.0154 13.095,20.0154 L13.095,20.0154 L10.351,20.0154 L5.575,22.8594 C5.417,22.9534 5.241,23.0004 5.063,23.0004 C4.893,23.0004 4.723,22.9564 4.569,22.8694 C4.257,22.6914 4.063,22.3594 4.063,22.0004 L4.063,22.0004 L4.063,19.8194 C1.723,19.1974 -2.84217094e-14,16.9914 -2.84217094e-14,14.4314 L-2.84217094e-14,14.4314 L-2.84217094e-14,10.8784 C-2.84217094e-14,7.7994 2.422,5.2944 5.398,5.2944 L5.398,5.2944 L5.674,5.2944 C6.241,2.8244 8.376,1.0004 10.896,1.0004 L10.896,1.0004 Z M5.498,7.2944 L5.398,7.2944 C3.524,7.2944 2,8.9024 2,10.8784 L2,10.8784 L2,14.4314 C2,16.2814 3.381,17.8424 5.143,17.9834 C5.663,18.0244 6.063,18.4584 6.063,18.9804 L6.063,18.9804 L6.063,20.2404 L9.563,18.1554 C9.718,18.0644 9.895,18.0154 10.075,18.0154 L10.075,18.0154 L13.095,18.0154 C14.043,18.0154 14.932,17.5904 15.565,16.8664 L15.565,16.8664 L13.641,15.7204 L10.896,15.7204 C7.919,15.7204 5.498,13.2154 5.498,10.1364 L5.498,10.1364 L5.498,7.2944 Z M18.593,3.0004 L10.896,3.0004 C9.12,3.0004 7.639,4.4734 7.524,6.3554 L7.524,6.3554 C7.52,6.4204 7.513,6.4844 7.504,6.5484 L7.504,6.5484 L7.498,10.1364 C7.498,12.1124 9.022,13.7204 10.896,13.7204 L10.896,13.7204 L13.916,13.7204 C14.096,13.7204 14.273,13.7694 14.428,13.8604 L14.428,13.8604 L17.489,15.6834 L17.49,15.6854 L17.928,15.9454 L17.928,14.6854 C17.928,14.1634 18.328,13.7304 18.848,13.6884 C20.61,13.5474 21.991,11.9864 21.991,10.1364 L21.991,10.1364 L21.991,6.5844 C21.991,4.6074 20.467,3.0004 18.593,3.0004 L18.593,3.0004 Z M18.95,7 C19.6408333,7 20.2,7.56 20.2,8.25 C20.2,8.94 19.6408333,9.5 18.95,9.5 C18.26,9.5 17.7,8.94 17.7,8.25 C17.7,7.56 18.26,7 18.95,7 Z M14.95,7 C15.64,7 16.2,7.56 16.2,8.25 C16.2,8.94 15.64,9.5 14.95,9.5 C14.26,9.5 13.7,8.94 13.7,8.25 C13.7,7.56 14.26,7 14.95,7 Z M10.95,7 C11.64,7 12.2,7.56 12.2,8.25 C12.2,8.94 11.64,9.5 10.95,9.5 C10.2591667,9.5 9.7,8.94 9.7,8.25 C9.7,7.56 10.2591667,7 10.95,7 Z"
          id="Combined-Shape"
          fill="rgb(110, 88, 229)"
        />
      </g>
    </svg>
  );
});

export const PinIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/pin2"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="icn_pin">
          <rect
            id="Rectangle"
            fill="#D8D8D8"
            opacity="0"
            x="0"
            y="0"
            width="20"
            height="20"
          />
          <path
            d="M18.5939328,6.52705879 C19.1353557,7.06862627 19.1353557,7.94668063 18.5939328,8.4882481 L18.4713911,8.61082243 C18.0245767,9.05775614 17.3486579,9.13585355 16.8217758,8.84511467 L13.1393351,12.5283785 C13.627535,13.7023909 13.3942966,15.1056864 12.4396199,16.0606179 L11.7860645,16.7143477 L8.51828777,13.4456988 L3.40867321,18.556677 L1,19 L1.44800716,16.5954877 L6.55762172,11.4845095 L3.28984497,8.2158607 L3.94340032,7.56213093 C4.89807709,6.60719938 6.30099819,6.37389874 7.47469734,6.862229 L11.1569784,3.17880554 C10.8663171,2.65178285 10.9443937,1.97568365 11.3912082,1.52874994 L11.5137498,1.4061756 C12.0551728,0.864608132 12.9329929,0.864608132 13.4744159,1.4061756 L18.5939328,6.52705879 Z"
            id="Shape"
            fill="rgb(107, 107, 107)"
          />
        </g>
      </g>
    </svg>
  );
});

export const DisableAlarmIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/alarm_none2"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M2.86289944,1.45970461 L2.95710678,1.54289322 L18.4571068,17.0428932 C18.8476311,17.4334175 18.8476311,18.0665825 18.4571068,18.4571068 C18.0966228,18.8175907 17.5293918,18.8453203 17.1371006,18.5402954 L17.0428932,18.4571068 L15.585,17 L12,17 C12,18.1055276 11.1055276,19 10,19 C8.94472362,19 8.08175173,18.1849952 8.00548007,17.1493814 L8,17 L2.92843389,17 C2.13689867,17 1.72738632,16.0280849 2.2023148,15.45 L3.53580838,14.1494788 C3.6322965,14.0553764 3.68670809,13.926306 3.68670809,13.7915277 L3.68670809,8.83746637 C3.68670809,7.74671694 3.94322231,6.7202571 4.40743716,5.82397012 L1.54289322,2.95710678 C1.15236893,2.56658249 1.15236893,1.93341751 1.54289322,1.54289322 C1.90337718,1.18240926 2.47060824,1.15467972 2.86289944,1.45970461 Z M10.0001595,1 C10.7279942,1 11.3237767,1.53826904 11.3913503,2.22918154 L11.3977337,2.36042227 L11.3977337,2.64301029 C14.242056,3.24260381 16.1997705,5.65959272 16.3063378,8.58546187 L16.309,12.394 L7.08622672,3.17136592 C7.48478037,2.97130739 7.911047,2.81197018 8.36097384,2.69882427 L8.60258524,2.64301029 L8.60258524,2.36042227 C8.60258524,1.60765528 9.22683506,1 10.0001595,1 Z"
          id="Combined-Shape"
          fill="rgb(107, 107, 107)"
        />
      </g>
    </svg>
  );
});

export const FriendAddIcon = React.memo(({ width = 1.5, height = 1.38 }) => {
  const defaultWidth = 24;
  const defaultHeight = 22;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/LNB/add-friends"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M18.9123921,11.8358111 C19.5381589,11.8358111 20.0439775,12.3415315 20.0439775,12.9671767 L20.0439775,12.9671767 L20.0439775,15.7865399 L22.8684146,15.7865399 C23.4941813,15.7865399 24,16.2922603 24,16.9179055 C24,17.5435507 23.4941813,18.0492712 22.8684146,18.0492712 L22.8684146,18.0492712 L20.0439775,18.0492712 L20.0439775,20.8686344 C20.0439775,21.4942796 19.5381589,22 18.9123921,22 C18.2866254,22 17.7808068,21.4942796 17.7808068,20.8686344 L17.7808068,20.8686344 L17.7808068,18.0492712 L14.9575013,18.0492712 C14.3317345,18.0492712 13.8259159,17.5435507 13.8259159,16.9179055 C13.8259159,16.2922603 14.3317345,15.7865399 14.9575013,15.7865399 L14.9575013,15.7865399 L17.7808068,15.7865399 L17.7808068,12.9671767 C17.7808068,12.3415315 18.2866254,11.8358111 18.9123921,11.8358111 Z M10.3694369,0 C16.0963188,0 20.7388738,4.63668898 20.7388738,10.3563347 C20.7388738,10.7092309 20.7212007,11.0580045 20.6866903,11.4018209 C20.2918969,10.9561662 19.7323729,10.6605392 19.1031537,10.6104719 L18.9123921,10.6029141 L18.7502715,10.6083659 C17.5717789,10.6878969 16.6313515,11.6280934 16.551803,12.8052458 L16.54635,12.9671767 L16.545671,14.553116 L14.9575013,14.5536429 L14.7953806,14.5590948 C13.616888,14.6386257 12.6764606,15.5788222 12.5969121,16.7559746 L12.5914591,16.9179055 L12.5969121,17.0798365 C12.6764606,18.2569889 13.616888,19.1971853 14.7953806,19.2767163 L14.9575013,19.2821682 L15.6308096,19.2824513 C14.0884085,20.1912596 12.2898906,20.7126694 10.3694369,20.7126694 C4.64255504,20.7126694 0,16.0759804 0,10.3563347 C0,4.63668898 4.64255504,0 10.3694369,0 Z M6.27934515,10.8824365 C6.11150496,11.1772308 6.21471703,11.5519856 6.50988426,11.7176869 C7.68669477,12.3862726 9.02748708,12.7388697 10.3875714,12.7388697 C11.7476556,12.7388697 13.0874834,12.387236 14.2633293,11.7205771 C14.5584965,11.5539123 14.6626732,11.1791575 14.494833,10.8843633 C14.3269928,10.589569 13.9527285,10.4864873 13.6575612,10.6531521 C11.6714523,11.7774165 9.09790279,11.7764531 7.11758149,10.6521887 C6.82048507,10.4826338 6.44622074,10.5876422 6.27934515,10.8824365 Z M8.07822542,7.91917604 C7.65669575,7.91917604 7.31426319,8.26021255 7.31426319,8.68217298 C7.31426319,9.10317003 7.65669575,9.44420654 8.07822542,9.44420654 C8.49975509,9.44420654 8.84122306,9.10317003 8.84122306,8.68217298 C8.84122306,8.26021255 8.49975509,7.91917604 8.07822542,7.91917604 Z M12.4424562,7.91917604 C12.0209265,7.91917604 11.6784939,8.26021255 11.6784939,8.68217298 C11.6784939,9.10317003 12.0209265,9.44420654 12.4424562,9.44420654 C12.8630212,9.44420654 13.2054538,9.10317003 13.2054538,8.68217298 C13.2054538,8.26021255 12.8630212,7.91917604 12.4424562,7.91917604 Z"
          id="Combined-Shape"
          fill="#FFFFFF"
        />
      </g>
    </svg>
  );
});

export const CalendarIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeCalander"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M16,2 C16.5522847,2 17,2.44771525 17,3 L17,5 L21,5 C21.5522847,5 22,5.44771525 22,6 L22,21 C22,21.5522847 21.5522847,22 21,22 L3,22 C2.44771525,22 2,21.5522847 2,21 L2,6 C2,5.44771525 2.44771525,5 3,5 L7,5 L7,5 L7,3 C7,2.44771525 7.44771525,2 8,2 C8.55228475,2 9,2.44771525 9,3 L9,5 L15,5 L15,5 L15,3 C15,2.44771525 15.4477153,2 16,2 Z M20,11 L4,11 L4,20 L20,20 L20,11 Z M12,16 C12.5522847,16 13,16.4477153 13,17 C13,17.5522847 12.5522847,18 12,18 C11.4477153,18 11,17.5522847 11,17 C11,16.4477153 11.4477153,16 12,16 Z M16,16 C16.5522847,16 17,16.4477153 17,17 C17,17.5522847 16.5522847,18 16,18 C15.4477153,18 15,17.5522847 15,17 C15,16.4477153 15.4477153,16 16,16 Z M8,13 C8.55228475,13 9,13.4477153 9,14 C9,14.5522847 8.55228475,15 8,15 C7.44771525,15 7,14.5522847 7,14 C7,13.4477153 7.44771525,13 8,13 Z M12,13 C12.5522847,13 13,13.4477153 13,14 C13,14.5522847 12.5522847,15 12,15 C11.4477153,15 11,14.5522847 11,14 C11,13.4477153 11.4477153,13 12,13 Z M16,13 C16.5522847,13 17,13.4477153 17,14 C17,14.5522847 16.5522847,15 16,15 C15.4477153,15 15,14.5522847 15,14 C15,13.4477153 15.4477153,13 16,13 Z M20,7 L4,7 L4,9 L20,9 L20,7 Z"
          id="Combined-Shape"
          fill="#818181"
        />
      </g>
    </svg>
  );
});

export const CalendarActiveIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeCalander_Active"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="calander" transform="translate(-6.000000, -6.000000)">
          <path
            d="M22,8 C22.5522847,8 23,8.44771525 23,9 L23,11 L27,11 C27.5522847,11 28,11.4477153 28,12 L28,27 C28,27.5522847 27.5522847,28 27,28 L9,28 C8.44771525,28 8,27.5522847 8,27 L8,12 C8,11.4477153 8.44771525,11 9,11 L13,11 L13,11 L13,9 C13,8.44771525 13.4477153,8 14,8 C14.5522847,8 15,8.44771525 15,9 L15,11 L21,11 L21,11 L21,9 C21,8.44771525 21.4477153,8 22,8 Z"
            id="Combined-Shape"
            fill="#F0A224"
          />
          <rect
            id="Rectangle-Copy-38"
            fill="#FFFFFF"
            x="13"
            y="19"
            width="2"
            height="2"
            rx="1"
          />
          <rect
            id="Rectangle-Copy-39"
            fill="#FFFFFF"
            x="17"
            y="19"
            width="2"
            height="2"
            rx="1"
          />
          <rect
            id="Rectangle-Copy-42"
            fill="#FFFFFF"
            x="17"
            y="22"
            width="2"
            height="2"
            rx="1"
          />
          <rect
            id="Rectangle-Copy-40"
            fill="#FFFFFF"
            x="21"
            y="19"
            width="2"
            height="2"
            rx="1"
          />
          <rect
            id="Rectangle-Copy-43"
            fill="#FFFFFF"
            x="21"
            y="22"
            width="2"
            height="2"
            rx="1"
          />
          <rect
            id="Rectangle-Copy-37"
            fill="#FFFFFF"
            x="8"
            y="14"
            width="20"
            height="2"
          />
        </g>
      </g>
    </svg>
  );
});

export const DriveIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeDrive"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M10.1459341,2 C11.3726478,2 12.4757741,2.74685283 12.9313641,3.88582797 L12.9313641,3.88582797 L13.777,6 L19.5,6 C21.0976809,6 22.4036609,7.24891996 22.4949073,8.82372721 L22.4949073,8.82372721 L22.5,9 L22.5,19 C22.5,20.6568542 21.1568542,22 19.5,22 L19.5,22 L4.5,22 C2.84314575,22 1.5,20.6568542 1.5,19 L1.5,19 L1.5,5 C1.5,3.34314575 2.84314575,2 4.5,2 L4.5,2 Z M10.1459341,4 L4.5,4 C3.94771525,4 3.5,4.44771525 3.5,5 L3.5,5 L3.5,19 C3.5,19.5522847 3.94771525,20 4.5,20 L4.5,20 L19.5,20 C20.0522847,20 20.5,19.5522847 20.5,19 L20.5,19 L20.5,9 C20.5,8.44771525 20.0522847,8 19.5,8 L19.5,8 L12.422967,8 L11.0744108,4.62860932 C10.9225474,4.24895094 10.5548387,4 10.1459341,4 L10.1459341,4 Z M17.5,16.5 C18.0522847,16.5 18.5,16.9477153 18.5,17.5 C18.5,18.0522847 18.0522847,18.5 17.5,18.5 L6.5,18.5 C5.94771525,18.5 5.5,18.0522847 5.5,17.5 C5.5,16.9477153 5.94771525,16.5 6.5,16.5 L17.5,16.5 Z M12,16 L11.961,15.999 L11.968,15.999 L11.9381467,15.9981183 C11.917689,15.9968699 11.8973975,15.9950065 11.8772905,15.9925462 C11.7309893,15.9791482 11.5872906,15.9314547 11.457624,15.8514776 L11.3546903,15.7786748 L8.87257229,13.7786748 C8.44252206,13.4321561 8.37480643,12.8026225 8.72132519,12.3725723 C9.04118866,11.9756028 9.60220082,11.8873682 10.0248638,12.148689 L10.1274277,12.2213252 L10.9999654,12.924 L11,10 C11,9.44771525 11.4477153,9 12,9 C12.5522847,9 13,9.44771525 13,10 L12.9999654,12.913 L13.8780215,12.2169657 C14.3104794,11.8734565 14.939525,11.9455636 15.2830343,12.3780215 C15.6001198,12.7772134 15.5630706,13.343912 15.2153546,13.6989137 L15.1219785,13.7830343 L12.7257697,15.687941 C12.5435322,15.8801354 12.2857641,16 12,16 L11.9789287,15.9999949 L11.968,15.999 L12,16 Z"
          id="Combined-Shape"
          fill="#6B6B6B"
        />
      </g>
    </svg>
  );
});

export const DriveActiveIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeDrive_active"
        stroke="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        strokeWidth="1"
        fill="none"
        fillRule="evenodd"
      >
        <path
          d="M10.1459341,2 C11.3726478,2 12.4757741,2.74685283 12.9313641,3.88582797 L12.9313641,3.88582797 L13.777,6 L19.5,6 C21.0976809,6 22.4036609,7.24891996 22.4949073,8.82372721 L22.4949073,8.82372721 L22.5,9 L22.5,19 C22.5,20.6568542 21.1568542,22 19.5,22 L19.5,22 L4.5,22 C2.84314575,22 1.5,20.6568542 1.5,19 L1.5,19 L1.5,5 C1.5,3.34314575 2.84314575,2 4.5,2 L4.5,2 Z M17.5,16.5 L6.5,16.5 C5.94771525,16.5 5.5,16.9477153 5.5,17.5 C5.5,18.0522847 5.94771525,18.5 6.5,18.5 L6.5,18.5 L17.5,18.5 C18.0522847,18.5 18.5,18.0522847 18.5,17.5 C18.5,16.9477153 18.0522847,16.5 17.5,16.5 L17.5,16.5 Z M11.9789287,15.9999949 L12,16 C12.2857641,16 12.5435322,15.8801354 12.7257697,15.687941 L12.7257697,15.687941 L15.1219785,13.7830343 L15.2153546,13.6989137 C15.5630706,13.343912 15.6001198,12.7772134 15.2830343,12.3780215 C14.939525,11.9455636 14.3104794,11.8734565 13.8780215,12.2169657 L13.8780215,12.2169657 L12.9999654,12.913 L13,10 C13,9.44771525 12.5522847,9 12,9 C11.4477153,9 11,9.44771525 11,10 L11,10 L10.9999654,12.924 L10.1274277,12.2213252 L10.0248638,12.148689 C9.60220082,11.8873682 9.04118866,11.9756028 8.72132519,12.3725723 C8.37480643,12.8026225 8.44252206,13.4321561 8.87257229,13.7786748 L8.87257229,13.7786748 L11.3546903,15.7786748 L11.457624,15.8514776 C11.5872906,15.9314547 11.7309893,15.9791482 11.8772905,15.9925462 C11.8973975,15.9950065 11.917689,15.9968699 11.9381467,15.9981183 L11.9381467,15.9981183 L11.968,15.999 L11.961,15.999 L12,16 L11.968,15.999 L11.9789287,15.9999949 Z"
          id="Combined-Shape"
          fill="#19BF72"
        />
      </g>
    </svg>
  );
});

export const MeetingIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeMeeting"
        stroke="none"
        strokeWidth="1"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fill="none"
        fillRule="evenodd"
      >
        <g
          id="TeeMeeting"
          transform="translate(2.000000, 2.000000)"
          fill="#818181"
        >
          <path
            d="M14.5454545,0 C17.5579168,0 20,2.60962079 20,5.82875118 L20,12.6289609 C20,15.8480913 17.5579168,18.4577121 14.5454545,18.4577121 L6.36272727,18.4577121 L2.50658898,20.9307067 C2.29132522,21.0687258 2.01211602,20.9941347 1.88295776,20.764103 C1.84057175,20.6886132 1.81818182,20.6022328 1.81818182,20.5141973 L1.81830136,16.9736447 C0.702324045,15.9063568 0,14.355304 0,12.6289609 L0,5.82875118 C0,2.60962079 2.44208318,0 5.45454545,0 L14.5454545,0 Z M14.5454545,2 L5.45454545,2 C3.5070951,2 1.91720102,3.63621155 1.8226321,5.69258241 L1.81818182,5.886561 L1.81818182,12.6880428 C1.81818182,13.7353946 2.20579205,14.712007 2.88163359,15.4346071 L3.03083226,15.5854953 C3.37769838,15.9172899 3.59079785,16.3770553 3.62993547,16.8686847 L3.63648318,17.0336094 L3.63636364,18 L5.4271183,16.851639 C5.66262736,16.7005756 5.92646183,16.608899 6.19860468,16.5825362 L6.36272727,16.5746038 L14.5454545,16.5746038 C16.4929049,16.5746038 18.082799,14.9383922 18.1773679,12.8820213 L18.1818182,12.6880428 L18.1818182,5.886561 C18.1818182,3.80511774 16.6509377,2.10583214 14.7269457,2.00475648 L14.5454545,2 Z M11.8181818,5 C12.3202588,5 12.7272727,5.41422552 12.7272727,5.9251986 L12.7272727,6.21756136 L15,5 L16.3636364,5 L16.3636364,13.3267874 L15,13.3267874 L12.7272727,12.1073756 L12.7272727,12.4015888 C12.7272727,12.9125618 12.3202588,13.3267874 11.8181818,13.3267874 L4.54545455,13.3267874 C4.0433775,13.3267874 3.63636364,12.9125618 3.63636364,12.4015888 L3.63636364,5.9251986 C3.63636364,5.41422552 4.0433775,5 4.54545455,5 L11.8181818,5 Z M10.9090909,7 L5.45454545,7 L5.45454545,11.625993 L10.9090909,11.625993 L10.9090909,7 Z M14.5454545,7.48295367 L12.7272727,8.45718779 L12.7272727,10.1651044 L14.5454545,11.1402637 L14.5454545,7.48295367 Z M9.09090909,8.4015888 C9.59298609,8.4015888 10,8.81581432 10,9.3267874 C10,9.83776043 9.59298609,10.251986 9.09090909,10.251986 L7.27272727,10.251986 C6.77065023,10.251986 6.36363636,9.83776043 6.36363636,9.3267874 C6.36363636,8.81581432 6.77065023,8.4015888 7.27272727,8.4015888 L9.09090909,8.4015888 Z"
            id="Combined-Shape"
          />
        </g>
      </g>
    </svg>
  );
});

export const MeetingActiveIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeMeeting_Active"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="Group-2" transform="translate(1.000000, 1.000000)">
          <path
            d="M16,-1.79412041e-13 C19.3137085,-1.80020759e-13 22,2.6862915 22,6 L22,13 C22,16.3137085 19.3137085,19 16,19 L6.999,19 L2.75724788,21.5456513 C2.52045774,21.6877254 2.21332762,21.6109428 2.07125354,21.3741527 C2.02462892,21.296445 2,21.2075268 2,21.1169048 L2.0001315,17.4723307 C0.772556451,16.3736859 2.17627461e-16,14.7770631 0,13 L0,6 C-4.05812251e-16,2.6862915 2.6862915,-1.78803322e-13 6,-1.79412041e-13 L16,-1.79412041e-13 Z"
            id="Combined-Shape"
            fill="#F66464"
          />
          <g id="Group" transform="translate(4.000000, 5.000000)">
            <path
              d="M9,0 C9.55228475,-1.01453063e-16 10,0.44771525 10,1 L10,1.316 L12.5,0 L14,0 L14,9 L12.5,9 L10,7.682 L10,8 C10,8.55228475 9.55228475,9 9,9 L1,9 C0.44771525,9 6.76353751e-17,8.55228475 0,8 L0,1 C-6.76353751e-17,0.44771525 0.44771525,1.01453063e-16 1,0 L9,0 Z"
              id="Combined-Shape"
              fill="#FFFFFF"
            />
            <rect
              id="Rectangle"
              fill="#F66464"
              x="3"
              y="3"
              width="4"
              height="2"
              rx="1"
            />
          </g>
        </g>
      </g>
    </svg>
  );
});

export const MeetingDisabledIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeMeeting_Disabled"
        stroke="none"
        strokeWidth="1"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fill="none"
        fillRule="evenodd"
      >
        <g
          id="TeeMeeting"
          transform="translate(2.000000, 2.000000)"
          fill="#d3d3d3"
        >
          <path
            d="M14.5454545,0 C17.5579168,0 20,2.60962079 20,5.82875118 L20,12.6289609 C20,15.8480913 17.5579168,18.4577121 14.5454545,18.4577121 L6.36272727,18.4577121 L2.50658898,20.9307067 C2.29132522,21.0687258 2.01211602,20.9941347 1.88295776,20.764103 C1.84057175,20.6886132 1.81818182,20.6022328 1.81818182,20.5141973 L1.81830136,16.9736447 C0.702324045,15.9063568 0,14.355304 0,12.6289609 L0,5.82875118 C0,2.60962079 2.44208318,0 5.45454545,0 L14.5454545,0 Z M14.5454545,2 L5.45454545,2 C3.5070951,2 1.91720102,3.63621155 1.8226321,5.69258241 L1.81818182,5.886561 L1.81818182,12.6880428 C1.81818182,13.7353946 2.20579205,14.712007 2.88163359,15.4346071 L3.03083226,15.5854953 C3.37769838,15.9172899 3.59079785,16.3770553 3.62993547,16.8686847 L3.63648318,17.0336094 L3.63636364,18 L5.4271183,16.851639 C5.66262736,16.7005756 5.92646183,16.608899 6.19860468,16.5825362 L6.36272727,16.5746038 L14.5454545,16.5746038 C16.4929049,16.5746038 18.082799,14.9383922 18.1773679,12.8820213 L18.1818182,12.6880428 L18.1818182,5.886561 C18.1818182,3.80511774 16.6509377,2.10583214 14.7269457,2.00475648 L14.5454545,2 Z M11.8181818,5 C12.3202588,5 12.7272727,5.41422552 12.7272727,5.9251986 L12.7272727,6.21756136 L15,5 L16.3636364,5 L16.3636364,13.3267874 L15,13.3267874 L12.7272727,12.1073756 L12.7272727,12.4015888 C12.7272727,12.9125618 12.3202588,13.3267874 11.8181818,13.3267874 L4.54545455,13.3267874 C4.0433775,13.3267874 3.63636364,12.9125618 3.63636364,12.4015888 L3.63636364,5.9251986 C3.63636364,5.41422552 4.0433775,5 4.54545455,5 L11.8181818,5 Z M10.9090909,7 L5.45454545,7 L5.45454545,11.625993 L10.9090909,11.625993 L10.9090909,7 Z M14.5454545,7.48295367 L12.7272727,8.45718779 L12.7272727,10.1651044 L14.5454545,11.1402637 L14.5454545,7.48295367 Z M9.09090909,8.4015888 C9.59298609,8.4015888 10,8.81581432 10,9.3267874 C10,9.83776043 9.59298609,10.251986 9.09090909,10.251986 L7.27272727,10.251986 C6.77065023,10.251986 6.36363636,9.83776043 6.36363636,9.3267874 C6.36363636,8.81581432 6.77065023,8.4015888 7.27272727,8.4015888 L9.09090909,8.4015888 Z"
            id="Combined-Shape"
          />
        </g>
      </g>
    </svg>
  );
});

export const NoteIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeNote"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M21,2 C21.5522847,2 22,2.44771525 22,3 L22,21 C22,21.5522847 21.5522847,22 21,22 L4,22 C3.44771525,22 3,21.5522847 3,21 L3,17 L2,17 C1.44771525,17 1,16.5522847 1,16 C1,15.4477153 1.44771525,15 2,15 L3,15 L3,13 L2,13 C1.44771525,13 1,12.5522847 1,12 C1,11.4477153 1.44771525,11 2,11 L3,11 L3,9 L2,9 C1.44771525,9 1,8.55228475 1,8 C1,7.44771525 1.44771525,7 2,7 L3,7 L3,3 C3,2.44771525 3.44771525,2 4,2 L21,2 Z M20,4 L5,4 L5,7 L6,7 C6.55228475,7 7,7.44771525 7,8 C7,8.55228475 6.55228475,9 6,9 L5,9 L5,11 L6,11 C6.55228475,11 7,11.4477153 7,12 C7,12.5522847 6.55228475,13 6,13 L5,13 L5,15 L6,15 C6.55228475,15 7,15.4477153 7,16 C7,16.5522847 6.55228475,17 6,17 L5,17 L5,20 L20,20 L20,4 Z M17,15 C17.5522847,15 18,15.4477153 18,16 C18,16.5522847 17.5522847,17 17,17 L11,17 C10.4477153,17 10,16.5522847 10,16 C10,15.4477153 10.4477153,15 11,15 L17,15 Z M17,11 C17.5522847,11 18,11.4477153 18,12 C18,12.5522847 17.5522847,13 17,13 L11,13 C10.4477153,13 10,12.5522847 10,12 C10,11.4477153 10.4477153,11 11,11 L17,11 Z M17,7 C17.5522847,7 18,7.44771525 18,8 C18,8.55228475 17.5522847,9 17,9 L11,9 C10.4477153,9 10,8.55228475 10,8 C10,7.44771525 10.4477153,7 11,7 L17,7 Z"
          id="Combined-Shape"
          fill="#818181"
        />
      </g>
    </svg>
  );
});

export const NoteActiveIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/TeeNote_Active"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="Icon/appList/TeeNote" transform="translate(2.000000, 2.000000)">
          <g id="note" transform="translate(0.000000, 0.000000)">
            <rect
              id="Rectangle"
              fill="#1EA8DF"
              x="2"
              y="0"
              width="18"
              height="20"
              rx="1"
            />
            <rect
              id="Rectangle"
              fill="#FFFFFF"
              x="8"
              y="5"
              width="8"
              height="2"
              rx="1"
            />
            <rect
              id="Rectangle-Copy-4"
              fill="#FFFFFF"
              x="8"
              y="9"
              width="8"
              height="2"
              rx="1"
            />
            <rect
              id="Rectangle-Copy-13"
              fill="#FFFFFF"
              x="8"
              y="13"
              width="8"
              height="2"
              rx="1"
            />
            <rect
              id="Rectangle"
              fill="#1EA8DF"
              x="0"
              y="5"
              width="6"
              height="2"
              rx="1"
            />
            <rect
              id="Rectangle-Copy-4"
              fill="#1EA8DF"
              x="0"
              y="9"
              width="6"
              height="2"
              rx="1"
            />
            <rect
              id="Rectangle-Copy-13"
              fill="#1EA8DF"
              x="0"
              y="13"
              width="6"
              height="2"
              rx="1"
            />
          </g>
        </g>
      </g>
    </svg>
  );
});

export const ViewFileIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 24;
  const defaultHeight = 24;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/appList/view_file"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M20,2 C20.5522847,2 21,2.44771525 21,3 L21,21 C21,21.5522847 20.5522847,22 20,22 L4,22 C3.44771525,22 3,21.5522847 3,21 L3,3 C3,2.44771525 3.44771525,2 4,2 L20,2 Z M19,13 L5,13 L5,20 L19,20 L19,13 Z M13,15 C13.5522847,15 14,15.4477153 14,16 C14,16.5522847 13.5522847,17 13,17 L11,17 C10.4477153,17 10,16.5522847 10,16 C10,15.4477153 10.4477153,15 11,15 L13,15 Z M19,4 L5,4 L5,11 L5,11 L19,11 L19,4 Z M13,7 C13.5522847,7 14,7.44771525 14,8 C14,8.55228475 13.5522847,9 13,9 L11,9 C10.4477153,9 10,8.55228475 10,8 C10,7.44771525 10.4477153,7 11,7 L13,7 Z"
          id="Combined-Shape"
          fill="#818181"
          fillRule="nonzero"
        />
      </g>
    </svg>
  );
});

export const ViewFileActiveIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 18;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Page-1"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g
          id="Icon/appList/view_file_active"
          transform="translate(-3.000000, -2.000000)"
          fill="#523DC7"
        >
          <path
            d="M20,2 C20.5522847,2 21,2.44771525 21,3 L21,21 C21,21.5522847 20.5522847,22 20,22 L4,22 C3.44771525,22 3,21.5522847 3,21 L3,3 C3,2.44771525 3.44771525,2 4,2 L20,2 Z M13,16 L11,16 C10.4477153,16 10,16.4477153 10,17 C10,17.5522847 10.4477153,18 11,18 L11,18 L13,18 C13.5522847,18 14,17.5522847 14,17 C14,16.4477153 13.5522847,16 13,16 L13,16 Z M18,11 L6,11 C5.44771525,11 5,11.4477153 5,12 C5,12.5522847 5.44771525,13 6,13 L6,13 L18,13 C18.5522847,13 19,12.5522847 19,12 C19,11.4477153 18.5522847,11 18,11 L18,11 Z M13,6 L11,6 C10.4477153,6 10,6.44771525 10,7 C10,7.55228475 10.4477153,8 11,8 L11,8 L13,8 C13.5522847,8 14,7.55228475 14,7 C14,6.44771525 13.5522847,6 13,6 L13,6 Z"
            id="Combined-Shape"
          />
        </g>
      </g>
    </svg>
  );
});

export const ArrowLeftIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/arrow_left_line"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M13.232233,4.76399246 C13.5892557,5.1159824 13.5892557,5.68667086 13.232233,6.0386608 L8.70710678,10.5 L13.232233,14.9613392 C13.5892557,15.3133291 13.5892557,15.8840176 13.232233,16.2360075 C12.8752104,16.5879975 12.2963624,16.5879975 11.9393398,16.2360075 L6.76776695,11.1373342 C6.41074435,10.7853442 6.41074435,10.2146558 6.76776695,9.86266583 L11.9393398,4.76399246 C12.2963624,4.41200251 12.8752104,4.41200251 13.232233,4.76399246 Z"
            id="Path"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MinimizeIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/minimize"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M8,11 C8.55228475,11 9,11.4477153 9,12 L9,17.1534165 C9,17.7057013 8.55228475,18.1534165 8,18.1534165 L7.95616671,18.1534165 C7.40388196,18.1534165 6.95616671,17.7057013 6.95616671,17.1534165 L6.957,14.489 L2.72902343,18.716185 C2.33849914,19.1067092 1.70533416,19.1067092 1.31480987,18.716185 L1.28381505,18.6851901 C0.893290755,18.2946658 0.893290755,17.6615009 1.28381505,17.2709766 L5.512,13.044 L2.84658347,13.0438333 C2.29429872,13.0438333 1.84658347,12.596118 1.84658347,12.0438333 L1.84658347,12 C1.84658347,11.4477153 2.29429872,11 2.84658347,11 L8,11 Z M18.676112,1.29289322 L18.7071068,1.32388804 C19.0976311,1.71441233 19.0976311,2.34757731 18.7071068,2.7381016 L14.4789218,6.965 L17.1443384,6.96524488 C17.6966231,6.96524488 18.1443384,7.41296013 18.1443384,7.96524488 L18.1443384,8.00907817 C18.1443384,8.56136292 17.6966231,9.00907817 17.1443384,9.00907817 L11.9909218,9.00907817 C11.4386371,9.00907817 10.9909218,8.56136292 10.9909218,8.00907817 L10.9909218,2.85566164 C10.9909218,2.30337689 11.4386371,1.85566164 11.9909218,1.85566164 L12.0347551,1.85566164 C12.5870399,1.85566164 13.0347551,2.30337689 13.0347551,2.85566164 L13.0339218,5.52 L17.2618984,1.29289322 C17.6524227,0.902368927 18.2855877,0.902368927 18.676112,1.29289322 Z"
            id="Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const MaximizeIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/maximize"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M8.68519013,11.283815 L8.71618495,11.3148099 C9.10670925,11.7053342 9.10670925,12.3384991 8.71618495,12.7290234 L4.488,16.956 L7.15341653,16.9561667 C7.70570128,16.9561667 8.15341653,17.403882 8.15341653,17.9561667 L8.15341653,18 C8.15341653,18.5522847 7.70570128,19 7.15341653,19 L2,19 C1.44771525,19 1,18.5522847 1,18 L1,12.8465835 C1,12.2942987 1.44771525,11.8465835 2,11.8465835 L2.04383329,11.8465835 C2.59611804,11.8465835 3.04383329,12.2942987 3.04383329,12.8465835 L3.043,15.511 L7.27097657,11.283815 C7.66150086,10.8932908 8.29466584,10.8932908 8.68519013,11.283815 Z M18,1 C18.5522847,1 19,1.44771525 19,2 L19,7.15341653 C19,7.70570128 18.5522847,8.15341653 18,8.15341653 L17.9561667,8.15341653 C17.403882,8.15341653 16.9561667,7.70570128 16.9561667,7.15341653 L16.957,4.489 L12.7290234,8.71618495 C12.3384991,9.10670925 11.7053342,9.10670925 11.3148099,8.71618495 L11.283815,8.68519013 C10.8932908,8.29466584 10.8932908,7.66150086 11.283815,7.27097657 L15.512,3.044 L12.8465835,3.04383329 C12.2942987,3.04383329 11.8465835,2.59611804 11.8465835,2.04383329 L11.8465835,2 C11.8465835,1.44771525 12.2942987,1 12.8465835,1 L18,1 Z"
            id="Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const CancelIcon = React.memo(
  ({ width = 1, height = 1, color = '#000000' }) => {
    const defaultWidth = 20;
    const defaultHeight = 20;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/system/cancel"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M10,0 C10.5522847,-1.01453063e-16 11,0.44771525 11,1 L11,9 L19,9 C19.5522847,9 20,9.44771525 20,10 C20,10.5522847 19.5522847,11 19,11 L11,11 L11,19 C11,19.5522847 10.5522847,20 10,20 C9.44771525,20 9,19.5522847 9,19 L9,10.999 L1,11 C0.44771525,11 0,10.5522847 0,10 C0,9.44771525 0.44771525,9 1,9 L9,8.999 L9,1 C9,0.44771525 9.44771525,1.01453063e-16 10,0 Z"
            id="Combined-Shape"
            fill={color}
            transform="translate(10.000000, 10.000000) rotate(45.000000) translate(-10.000000, -10.000000) "
          />
        </g>
      </svg>
    );
  },
);

export const EmptyRoomIllust = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 200;
  const defaultHeight = 200;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <defs>
        <polygon
          id="path-1"
          points="0.0324 0.3799 22.428 0.3799 22.428 22.2559 0.0324 22.2559"
        />
      </defs>
      <g
        id="illust/b2b/space_make"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="Group-89" transform="translate(25.000000, 40.000000)">
          <path
            d="M34.6574,23.2309437 L34.6574,89.4714 L34.6574,89.4714 L75.0574,97.1594 L75.0574,30.1586566 C75.0574,29.1982789 74.3747743,28.3734815 73.4313315,28.1939237 L37.0313315,21.2662109 C35.9462395,21.0596942 34.8991838,21.7719203 34.6926671,22.8570123 C34.6692078,22.9802739 34.6574,23.1054696 34.6574,23.2309437 Z"
            id="Fill-1"
            fill="#C3C5F8"
          />
          <polygon
            id="Fill-2"
            fill="#8083E1"
            points="39.4089 54.8769 39.4089 57.0339 68.8119 62.5909 68.8119 60.4349"
          />
          <polygon
            id="Fill-3"
            fill="#F2F2F2"
            points="39.4089 60.9204 39.4089 63.0784 68.8119 68.6354 68.8119 66.4794"
          />
          <polygon
            id="Fill-4"
            fill="#F2F2F2"
            points="39.4089 66.9648 39.4089 69.1228 68.8119 74.6808 68.8119 72.5238"
          />
          <polygon
            id="Fill-5"
            fill="#F2F2F2"
            points="39.4089 73.0097 39.4089 75.1677 68.8119 80.7247 68.8119 78.5697"
          />
          <polygon
            id="Fill-6"
            fill="#F2F2F2"
            points="39.4089 79.0546 39.4089 81.2116 68.8119 86.7686 68.8119 84.6126"
          />
          <g id="Group-88" transform="translate(0.000000, 0.416000)">
            <path
              d="M52.5397,30.0624048 C58.4337,30.0865 64.0317,35.0305 65.0407,41.1015 C66.0487,47.1745 62.0857,52.0785 56.1907,52.0526029 C50.2947,52.0285 44.6977,47.0845 43.6897,41.0115 C42.6807,34.9395 46.6427,30.0375 52.5397,30.0624048"
              id="Fill-7"
              fill="#9C9FEE"
            />
            <path
              d="M7.5695,49.2685636 L7.5695,103.92971 C7.5695,104.890103 8.25214649,105.714908 9.19560755,105.89445 L39.7566076,111.710245 C40.8417037,111.916741 41.8887452,111.204494 42.0952403,110.119398 C42.1186947,109.996149 42.1305,109.870966 42.1305,109.745505 L42.1305,55.085243 C42.1305,54.1248714 41.4478827,53.3000774 40.5044473,53.1205132 L9.94344731,47.3038337 C8.85835697,47.0973083 7.81129554,47.8095259 7.60477014,48.8946163 C7.58130878,49.017883 7.5695,49.1430841 7.5695,49.2685636 Z"
              id="Fill-9"
              fill="#E6E6ED"
            />
            <polygon
              id="Fill-11"
              fill="#B8B8BF"
              points="11.634 75.9907 11.634 77.8367 36.788 82.5907 36.788 80.7467"
            />
            <polygon
              id="Fill-13"
              fill="#E6E6E6"
              points="11.634 81.3974 11.634 83.2424 36.788 87.9974 36.788 86.1534"
            />
            <polygon
              id="Fill-15"
              fill="#FFFFFF"
              points="11.634 86.8051 11.634 88.6521 36.788 93.4051 36.788 91.5601"
            />
            <polygon
              id="Fill-17"
              fill="#FFFFFF"
              points="11.634 92.2129 11.634 94.0589 36.788 98.8129 36.788 96.9679"
            />
            <polygon
              id="Fill-19"
              fill="#FFFFFF"
              points="11.634 97.6206 11.634 99.4656 36.788 104.2206 36.788 102.3756"
            />
            <path
              d="M22.8669,55.1190215 C27.9089,55.1401 32.6979,59.3681 33.5609,64.5621 C34.4229,69.7581 31.0339,73.9531 25.9909,73.9311861 C20.9459,73.9101 16.1579,69.6821 15.2969,64.4861 C14.4329,59.2911 17.8219,55.0981 22.8669,55.1190215"
              id="Fill-21"
              fill="#CFCFD6"
            />
            <path
              d="M82.3034,47.3769156 L82.3034,98.7960743 C82.3034,99.7564829 82.9860686,100.581298 83.9295491,100.760823 L112.581549,106.212705 C113.66665,106.419177 114.713676,105.706908 114.920148,104.621808 C114.943597,104.498572 114.9554,104.373404 114.9554,104.247957 L114.9554,52.8296759 C114.9554,51.8692896 114.272762,51.0444873 113.329309,50.8649387 L84.677309,45.4121785 C83.5922146,45.2056742 82.5451671,45.9179123 82.3386629,47.0030066 C82.3152063,47.126261 82.3034,47.2514491 82.3034,47.3769156 Z"
              id="Fill-23"
              fill="#C3C5F8"
            />
            <polygon
              id="Fill-25"
              fill="#898CD2"
              points="86.1432 72.4902 86.1432 74.2332 109.9082 78.7242 109.9082 76.9822"
            />
            <polygon
              id="Fill-27"
              fill="#F2F2F2"
              points="86.1432 77.6889 86.1432 79.4329 109.9082 83.9239 109.9082 82.1809"
            />
            <polygon
              id="Fill-29"
              fill="#F2F2F2"
              points="86.1432 82.8877 86.1432 84.6317 109.9082 89.1237 109.9082 87.3807"
            />
            <polygon
              id="Fill-31"
              fill="#F2F2F2"
              points="86.1432 88.0864 86.1432 89.8314 109.9082 94.3234 109.9082 92.5814"
            />
            <polygon
              id="Fill-33"
              fill="#F2F2F2"
              points="86.1432 93.2871 86.1432 95.0301 109.9082 99.5221 109.9082 97.7791"
            />
            <path
              d="M106.859,61.6935 C107.673,66.6015 104.471,70.5635 99.707,70.5436502 C94.941,70.5235 90.419,66.5295 89.603,61.6205 C88.788,56.7125 91.989,52.7515 96.756,52.7713498 C101.519,52.7915 106.044,56.7865 106.859,61.6935 Z"
              id="Fill-35"
              fill="#9C9FEE"
            />
            <g id="Group-7" transform="translate(52.506000, 67.748000)">
              <path
                d="M5.15143483e-14,2.41651126 L5.15143483e-14,42.6367211 C4.82199796e-14,43.5971088 0.682639538,44.4219118 1.62609448,44.601459 L23.6890945,48.8002266 C24.7741892,49.0067289 25.8212355,48.294489 26.0277378,47.2093943 C26.0511939,47.086141 26.063,46.9609541 26.063,46.8354887 L26.063,6.61527886 C26.063,5.65489123 25.3803605,4.83008817 24.4369055,4.65054105 L2.37390552,0.451773448 C1.28881079,0.245271132 0.241764506,0.957511009 0.0352621898,2.04260574 C0.0118061021,2.16585897 5.14989833e-14,2.29104594 5.15143483e-14,2.41651126 Z"
                id="Fill-37"
                fill="#DEE0FF"
              />
              <polygon
                id="Fill-39"
                fill="#C3C5F8"
                points="3.065 21.9741 3.065 23.3661 22.034 26.9511 22.034 25.5591"
              />
              <polygon
                id="Fill-41"
                fill="#FFFFFF"
                points="3.065 26.4546 3.065 27.8456 22.034 31.4316 22.034 30.0406"
              />
              <polygon
                id="Fill-43"
                fill="#FFFFFF"
                points="3.065 30.9336 3.065 32.3266 22.034 35.9116 22.034 34.5206"
              />
              <polygon
                id="Fill-45"
                fill="#FFFFFF"
                points="3.065 35.4136 3.065 36.8066 22.034 40.3926 22.034 39.0006"
              />
              <polygon
                id="Fill-47"
                fill="#FFFFFF"
                points="3.065 39.8945 3.065 41.2865 22.034 44.8725 22.034 43.4805"
              />
              <path
                d="M11.5357,6.23433955 C15.3377,6.2504 18.9497,9.4394 19.6007,13.3564 C20.2507,17.2744 17.6947,20.4374 13.8917,20.4214604 C10.0877,20.4054 6.4777,17.2164 5.8267,13.2974 C5.1767,9.3804 7.7327,6.2184 11.5357,6.23433955"
                id="Fill-49"
                fill="#C3C5F8"
              />
            </g>
            <g id="Group-53" transform="translate(127.000000, 47.000000)">
              <mask id="mask-2" fill="white">
                <use xlinkHref="#path-1" />
              </mask>
              <g id="Clip-52" />
              <path
                d="M0.0324,1.5881482 L0.0324,17.1672192 C0.0324,17.6474315 0.373745449,18.0598434 0.845495506,18.1495973 L21.2414955,22.0300829 C21.7840479,22.1333074 22.3075536,21.7771617 22.4107781,21.2346093 C22.4225,21.1729982 22.4284,21.110421 22.4284,21.0477048 L22.4284,5.46954452 C22.4284,4.98934843 22.0870771,4.57694562 21.6153468,4.48717449 L1.21934682,0.605778164 C0.676798836,0.502530284 0.153277846,0.858653385 0.0500299655,1.40120137 C0.0383026713,1.46282608 0.0324,1.52541756 0.0324,1.5881482 Z"
                id="Fill-51"
                fill="#868686"
                mask="url(#mask-2)"
              />
            </g>
            <polyline
              id="Fill-54"
              fill="#868686"
              points="128.1432 57.6762 119.9522 65.0122 131.3482 63.2762"
            />
            <polygon
              id="Fill-56"
              fill="#868686"
              points="141.0202 58.2505 140.9812 60.2425 136.5962 59.5275 136.6352 57.5365"
            />
            <path
              d="M140.7267,60.0835 L140.7607,58.3255 L136.8897,57.6945 L136.8547,59.4525 L140.7267,60.0835 L140.7267,60.0835 Z M132.6677,56.2485 L144.5097,58.1775 L144.3987,63.8785 L132.5577,61.9495 L132.6677,56.2485 Z"
              id="Fill-58"
              fill="#FFFFFF"
            />
            <polygon
              id="Fill-60"
              fill="#FFFFFF"
              points="141.5597 54.2622 141.5397 55.2562 144.5567 55.7472 144.5237 57.4022 132.6827 55.4722 132.7147 53.8172 135.7317 54.3082 135.7507 53.3152"
            />
            <path
              d="M88.4816,1.7926482 L88.4816,18.1984 L88.4816,18.1984 L109.690696,22.2335829 C110.233248,22.3368074 110.756754,21.9806617 110.859978,21.4381093 C110.8717,21.3764982 110.8776,21.313921 110.8776,21.2512048 L110.8776,5.67404452 C110.8776,5.19384843 110.536277,4.78144562 110.064547,4.69167449 L89.6685468,0.810278164 C89.1259988,0.707030284 88.6024778,1.06315339 88.49923,1.60570137 C88.4875027,1.66732608 88.4816,1.72991756 88.4816,1.7926482 Z"
              id="Fill-62"
              fill="#EF7894"
            />
            <polyline
              id="Fill-64"
              fill="#EF7894"
              points="89.5861 13.062 81.3951 20.398 92.7911 18.662"
            />
            <path
              d="M103.4528,9.6494 C103.4928,8.0864 102.3568,6.6244 100.9178,6.3814 C100.3288,6.2824 99.7838,6.4044 99.3388,6.6854 C100.4928,7.4614 101.2738,8.8724 101.2368,10.3534 C101.2208,10.9764 101.0628,11.5564 100.7788,12.0444 C101.6648,12.9594 102.2588,14.1454 102.4608,15.3994 L104.7538,15.7864 C104.7968,14.0814 103.9398,12.4584 102.6528,11.5064 C103.1298,11.0734 103.4338,10.4224 103.4528,9.6494 M99.6628,12.0794 C100.9508,13.0314 101.8068,14.6564 101.7648,16.3584 L93.6538,14.9894 C93.6968,13.2874 94.6268,11.9634 95.9508,11.4524 C95.4998,10.8634 95.2308,10.1154 95.2498,9.3424 C95.2888,7.7814 96.4868,6.7114 97.9278,6.9534 C99.3678,7.1974 100.5038,8.6614 100.4648,10.2224 C100.4458,10.9954 100.1398,11.6464 99.6628,12.0794"
              id="Fill-66"
              fill="#F1F2F2"
            />
            <path
              d="M0.0002,8.4895012 L0.0002,24.0685192 C0.0002,24.5487315 0.341545449,24.9611434 0.813295506,25.0508973 L22.3962,29.1572 L22.3962,29.1572 L22.3962,12.3718082 C22.3962,11.8916284 22.0548996,11.4792347 21.5831892,11.3894462 L1.18718915,7.50713922 C0.644645616,7.40386796 0.121109281,7.7599685 0.0178380219,8.30251204 C0.00610538058,8.36415038 0.0002,8.42675616 0.0002,8.4895012 Z"
              id="Fill-68"
              fill="#868686"
            />
            <polyline
              id="Fill-70"
              fill="#868686"
              points="20.5426 23.5049 28.0726 34.1719 12.6236 26.7009"
            />
            <polygon
              id="Fill-72"
              fill="#F1F2F2"
              points="14.96 16.1426 14.868 24.0446 6 22.6696 6.092 14.7676"
            />
            <polygon
              id="Fill-74"
              fill="#F1F2F2"
              points="14.9854 13.959 14.9704 15.228 6.1024 13.854 6.1164 12.584"
            />
            <polygon
              id="Fill-76"
              fill="#666666"
              points="7.1402 21.4282 7.7962 20.6792 8.3272 20.7992 7.1382 21.9702 6.4642 21.1202 6.8852 20.9412"
            />
            <polygon
              id="Fill-78"
              fill="#666666"
              points="7.1646 19.353 7.8196 18.606 8.3506 18.724 7.1626 19.895 6.4886 19.047 6.9096 18.868"
            />
            <polygon
              id="Fill-80"
              fill="#666666"
              points="8.939 21.2651 8.942 20.9541 13.968 21.7331 13.965 22.0441"
            />
            <polygon
              id="Fill-82"
              fill="#666666"
              points="7.1886 17.2768 7.8446 16.5308 8.3756 16.6498 7.1866 17.8218 6.5126 16.9718 6.9336 16.7928"
            />
            <polygon
              id="Fill-84"
              fill="#666666"
              points="8.963 19.1894 8.966 18.8794 13.993 19.6594 13.989 19.9684"
            />
            <polygon
              id="Fill-86"
              fill="#666666"
              points="8.9908 16.8056 14.0168 17.5846 14.0128 17.8946 8.9878 17.1166"
            />
          </g>
        </g>
      </g>
    </svg>
  );
});

// lock2
export const LockLineIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/lock2"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <g id="TeeNote_Icon/lock">
          <rect id="Rectangle" x="0" y="0" width="20" height="20" />
          <path
            d="M10,0 C12.5247303,0 14.5714286,1.98967724 14.5714286,4.44406851 L14.5714286,7.77666667 L15.7142857,7.77777778 C16.9766509,7.77777778 18,8.77270056 18,10 L18,17.7777778 C18,19.0050772 16.9766509,20 15.7142857,20 L4.28571429,20 C3.02334914,20 2,19.0050772 2,17.7777778 L2,10 C2,8.77270056 3.02334914,7.77777778 4.28571429,7.77777778 L5.42857143,7.77666667 L5.42857143,4.44406851 C5.42857143,2.06405274 7.35310682,0.121013234 9.77183961,0.00543877018 L10,0 Z M12.3991673,10.0000006 L7.6,10.003426 L5,10.003426 C4.44771525,10.003426 4,10.4511412 4,11.003426 L4,17 C4,17.5522847 4.44771525,18 5,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,11.003426 C15.9990479,10.4515128 15.5519124,10.0039516 15.0000005,10.0024743 L12.4008327,10.0000008 C12.4002776,10.0000003 12.3997224,10.0000002 12.3991673,10.0000006 Z M10,11.5 C10.7870058,11.5 11.4324506,12.2314934 11.4950275,13.1618684 L11.5,13.3103448 L11.5,14.6896552 C11.5,15.689481 10.8284271,16.5 10,16.5 C9.21299423,16.5 8.56754942,15.7685066 8.50497246,14.8381316 L8.5,14.6896552 L8.5,13.3103448 C8.5,12.310519 9.17157288,11.5 10,11.5 Z M10,2 C9.83760405,2 9.6788246,2.01486298 9.5250575,2.0432491 L9.24378138,2.11174297 L9.0009913,2.19926183 L8.93197465,2.2295649 L8.76705388,2.31168455 L8.58054405,2.4240538 L8.40277075,2.55354175 L8.23224287,2.70297736 L8.04610174,2.90255536 L7.91623823,3.07337364 L7.82562652,3.21462912 C7.75066329,3.34113016 7.68718238,3.47507594 7.63678915,3.61488373 L7.61372686,3.68201663 C7.57689903,3.79495377 7.54853285,3.91148134 7.52934101,4.03091521 L7.50685717,4.2206222 L7.5,4.3997158 L7.5,8 L12.5,8 L12.5,4.3997158 L12.4929511,4.21816274 L12.4701507,4.02776598 L12.4557113,3.94767388 L12.4336785,3.8482784 L12.3835873,3.67383189 L12.3204368,3.5049636 L12.2374762,3.3281398 L12.1358225,3.1518376 L12.058225,3.03719945 C11.9885751,2.9404415 11.9117113,2.84883475 11.8283795,2.76309537 L11.6828189,2.62504045 L11.5975002,2.55391332 C11.3975163,2.39401412 11.1703522,2.26333421 10.9239066,2.16919743 L10.8006054,2.12571558 L10.6936103,2.09375627 L10.5060232,2.04938208 L10.3710271,2.02624641 L10.1865838,2.00678482 L10,2 Z"
            id="Shape"
            fill="currentcolor"
          />
        </g>
      </g>
    </svg>
  );
});
