import React from 'react';

const REM_UNIT = 16;

export const AddRoomIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/add_room"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M18.8786667,14.755849 C19.3855833,14.755849 19.7953333,15.1660377 19.7953333,15.6734972 L19.7953333,15.6734972 L19.7953333,17.9602764 L22.0833333,17.9602764 C22.59025,17.9602764 23,18.3704651 23,18.8779245 C23,19.3853839 22.59025,19.7955727 22.0833333,19.7955727 L22.0833333,19.7955727 L19.7953333,19.7955727 L19.7953333,22.0823518 C19.7953333,22.5898113 19.3855833,23 18.8786667,23 C18.37175,23 17.962,22.5898113 17.962,22.0823518 L17.962,22.0823518 L17.962,19.7955727 L15.6749167,19.7955727 C15.168,19.7955727 14.75825,19.3853839 14.75825,18.8779245 C14.75825,18.3704651 15.168,17.9602764 15.6749167,17.9602764 L15.6749167,17.9602764 L17.962,17.9602764 L17.962,15.6734972 C17.962,15.1660377 18.37175,14.755849 18.8786667,14.755849 Z M18.0435833,1.91703333 C20.6997939,1.91703333 22.8745474,4.09314922 22.9871687,6.81393442 L22.99175,7.0357 L22.99175,10.2917 C22.99175,11.7418197 22.388633,13.0680255 21.4216335,14.0042612 L21.3713184,14.0528001 L21.3713184,14.0528001 C21.3584831,14.0644046 21.3457531,14.0762731 21.3329635,14.0880751 L21.333857,14.0853457 C21.1749267,14.2146016 20.9735464,14.2916667 20.7541667,14.2916667 C20.2479056,14.2916667 19.8375,13.881261 19.8375,13.375 C19.8375,13.1001726 19.958444,12.8535932 20.1500114,12.6855824 C20.7308976,12.1258879 21.1074204,11.3395522 21.1536144,10.4723355 L21.1584167,10.2917 L21.1584167,7.0357 C21.1584167,5.22345 19.7614167,3.75036667 18.0435833,3.75036667 L10.988,3.75036667 C9.36,3.75036667 8.00241667,5.10061667 7.897,6.8267 L7.88955208,6.9147 L7.87866667,7.0027 L7.87316667,10.2917 C7.87316667,12.0405736 9.17548296,13.4749771 10.8114817,13.5718219 L10.988,13.5770333 L13.7563333,13.5770333 C13.8800833,13.5770333 14.0022865,13.602299 14.1155951,13.6501232 L14.2256667,13.7053667 L16.452397,15.0318109 C16.4520598,15.0328137 16.4517235,15.0338168 16.451388,15.0348202 C16.6979055,15.1994204 16.8583333,15.4784753 16.8583333,15.795 C16.8583333,16.301261 16.4479277,16.7116667 15.9416667,16.7116667 C15.7793508,16.7116667 15.6268885,16.6694789 15.4946465,16.5954704 C15.3038623,16.482447 15.2043678,16.4230148 15.1912587,16.4152066 C14.8580224,16.2167197 14.3766811,15.9300164 13.7472348,15.5550967 L13.50425,15.4103667 L10.988,15.4103667 C8.33089693,15.4103667 6.15698892,13.2333817 6.04441281,10.513397 L6.03983333,10.2917 L6.03983333,7.68653333 L5.94816667,7.68653333 C4.28956897,7.68653333 2.93005965,9.06063084 2.83827256,10.7857373 L2.83333333,10.9718667 L2.83333333,14.2287833 C2.83333333,15.9246167 4.09925,17.3555333 5.71441667,17.4847833 C6.15441667,17.5194756 6.50068886,17.8611265 6.55135795,18.2898361 L6.55775,18.3987 L6.55775,19.5537 L9.76608333,17.64245 C9.87264583,17.5798875 9.99055208,17.5389812 10.1124544,17.5224383 L10.2354167,17.5141167 L12.8759969,17.5148271 L12.8610682,17.5221752 L12.8610682,17.5221752 L12.9166667,17.5183333 C13.4229277,17.5183333 13.8333333,17.928739 13.8333333,18.435 C13.8333333,18.9050995 13.4794632,19.2925482 13.0235694,19.3454996 L12.9900558,19.347357 C12.9644414,19.3507447 12.9406617,19.3516667 12.9166667,19.3516667 L12.845,19.3470333 L10.4884167,19.34745 L6.11041667,21.95445 C5.96558333,22.0406167 5.80425,22.0837 5.64108333,22.0837 C5.48525,22.0837 5.32941667,22.0433667 5.18825,21.9636167 C4.938,21.8208458 4.7705651,21.5699943 4.73261654,21.2890521 L4.72441667,21.1670333 L4.72441667,19.1677833 C2.65091667,18.6166222 1.10592287,16.7086478 1.00522717,14.4623266 L1,14.2287833 L1,10.9718667 C1,8.22372412 3.1048533,5.97441964 5.73388451,5.85793834 L5.94816667,5.8532 L6.20116667,5.8532 C6.70415054,3.66207097 8.55323222,2.0255205 10.7655897,1.92221665 L10.988,1.91703333 L18.0435833,1.91703333 Z M17.5347417,9.63985833 C18.0407417,9.63985833 18.4514083,10.050525 18.4514083,10.556525 C18.4514083,11.0263821 18.0973131,11.4140386 17.6415961,11.4670209 L17.5347417,11.4731917 L11.4874917,11.4731917 C10.9814917,11.4731917 10.570825,11.062525 10.570825,10.556525 C10.570825,10.0866679 10.9249202,9.69901139 11.3806372,9.64602913 L11.4874917,9.63985833 L17.5347417,9.63985833 Z M17.5347417,6.02956667 C18.0407417,6.02956667 18.4514083,6.44023333 18.4514083,6.94623333 C18.4514083,7.41609048 18.0973131,7.80374694 17.6415961,7.8567292 L17.5347417,7.8629 L11.4874917,7.8629 C10.9814917,7.8629 10.570825,7.45223333 10.570825,6.94623333 C10.570825,6.47637619 10.9249202,6.08871973 11.3806372,6.03573746 L11.4874917,6.02956667 L17.5347417,6.02956667 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const ArrowBackIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/arrow_back_2"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M22.002,11.9913 C22.002,11.4393 21.554,10.9913 21.002,10.9913 L5.206,10.9913 L11.683,4.7183 C12.079,4.3343 12.089,3.7013 11.705,3.3043 C11.321,2.9073 10.688,2.8973 10.291,3.2823 L2.49,10.8373 C2.175,11.1413 2.002,11.5503 1.99998265,11.9863 C1.998,12.4213 2.169,12.8303 2.486,13.1413 L10.29,20.7183 C10.484,20.9063 10.736,21.0003 10.987,21.0003 C11.248,21.0003 11.508,20.8983 11.704,20.6963 C12.089,20.3003 12.08,19.6673 11.684,19.2823 L5.203,12.9913 L21.002,12.9913 C21.554,12.9913 22.002,12.5433 22.002,11.9913"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const FriendsIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#7B7671' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/friends"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1 Z M12,3 C7.037,3 3,7.038 3,12 C3,16.962 7.037,21 12,21 C16.963,21 21,16.962 21,12 C21,7.038 16.963,3 12,3 Z M16.476,12.2185 C16.923,11.8605 17.563,11.9515 17.903,12.4225 C18.244,12.8935 18.157,13.5645 17.71,13.9225 C16.252,15.0905 14.339,15.6625 12.002,15.6665209 C9.662,15.6705 7.748,15.0995 6.289,13.9275 C5.842,13.5685 5.757,12.8955 6.098,12.4265 C6.44,11.9565 7.079,11.8665 7.525,12.2255 C8.598,13.0855 10.078,13.5275 11.998,13.5245 C13.92,13.5215 15.402,13.0775 16.476,12.2185 Z M14.4443,8.3338 C15.1193,8.3338 15.6673,8.8808 15.6673,9.5558 C15.6673,10.2308 15.1193,10.7778 14.4443,10.7778 C13.7693,10.7778 13.2223,10.2308 13.2223,9.5558 C13.2223,8.8808 13.7693,8.3338 14.4443,8.3338 Z M9.5557,8.3338 C10.2307,8.3338 10.7777,8.8808 10.7777,9.5558 C10.7777,10.2308 10.2307,10.7778 9.5557,10.7778 C8.8807,10.7778 8.3327,10.2308 8.3327,9.5558 C8.3327,8.8808 8.8807,8.3338 9.5557,8.3338 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const SearchIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/search"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M10.6826,1 C16.0216,1 20.3646,5.375 20.3646,10.752 C20.3646,13.042 19.5726,15.145 18.2556,16.81 L18.2556,16.81 L22.1736,20.76 L22.7096,21.301 C23.0986,21.693 23.0966,22.326 22.7036,22.715 C22.5086,22.908 22.2546,23.005 21.9996,23.005 C21.7436,23.005 21.4856,22.906 21.2896,22.709 L21.2896,22.709 L17.8786,19.271 C17.8786,19.27 17.8776,19.269 17.8776,19.269 L17.8776,19.269 L16.8666,18.249 C15.1876,19.656 13.0326,20.504 10.6826,20.504 C5.3436,20.504 0.9996,16.129 0.9996,10.752 C0.9996,5.375 5.3436,1 10.6826,1 Z M10.6826,3 C6.4466,3 2.9996,6.478 2.9996,10.752 C2.9996,15.027 6.4466,18.504 10.6826,18.504 C14.9176,18.504 18.3646,15.027 18.3646,10.752 C18.3646,6.478 14.9176,3 10.6826,3 Z M10.284,4.5271 C10.837,4.5271 11.284,4.9751 11.284,5.5271 C11.284,6.0791 10.837,6.5271 10.284,6.5271 C8.197,6.5271 6.499,8.2421 6.499,10.3511 C6.499,10.9031 6.052,11.3511 5.499,11.3511 C4.946,11.3511 4.499,10.9031 4.499,10.3511 C4.499,7.1401 7.094,4.5271 10.284,4.5271 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const AddFriendsIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/add_friends"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M19.504,15.0063807 C20.057,15.0063807 20.504,15.4538593 20.504,16.0074514 L20.504,16.0074514 L20.504,18.5021197 L23,18.5021197 C23.553,18.5021197 24,18.9495983 24,19.5031904 C24,20.0567825 23.553,20.5042611 23,20.5042611 L23,20.5042611 L20.504,20.5042611 L20.504,22.9989293 C20.504,23.5525214 20.057,24 19.504,24 C18.951,24 18.504,23.5525214 18.504,22.9989293 L18.504,22.9989293 L18.504,20.5042611 L16.009,20.5042611 C15.456,20.5042611 15.009,20.0567825 15.009,19.5031904 C15.009,18.9495983 15.456,18.5021197 16.009,18.5021197 L16.009,18.5021197 L18.504,18.5021197 L18.504,16.0074514 C18.504,15.4538593 18.951,15.0063807 19.504,15.0063807 Z M12,1 C18.065,1 23,5.94028396 23,12.0117778 C23,12.5653699 22.553,13.0128485 22,13.0128485 C21.447,13.0128485 21,12.5653699 21,12.0117778 C21,7.04346388 16.963,3.00214142 12,3.00214142 C7.037,3.00214142 3,7.04346388 3,12.0117778 C3,16.9800918 7.037,21.0214142 12,21.0214142 C12.553,21.0214142 13,21.4688928 13,22.0224849 C13,22.576077 12.553,23.0235556 12,23.0235556 C5.935,23.0235556 1,18.0832717 1,12.0117778 C1,5.94028396 5.935,1 12,1 Z M16.4757,12.2308121 C16.9227,11.8724288 17.5627,11.9635262 17.9037,12.4340294 C18.2437,12.9055337 18.1577,13.5782533 17.7097,13.9366366 C16.2517,15.1048861 14.3387,15.6784996 12.0017,15.6825248 C9.6617,15.6865082 7.7477,15.1148968 6.2887,13.9406409 C5.8417,13.5822575 5.7567,12.909538 6.0977,12.4380337 C6.4397,11.9675305 7.0787,11.8774341 7.5257,12.2378196 C8.5977,13.0987404 10.0777,13.5422147 11.9977,13.5382104 C13.9197,13.5352072 15.4027,13.0907318 16.4757,12.2308121 Z M14.444,8.3405512 C15.119,8.3405512 15.667,8.88913795 15.667,9.56486068 C15.667,10.2405834 15.119,10.7881691 14.444,10.7881691 C13.77,10.7881691 13.223,10.2405834 13.223,9.56486068 C13.223,8.88913795 13.77,8.3405512 14.444,8.3405512 Z M9.5553,8.3405512 C10.2303,8.3405512 10.7773,8.88913795 10.7773,9.56486068 C10.7773,10.2405834 10.2303,10.7881691 9.5553,10.7881691 C8.8813,10.7881691 8.3333,10.2405834 8.3333,9.56486068 C8.3333,8.88913795 8.8813,8.3405512 9.5553,8.3405512 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const EditIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/edit"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M13.7918,1.2934 C14.1828,0.9024 14.8148,0.9024 15.2058,1.2934 C15.5968,1.6834 15.5968,2.3164 15.2058,2.7074 L15.2058,2.7074 L13.5698,4.3424 C13.1938,4.7184 12.9868,5.2184 12.9868,5.7504 C12.9868,6.2824 13.1938,6.7814 13.5698,7.1574 L13.5698,7.1574 L15.2058,8.7934 L16.8418,10.4304 C17.6168,11.2054 18.8808,11.2054 19.6558,10.4304 L19.6558,10.4304 L21.2918,8.7934 C21.6828,8.4034 22.3148,8.4034 22.7058,8.7934 C23.0968,9.1844 23.0968,9.8174 22.7058,10.2084 L22.7058,10.2084 L21.0698,11.8444 C20.2928,12.6224 19.2698,13.0114 18.2488,13.0114 C17.6718,13.0114 17.1008,12.8734 16.5668,12.6254 C13.0988,16.3694 12.9998,19.4784 12.9988,19.5104 C12.9918,19.9634 12.6808,20.3634 12.2408,20.4734 L12.2408,20.4734 L2.2408,22.9734 C2.1608,22.9934 2.0798,23.0024 1.9988,23.0024 C1.8698,23.0024 1.7408,22.9774 1.6198,22.9284 C1.4988,22.8784 1.3878,22.8054 1.2918,22.7104 C1.2068,22.6244 1.1458,22.5234 1.0978,22.4174 C1.0848,22.3904 1.0738,22.3654 1.0638,22.3384 C1.0258,22.2324 1.0008,22.1224 0.9998,22.0094 C0.9998,21.9994 1.0038,21.9894 1.0038,21.9794 C1.0058,21.9064 1.0108,21.8324 1.0288,21.7604 L1.0288,21.7604 L3.5288,11.7584 C3.6148,11.4124 3.8808,11.1384 4.2248,11.0404 C7.3058,10.1594 10.1068,8.2654 11.3328,7.3594 C11.1108,6.8584 10.9868,6.3144 10.9868,5.7504 C10.9868,4.6844 11.4018,3.6824 12.1558,2.9284 L12.1558,2.9284 Z M12.5408,8.9564 C11.2798,9.8944 8.5208,11.7654 5.3318,12.7934 L5.3318,12.7934 L3.8448,18.7434 L7.8938,14.6934 C7.8858,14.6294 7.8738,14.5674 7.8738,14.5014 C7.8738,13.6054 8.6028,12.8764 9.4988,12.8764 C10.3948,12.8764 11.1238,13.6054 11.1238,14.5014 C11.1238,15.3974 10.3948,16.1264 9.4988,16.1264 C9.4338,16.1264 9.3708,16.1154 9.3078,16.1074 L9.3078,16.1074 L5.2588,20.1574 L11.0788,18.7024 C11.2938,17.3764 12.0818,14.5644 14.9758,11.3924 L14.9758,11.3924 L12.9198,9.3354 Z M15.4481,4.3169 C15.8391,3.9259 16.4711,3.9259 16.8621,4.3169 L16.8621,4.3169 L19.6821,7.1369 C20.0731,7.5279 20.0731,8.1609 19.6821,8.5509 C19.4871,8.7469 19.2311,8.8439 18.9751,8.8439 C18.7191,8.8439 18.4641,8.7469 18.2681,8.5509 L18.2681,8.5509 L15.4481,5.7309 C15.0571,5.3399 15.0571,4.7079 15.4481,4.3169 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const CloseIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#232D3B' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/close"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M4.293,19.707 C4.488,19.902 4.744,20 5,20 C5.256,20 5.512,19.902 5.707,19.707 L12,13.414 L18.293,19.707 C18.488,19.902 18.744,20 19,20 C19.256,20 19.512,19.902 19.707,19.707 C20.098,19.316 20.098,18.684 19.707,18.293 L13.414,12 L19.707,5.707 C20.098,5.316 20.098,4.684 19.707,4.293 C19.316,3.902 18.684,3.902 18.293,4.293 L12,10.586 L5.707,4.293 C5.316,3.902 4.684,3.902 4.293,4.293 C3.902,4.684 3.902,5.316 4.293,5.707 L10.586,12 L4.293,18.293 C3.902,18.684 3.902,19.316 4.293,19.707"
            id="Fill-1"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const SettingIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#fff' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/setting_1"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M12.0034,0.9997 L12.1904,1.0027 C13.1444,1.0247 14.0054,1.6467 14.3284,2.5517 L14.3284,2.5517 L14.7964,3.8627 C14.8284,3.9527 14.8894,4.0237 14.9544,4.0477 C15.1504,4.1187 15.3444,4.1957 15.5344,4.2797 C15.6034,4.3097 15.6974,4.3007 15.7884,4.2577 L15.7884,4.2577 L17.0234,3.6687 C17.8984,3.2507 18.9524,3.4167 19.6434,4.0877 C19.7364,4.1767 19.8294,4.2687 19.9194,4.3627 C20.5874,5.0537 20.7564,6.1067 20.3374,6.9837 L20.3374,6.9837 L19.7484,8.2177 C19.7054,8.3067 19.6964,8.4037 19.7254,8.4687 C19.8104,8.6617 19.8874,8.8557 19.9584,9.0517 C19.9824,9.1167 20.0524,9.1777 20.1434,9.2097 L20.1434,9.2097 L21.4544,9.6777 C22.3584,10.0007 22.9814,10.8617 23.0034,11.8207 L23.0034,11.8207 L23.0054,12.0027 L23.0034,12.1897 C22.9814,13.1437 22.3584,14.0057 21.4544,14.3277 L21.4544,14.3277 L20.1434,14.7967 C20.0524,14.8287 19.9824,14.8897 19.9584,14.9537 C19.8874,15.1507 19.8094,15.3457 19.7264,15.5357 C19.6964,15.6027 19.7054,15.6987 19.7474,15.7877 L19.7474,15.7877 L20.3374,17.0227 C20.7564,17.8987 20.5874,18.9527 19.9184,19.6437 C19.8274,19.7387 19.7354,19.8297 19.6434,19.9197 C18.9524,20.5877 17.8994,20.7557 17.0224,20.3377 L17.0224,20.3377 L15.7894,19.7487 C15.6994,19.7047 15.6034,19.6967 15.5364,19.7257 C15.3474,19.8097 15.1524,19.8877 14.9554,19.9587 C14.8904,19.9817 14.8284,20.0547 14.7964,20.1427 L14.7964,20.1427 L14.3284,21.4547 C14.0054,22.3587 13.1444,22.9817 12.1854,23.0037 L12.1854,23.0037 L12.0034,23.0057 L11.8164,23.0037 C10.8614,22.9817 10.0004,22.3587 9.6774,21.4537 L9.6774,21.4537 L9.2094,20.1437 C9.1774,20.0547 9.1154,19.9817 9.0514,19.9587 C8.8534,19.8877 8.6594,19.8097 8.4674,19.7247 C8.4024,19.6967 8.3064,19.7057 8.2164,19.7487 L8.2164,19.7487 L6.9834,20.3377 C6.1064,20.7577 5.0524,20.5877 4.3614,19.9187 C4.2694,19.8287 4.1794,19.7387 4.0894,19.6477 C3.4174,18.9527 3.2494,17.8997 3.6684,17.0227 L3.6684,17.0227 L4.2574,15.7897 C4.3004,15.6997 4.3094,15.6017 4.2794,15.5357 C4.1964,15.3467 4.1184,15.1527 4.0474,14.9547 C4.0234,14.8897 3.9534,14.8287 3.8624,14.7967 L3.8624,14.7967 L2.5514,14.3277 C1.6464,14.0047 1.0244,13.1437 1.0024,12.1847 L1.0024,12.1847 L1.0004,12.0027 L1.0014,11.8257 C1.0244,10.8627 1.6464,10.0017 2.5514,9.6787 L2.5514,9.6787 L3.8624,9.2097 C3.9514,9.1777 4.0244,9.1157 4.0474,9.0517 C4.1184,8.8537 4.1964,8.6587 4.2804,8.4677 C4.3094,8.4037 4.3004,8.3067 4.2574,8.2167 L4.2574,8.2167 L3.6684,6.9827 C3.2494,6.1067 3.4184,5.0537 4.0874,4.3627 C4.1764,4.2697 4.2674,4.1787 4.3604,4.0887 C5.0534,3.4177 6.1084,3.2497 6.9834,3.6687 L6.9834,3.6687 L8.2174,4.2577 C8.3074,4.3007 8.4044,4.3107 8.4694,4.2797 C8.6604,4.1957 8.8554,4.1187 9.0524,4.0467 C9.1164,4.0237 9.1774,3.9527 9.2094,3.8627 L9.2094,3.8627 L9.6774,2.5517 C10.0004,1.6467 10.8614,1.0247 11.8204,1.0027 L11.8204,1.0027 L12.0034,0.9997 Z M12.0034,2.9997 L11.8704,3.0017 C11.7304,3.0047 11.6084,3.0947 11.5614,3.2237 L11.5614,3.2237 L11.0934,4.5357 C10.8584,5.1927 10.3624,5.7007 9.7314,5.9287 C9.5754,5.9847 9.4244,6.0457 9.2754,6.1107 C8.6744,6.3757 7.9754,6.3567 7.3564,6.0627 L7.3564,6.0627 L6.1214,5.4727 C5.9954,5.4127 5.8474,5.4327 5.7534,5.5237 C5.6764,5.5977 5.6004,5.6747 5.5254,5.7527 C5.4334,5.8477 5.4124,5.9947 5.4734,6.1207 L5.4734,6.1207 L6.0624,7.3547 C6.3584,7.9737 6.3754,8.6737 6.1104,9.2757 C6.0444,9.4267 5.9834,9.5777 5.9284,9.7317 C5.7004,10.3627 5.1924,10.8587 4.5344,11.0937 L4.5344,11.0937 L3.2244,11.5617 C3.0944,11.6077 3.0044,11.7307 3.0014,11.8667 L3.0014,11.8667 L3.0004,12.0027 L3.0014,12.1437 C3.0044,12.2757 3.0944,12.3977 3.2244,12.4447 L3.2244,12.4447 L4.5354,12.9127 C5.1924,13.1477 5.7004,13.6437 5.9284,14.2757 C5.9834,14.4287 6.0444,14.5797 6.1094,14.7287 C6.3754,15.3327 6.3584,16.0327 6.0624,16.6517 L6.0624,16.6517 L5.4734,17.8847 C5.4124,18.0117 5.4334,18.1597 5.5234,18.2537 L5.5234,18.2537 L5.7544,18.4827 C5.8474,18.5727 5.9944,18.5957 6.1214,18.5327 L6.1214,18.5327 L7.3554,17.9437 C7.6824,17.7867 8.0324,17.7087 8.3794,17.7087 C8.6874,17.7087 8.9924,17.7707 9.2754,17.8947 C9.4254,17.9617 9.5774,18.0217 9.7314,18.0777 C10.3624,18.3057 10.8584,18.8137 11.0934,19.4717 L11.0934,19.4717 L11.5614,20.7817 C11.6084,20.9117 11.7304,21.0007 11.8664,21.0047 L11.8664,21.0047 L12.0034,21.0057 L12.1354,21.0047 C12.2754,21.0007 12.3984,20.9117 12.4444,20.7827 L12.4444,20.7827 L12.9124,19.4707 C13.1474,18.8137 13.6434,18.3057 14.2754,18.0777 C14.4274,18.0217 14.5794,17.9617 14.7284,17.8957 C15.3324,17.6317 16.0324,17.6487 16.6514,17.9437 L16.6514,17.9437 L17.8844,18.5327 C18.0114,18.5927 18.1594,18.5727 18.2534,18.4817 C18.3314,18.4057 18.4074,18.3287 18.4834,18.2517 C18.5724,18.1597 18.5934,18.0117 18.5324,17.8847 L18.5324,17.8847 L17.9434,16.6497 C17.6474,16.0317 17.6294,15.3317 17.8954,14.7297 C17.9614,14.5817 18.0214,14.4297 18.0774,14.2747 C18.3054,13.6437 18.8134,13.1477 19.4714,12.9127 L19.4714,12.9127 L20.7814,12.4447 C20.9114,12.3977 21.0014,12.2757 21.0044,12.1397 L21.0044,12.1397 L21.0054,12.0027 L21.0044,11.8707 C21.0014,11.7307 20.9114,11.6077 20.7824,11.5617 L20.7824,11.5617 L20.7814,11.5617 L19.4704,11.0937 C18.8134,10.8587 18.3054,10.3627 18.0774,9.7317 C18.0214,9.5767 17.9604,9.4247 17.8944,9.2737 C17.6294,8.6757 17.6474,7.9747 17.9434,7.3557 L17.9434,7.3557 L18.5324,6.1217 C18.5934,5.9947 18.5724,5.8477 18.4824,5.7527 C18.4064,5.6757 18.3304,5.5997 18.2534,5.5247 C18.1594,5.4327 18.0104,5.4127 17.8844,5.4727 L17.8844,5.4727 L16.6504,6.0627 C16.0314,6.3577 15.3314,6.3757 14.7304,6.1107 C14.5814,6.0457 14.4294,5.9847 14.2744,5.9287 C13.6434,5.7007 13.1474,5.1927 12.9124,4.5347 L12.9124,4.5347 L12.4444,3.2237 C12.3984,3.0947 12.2754,3.0047 12.1394,3.0017 L12.1394,3.0017 L12.0034,2.9997 Z M12.0033,8.0613 C13.0703,8.0613 14.0043,8.4533 14.7793,9.2273 C15.5523,10.0023 15.9453,10.9353 15.9453,12.0033 C15.9453,13.0713 15.5523,14.0053 14.7793,14.7783 C14.0063,15.5523 13.0723,15.9453 12.0033,15.9453 C10.9333,15.9453 9.9993,15.5523 9.2263,14.7783 C8.4533,14.0063 8.0613,13.0723 8.0613,12.0033 C8.0613,10.9343 8.4533,10.0003 9.2273,9.2273 C10.0013,8.4533 10.9353,8.0613 12.0033,8.0613 Z M12.0033,10.0613 C11.4703,10.0613 11.0373,10.2453 10.6413,10.6413 C10.2453,11.0373 10.0613,11.4693 10.0613,12.0033 C10.0613,12.5363 10.2453,12.9683 10.6403,13.3643 C11.0363,13.7603 11.4693,13.9453 12.0033,13.9453 C12.5363,13.9453 12.9683,13.7603 13.3643,13.3643 C13.7603,12.9683 13.9453,12.5353 13.9453,12.0033 C13.9453,11.4703 13.7603,11.0373 13.3643,10.6413 C12.9683,10.2453 12.5353,10.0613 12.0033,10.0613 Z"
            id="Combined-Shape"
            fill={color}
          />
        </g>
      </svg>
    );
  },
);

export const DisableAlarmIcon = React.memo(({ width = 1, height = 1 }) => {
  const defaultWidth = 20;
  const defaultHeight = 20;

  return (
    <svg
      width={`${width}rem`}
      height={`${height}rem`}
      viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
      version="1.1"
    >
      <g
        id="Icon/system/alarm_none2"
        stroke="none"
        strokeWidth="1"
        fill="none"
        transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
          (height * REM_UNIT) / defaultHeight
        })`}
        fillRule="evenodd"
      >
        <path
          d="M2.86289944,1.45970461 L2.95710678,1.54289322 L18.4571068,17.0428932 C18.8476311,17.4334175 18.8476311,18.0665825 18.4571068,18.4571068 C18.0966228,18.8175907 17.5293918,18.8453203 17.1371006,18.5402954 L17.0428932,18.4571068 L15.585,17 L12,17 C12,18.1055276 11.1055276,19 10,19 C8.94472362,19 8.08175173,18.1849952 8.00548007,17.1493814 L8,17 L2.92843389,17 C2.13689867,17 1.72738632,16.0280849 2.2023148,15.45 L3.53580838,14.1494788 C3.6322965,14.0553764 3.68670809,13.926306 3.68670809,13.7915277 L3.68670809,8.83746637 C3.68670809,7.74671694 3.94322231,6.7202571 4.40743716,5.82397012 L1.54289322,2.95710678 C1.15236893,2.56658249 1.15236893,1.93341751 1.54289322,1.54289322 C1.90337718,1.18240926 2.47060824,1.15467972 2.86289944,1.45970461 Z M10.0001595,1 C10.7279942,1 11.3237767,1.53826904 11.3913503,2.22918154 L11.3977337,2.36042227 L11.3977337,2.64301029 C14.242056,3.24260381 16.1997705,5.65959272 16.3063378,8.58546187 L16.309,12.394 L7.08622672,3.17136592 C7.48478037,2.97130739 7.911047,2.81197018 8.36097384,2.69882427 L8.60258524,2.64301029 L8.60258524,2.36042227 C8.60258524,1.60765528 9.22683506,1 10.0001595,1 Z"
          id="Combined-Shape"
          fill="rgb(107, 107, 107)"
        />
      </g>
    </svg>
  );
});
