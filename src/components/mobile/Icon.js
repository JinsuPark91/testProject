import React from 'react';

const REM_UNIT = 16;

export const AddRoomIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/add_room"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M18.8786667,14.755849 C19.3855833,14.755849 19.7953333,15.1660377 19.7953333,15.6734972 L19.7953333,15.6734972 L19.7953333,17.9602764 L22.0833333,17.9602764 C22.59025,17.9602764 23,18.3704651 23,18.8779245 C23,19.3853839 22.59025,19.7955727 22.0833333,19.7955727 L22.0833333,19.7955727 L19.7953333,19.7955727 L19.7953333,22.0823518 C19.7953333,22.5898113 19.3855833,23 18.8786667,23 C18.37175,23 17.962,22.5898113 17.962,22.0823518 L17.962,22.0823518 L17.962,19.7955727 L15.6749167,19.7955727 C15.168,19.7955727 14.75825,19.3853839 14.75825,18.8779245 C14.75825,18.3704651 15.168,17.9602764 15.6749167,17.9602764 L15.6749167,17.9602764 L17.962,17.9602764 L17.962,15.6734972 C17.962,15.1660377 18.37175,14.755849 18.8786667,14.755849 Z M18.0435833,1.91703333 C20.6997939,1.91703333 22.8745474,4.09314922 22.9871687,6.81393442 L22.99175,7.0357 L22.99175,10.2917 C22.99175,11.7418197 22.388633,13.0680255 21.4216335,14.0042612 L21.3713184,14.0528001 L21.3713184,14.0528001 C21.3584831,14.0644046 21.3457531,14.0762731 21.3329635,14.0880751 L21.333857,14.0853457 C21.1749267,14.2146016 20.9735464,14.2916667 20.7541667,14.2916667 C20.2479056,14.2916667 19.8375,13.881261 19.8375,13.375 C19.8375,13.1001726 19.958444,12.8535932 20.1500114,12.6855824 C20.7308976,12.1258879 21.1074204,11.3395522 21.1536144,10.4723355 L21.1584167,10.2917 L21.1584167,7.0357 C21.1584167,5.22345 19.7614167,3.75036667 18.0435833,3.75036667 L10.988,3.75036667 C9.36,3.75036667 8.00241667,5.10061667 7.897,6.8267 L7.88955208,6.9147 L7.87866667,7.0027 L7.87316667,10.2917 C7.87316667,12.0405736 9.17548296,13.4749771 10.8114817,13.5718219 L10.988,13.5770333 L13.7563333,13.5770333 C13.8800833,13.5770333 14.0022865,13.602299 14.1155951,13.6501232 L14.2256667,13.7053667 L16.452397,15.0318109 C16.4520598,15.0328137 16.4517235,15.0338168 16.451388,15.0348202 C16.6979055,15.1994204 16.8583333,15.4784753 16.8583333,15.795 C16.8583333,16.301261 16.4479277,16.7116667 15.9416667,16.7116667 C15.7793508,16.7116667 15.6268885,16.6694789 15.4946465,16.5954704 C15.3038623,16.482447 15.2043678,16.4230148 15.1912587,16.4152066 C14.8580224,16.2167197 14.3766811,15.9300164 13.7472348,15.5550967 L13.50425,15.4103667 L10.988,15.4103667 C8.33089693,15.4103667 6.15698892,13.2333817 6.04441281,10.513397 L6.03983333,10.2917 L6.03983333,7.68653333 L5.94816667,7.68653333 C4.28956897,7.68653333 2.93005965,9.06063084 2.83827256,10.7857373 L2.83333333,10.9718667 L2.83333333,14.2287833 C2.83333333,15.9246167 4.09925,17.3555333 5.71441667,17.4847833 C6.15441667,17.5194756 6.50068886,17.8611265 6.55135795,18.2898361 L6.55775,18.3987 L6.55775,19.5537 L9.76608333,17.64245 C9.87264583,17.5798875 9.99055208,17.5389812 10.1124544,17.5224383 L10.2354167,17.5141167 L12.8759969,17.5148271 L12.8610682,17.5221752 L12.8610682,17.5221752 L12.9166667,17.5183333 C13.4229277,17.5183333 13.8333333,17.928739 13.8333333,18.435 C13.8333333,18.9050995 13.4794632,19.2925482 13.0235694,19.3454996 L12.9900558,19.347357 C12.9644414,19.3507447 12.9406617,19.3516667 12.9166667,19.3516667 L12.845,19.3470333 L10.4884167,19.34745 L6.11041667,21.95445 C5.96558333,22.0406167 5.80425,22.0837 5.64108333,22.0837 C5.48525,22.0837 5.32941667,22.0433667 5.18825,21.9636167 C4.938,21.8208458 4.7705651,21.5699943 4.73261654,21.2890521 L4.72441667,21.1670333 L4.72441667,19.1677833 C2.65091667,18.6166222 1.10592287,16.7086478 1.00522717,14.4623266 L1,14.2287833 L1,10.9718667 C1,8.22372412 3.1048533,5.97441964 5.73388451,5.85793834 L5.94816667,5.8532 L6.20116667,5.8532 C6.70415054,3.66207097 8.55323222,2.0255205 10.7655897,1.92221665 L10.988,1.91703333 L18.0435833,1.91703333 Z M17.5347417,9.63985833 C18.0407417,9.63985833 18.4514083,10.050525 18.4514083,10.556525 C18.4514083,11.0263821 18.0973131,11.4140386 17.6415961,11.4670209 L17.5347417,11.4731917 L11.4874917,11.4731917 C10.9814917,11.4731917 10.570825,11.062525 10.570825,10.556525 C10.570825,10.0866679 10.9249202,9.69901139 11.3806372,9.64602913 L11.4874917,9.63985833 L17.5347417,9.63985833 Z M17.5347417,6.02956667 C18.0407417,6.02956667 18.4514083,6.44023333 18.4514083,6.94623333 C18.4514083,7.41609048 18.0973131,7.80374694 17.6415961,7.8567292 L17.5347417,7.8629 L11.4874917,7.8629 C10.9814917,7.8629 10.570825,7.45223333 10.570825,6.94623333 C10.570825,6.47637619 10.9249202,6.08871973 11.3806372,6.03573746 L11.4874917,6.02956667 L17.5347417,6.02956667 Z"
            id="Combined-Shape"
            fill={color}
          ></path>
        </g>
      </svg>
    );
  },
);

export const ArrowBackIcon = React.memo(
  ({ width = 1.25, height = 1.25, color = '#000000' }) => {
    const defaultWidth = 24;
    const defaultHeight = 24;

    return (
      <svg
        width={`${width}rem`}
        height={`${height}rem`}
        viewBox={`0 0 ${width * REM_UNIT} ${height * REM_UNIT}`}
        version="1.1"
      >
        <g
          id="Icon/common/arrow_back_2"
          stroke="none"
          strokeWidth="1"
          fill="none"
          transform={`scale(${(width * REM_UNIT) / defaultWidth}, ${
            (height * REM_UNIT) / defaultHeight
          })`}
          fillRule="evenodd"
        >
          <path
            d="M22.002,11.9913 C22.002,11.4393 21.554,10.9913 21.002,10.9913 L5.206,10.9913 L11.683,4.7183 C12.079,4.3343 12.089,3.7013 11.705,3.3043 C11.321,2.9073 10.688,2.8973 10.291,3.2823 L2.49,10.8373 C2.175,11.1413 2.002,11.5503 1.99998265,11.9863 C1.998,12.4213 2.169,12.8303 2.486,13.1413 L10.29,20.7183 C10.484,20.9063 10.736,21.0003 10.987,21.0003 C11.248,21.0003 11.508,20.8983 11.704,20.6963 C12.089,20.3003 12.08,19.6673 11.684,19.2823 L5.203,12.9913 L21.002,12.9913 C21.554,12.9913 22.002,12.5433 22.002,11.9913"
            id="Fill-1"
            fill={color}
          ></path>
        </g>
      </svg>
    );
  },
);
